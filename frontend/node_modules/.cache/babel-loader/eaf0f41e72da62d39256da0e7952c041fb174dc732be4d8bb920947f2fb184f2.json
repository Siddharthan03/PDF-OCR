{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [structuredData, setStructuredData] = useState(null);\n  const [loading, setLoading] = useState(false); // ‚¨ÖÔ∏è Track loading state\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setStructuredData(null);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setLoading(true); // ‚¨ÖÔ∏è Start processing\n      const res = await axios.post('http://localhost:5000/api/ocr', formData);\n      setStructuredData(res.data.structured_data);\n    } catch (err) {\n      console.error('Error uploading file:', err);\n    } finally {\n      setLoading(false); // ‚¨ÖÔ∏è Done\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCC4 PDF OCR Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginLeft: '1rem'\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'orange',\n        marginTop: '1rem'\n      },\n      children: \"\\u23F3 Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), structuredData && Object.entries(structuredData).map(([section, rows]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"Xi6HkZmpFJ2hDvRAAA6ZFK/QjNE=\");\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OCRUpload","_s","file","setFile","structuredData","setStructuredData","loading","setLoading","handleFileChange","e","target","files","handleUpload","formData","FormData","append","res","post","data","structured_data","err","console","error","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","marginLeft","color","marginTop","Object","entries","map","section","rows","border","cellPadding","width","borderCollapse","row","i","code","description","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst OCRUpload = () => {\n  const [file, setFile] = useState(null);\n  const [structuredData, setStructuredData] = useState(null);\n  const [loading, setLoading] = useState(false); // ‚¨ÖÔ∏è Track loading state\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setStructuredData(null);\n  };\n\n  const handleUpload = async () => {\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      setLoading(true); // ‚¨ÖÔ∏è Start processing\n      const res = await axios.post('http://localhost:5000/api/ocr', formData);\n      setStructuredData(res.data.structured_data);\n    } catch (err) {\n      console.error('Error uploading file:', err);\n    } finally {\n      setLoading(false); // ‚¨ÖÔ∏è Done\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'sans-serif' }}>\n      <h2>üìÑ PDF OCR Extractor</h2>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload} style={{ marginLeft: '1rem' }}>Upload</button>\n\n      {/* ‚úÖ Show processing message */}\n      {loading && (\n        <p style={{ color: 'orange', marginTop: '1rem' }}>‚è≥ Processing...</p>\n      )}\n\n      {/* ‚úÖ Render structured data */}\n      {structuredData && Object.entries(structuredData).map(([section, rows]) => (\n        <div key={section} style={{ marginTop: '2rem' }}>\n          <h3>{section}</h3>\n          <table border=\"1\" cellPadding=\"10\" style={{ width: '100%', borderCollapse: 'collapse' }}>\n            <thead>\n              <tr>\n                <th>Code</th>\n                <th>Description</th>\n              </tr>\n            </thead>\n            <tbody>\n              {rows.map((row, i) => (\n                <tr key={i}>\n                  <td>{row.code}</td>\n                  <td>{row.description}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}