{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\n// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small UI helpers\n   --------------------- */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderMetaValue({\n  value\n}) {\n  if (typeof value === \"string\" && value.startsWith(\"/signatures/\")) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: value,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: value,\n        alt: \"signature\",\n        className: \"signature-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n  if (Array.isArray(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value.join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  if (typeof value === \"object\" && value !== null) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        whiteSpace: \"pre-wrap\",\n        margin: 0\n      },\n      children: JSON.stringify(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: String(value !== null && value !== void 0 ? value : \"\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n\n/* Show metadata vertically; if combinedCounts provided, show combined totals for the table keys */\n_c = RenderMetaValue;\nfunction MetadataVertical({\n  meta,\n  combinedCounts = {}\n}) {\n  if (!meta || Object.keys(meta).length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty\",\n    children: \"No metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 55\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"metadata-vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Object.keys(meta).map(k => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"meta-key\",\n          children: k\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"meta-val\",\n          children: (k === \"Procedure / Billing (All Tables)\" || k === \"Procedure / Billing\") && combinedCounts.procsTotal !== undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [combinedCounts.procsTotal, \" row(s) \\u2014 shown in tables below\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this) : (k === \"Diagnosis (All Tables)\" || k === \"Diagnosis\") && combinedCounts.diagsTotal !== undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [combinedCounts.diagsTotal, \" row(s) \\u2014 shown in tables below\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(RenderMetaValue, {\n            value: meta[k]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, k, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   Defensive normalization helpers\n   --------------------- */\n\n// Ensure rows is always an array of row entries (each entry may be an array or object)\n_c2 = MetadataVertical;\nfunction normalizeRows(rows) {\n  if (!rows) return [];\n  // Already an array: return as-is\n  if (Array.isArray(rows)) return rows;\n  // If rows is an object with numeric keys or nested arrays, try to flatten values\n  if (typeof rows === \"object\") {\n    // If object has keys like \"0\",\"1\", treat as array-like\n    const keys = Object.keys(rows);\n    const numericLike = keys.every(k => /^\\d+$/.test(k));\n    if (numericLike) {\n      // sort by numeric key\n      return keys.sort((a, b) => Number(a) - Number(b)).map(k => rows[k]).filter(x => x !== undefined && x !== null);\n    }\n    // Values could be arrays (grouped by section) or single objects\n    const vals = Object.values(rows).flatMap(v => Array.isArray(v) ? v : [v]);\n    return vals.filter(x => x !== undefined && x !== null);\n  }\n  // anything else -> wrap\n  return [rows];\n}\n\n// Ensure a \"tables\" object maps section -> array(rows)\nfunction normalizeTables(tables) {\n  if (!tables) return {};\n  if (Array.isArray(tables)) {\n    // unexpected: array of rows -> put under \"Procedures\"\n    return {\n      Procedures: tables\n    };\n  }\n  if (typeof tables === \"object\") {\n    const out = {};\n    Object.entries(tables).forEach(([sec, rows]) => {\n      out[sec || \"\"] = normalizeRows(rows);\n    });\n    return out;\n  }\n  return {};\n}\n\n/* small UI cleaning: try to normalize fee strings like \"2 00.00\" -> \"200.00\" or \"00.00\" -> \"0.00\" */\nfunction _cleanFeeString(s) {\n  if (s === undefined || s === null) return \"\";\n  let raw = String(s).trim();\n  if (!raw) return \"\";\n  raw = raw.replace(/\\s+/g, \" \");\n  raw = raw.replace(/^[\\|\\[\\(]+/, \"\");\n  // combine stray digit before currency: \"2 00.00\" -> \"200.00\"\n  raw = raw.replace(/(\\d)\\s+(\\d{2}\\.\\d{2})$/, \"$1$2\");\n  // \"000.00\" -> \"0.00\"\n  raw = raw.replace(/^0+(\\.\\d{2})$/, \"0$1\");\n  // digits only with length>2 -> assume last two digits are decimals\n  if (/^\\d+$/.test(raw) && raw.length > 2) {\n    raw = raw.slice(0, raw.length - 2) + \".\" + raw.slice(-2);\n  }\n  // ensure 2 decimal places\n  if (/^\\d+(\\.\\d+)?$/.test(raw) && !/\\.\\d{2}$/.test(raw)) {\n    const parts = raw.split(\".\");\n    if (parts.length === 1) raw = raw + \".00\";else if (parts[1].length === 1) raw = raw + \"0\";\n  }\n  return raw;\n}\nfunction normalizeProcRow(r) {\n  var _ref, _ref2, _ref3, _r$Code, _ref4, _ref5, _ref6, _r$Description, _ref7, _ref8, _ref9, _ref0, _ref1, _r$Fee;\n  if (!r) return [\"\", \"\", \"\"];\n  if (Array.isArray(r)) {\n    var _r$, _r$2, _r$3;\n    const code = (_r$ = r[0]) !== null && _r$ !== void 0 ? _r$ : \"\";\n    let desc = (_r$2 = r[1]) !== null && _r$2 !== void 0 ? _r$2 : \"\";\n    let fee = (_r$3 = r[2]) !== null && _r$3 !== void 0 ? _r$3 : \"\";\n    return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n  }\n  // object-like\n  const code = (_ref = (_ref2 = (_ref3 = (_r$Code = r.Code) !== null && _r$Code !== void 0 ? _r$Code : r.code) !== null && _ref3 !== void 0 ? _ref3 : r.code_value) !== null && _ref2 !== void 0 ? _ref2 : r[0]) !== null && _ref !== void 0 ? _ref : \"\";\n  let desc = (_ref4 = (_ref5 = (_ref6 = (_r$Description = r.Description) !== null && _r$Description !== void 0 ? _r$Description : r.description) !== null && _ref6 !== void 0 ? _ref6 : r.Desc) !== null && _ref5 !== void 0 ? _ref5 : r[1]) !== null && _ref4 !== void 0 ? _ref4 : \"\";\n  let fee = (_ref7 = (_ref8 = (_ref9 = (_ref0 = (_ref1 = (_r$Fee = r.Fee) !== null && _r$Fee !== void 0 ? _r$Fee : r.fee) !== null && _ref1 !== void 0 ? _ref1 : r.Amount) !== null && _ref0 !== void 0 ? _ref0 : r.amount) !== null && _ref9 !== void 0 ? _ref9 : r.Price) !== null && _ref8 !== void 0 ? _ref8 : r[2]) !== null && _ref7 !== void 0 ? _ref7 : \"\";\n  return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n}\n\n/* ---------------------\n   Procedure / Diagnosis table components\n   --------------------- */\n\nfunction ProcedureTables({\n  tables\n}) {\n  const normalizedTables = normalizeTables(tables);\n  if (!normalizedTables || Object.keys(normalizedTables).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No procedure / billing tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"procedures-root\",\n    children: Object.entries(normalizedTables).map(([section, rows]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"table-section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"excel-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows && rows.length > 0 ? rows.map((r, i) => {\n            const [code, desc, fee] = normalizeProcRow(r);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: fee\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 3,\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"No rows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ProcedureTables;\nfunction DiagnosisTables({\n  tables,\n  highlightCodes = new Set()\n}) {\n  const normalizedTables = normalizeTables(tables);\n  if (!normalizedTables || Object.keys(normalizedTables).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No diagnosis tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagnosis-root\",\n    children: Object.entries(normalizedTables).map(([section, rows]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"table-section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"excel-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Diagnosis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows && rows.length > 0 ? rows.map((r, i) => {\n            var _ref10, _ref11, _r$Type, _ref12, _ref13, _r$Code2, _ref14, _ref15, _ref16, _ref17, _r$Diagnosis;\n            const type = Array.isArray(r) ? r[0] : (_ref10 = (_ref11 = (_r$Type = r.Type) !== null && _r$Type !== void 0 ? _r$Type : r.type) !== null && _ref11 !== void 0 ? _ref11 : r[0]) !== null && _ref10 !== void 0 ? _ref10 : \"ICD-10\";\n            const code = Array.isArray(r) ? r[1] : (_ref12 = (_ref13 = (_r$Code2 = r.Code) !== null && _r$Code2 !== void 0 ? _r$Code2 : r.code) !== null && _ref13 !== void 0 ? _ref13 : r[1]) !== null && _ref12 !== void 0 ? _ref12 : \"\";\n            const desc = Array.isArray(r) ? r[2] : (_ref14 = (_ref15 = (_ref16 = (_ref17 = (_r$Diagnosis = r.Diagnosis) !== null && _r$Diagnosis !== void 0 ? _r$Diagnosis : r.diagnosis) !== null && _ref17 !== void 0 ? _ref17 : r.Description) !== null && _ref16 !== void 0 ? _ref16 : r.description) !== null && _ref15 !== void 0 ? _ref15 : r[2]) !== null && _ref14 !== void 0 ? _ref14 : \"\";\n            const isMatch = highlightCodes.has(String(code).trim());\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: isMatch ? \"highlight-row\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 3,\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"No rows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   Patient block - shows metadata + ALL tables (combined)\n   --------------------- */\n_c4 = DiagnosisTables;\nfunction PatientBlock({\n  patient,\n  procedureTables = {},\n  diagnosisTables = {}\n}) {\n  var _ref18, _patient$PatientName;\n  // Collect ICD-like tokens from patient fields (to highlight matching diagnosis rows)\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach(v => {\n    try {\n      const str = String(v || \"\");\n      const m = str.match(icdRegex);\n      if (m) m.forEach(code => highlightCodes.add(code.trim()));\n    } catch (e) {\n      // ignore\n    }\n  });\n\n  // Patient-specific mapped arrays (these keys are added by extractor)\n  const patientProcs = Array.isArray(patient[\"Procedure / Billing (All Tables)\"]) ? patient[\"Procedure / Billing (All Tables)\"] : Array.isArray(patient[\"Procedure / Billing\"]) ? patient[\"Procedure / Billing\"] : normalizeRows(patient[\"Procedure / Billing (All Tables)\"] || patient[\"Procedure / Billing\"]);\n  const patientDiags = Array.isArray(patient[\"Diagnosis (All Tables)\"]) ? patient[\"Diagnosis (All Tables)\"] : Array.isArray(patient[\"Diagnosis\"]) ? patient[\"Diagnosis\"] : normalizeRows(patient[\"Diagnosis (All Tables)\"] || patient[\"Diagnosis\"]);\n\n  // Normalize incoming global tables\n  const normalizedProcTables = normalizeTables(procedureTables);\n  const normalizedDiagTables = normalizeTables(diagnosisTables);\n\n  // Build combined counts: patient-specific + global procedureTables/diagnosisTables\n  const totalProcsFromPatient = Array.isArray(patientProcs) ? patientProcs.length : 0;\n  const totalDiagsFromPatient = Array.isArray(patientDiags) ? patientDiags.length : 0;\n  const totalProcsFromGlobal = Object.values(normalizedProcTables || {}).reduce((s, a) => s + (a && a.length || 0), 0);\n  const totalDiagsFromGlobal = Object.values(normalizedDiagTables || {}).reduce((s, a) => s + (a && a.length || 0), 0);\n  const procsTotal = totalProcsFromPatient + totalProcsFromGlobal;\n  const diagsTotal = totalDiagsFromPatient + totalDiagsFromGlobal;\n\n  // Combined tables view for display (show patient-specific first, then global grouped)\n  const combinedProcedureTables = {};\n  if (patientProcs && patientProcs.length) combinedProcedureTables[\"Patient Procedures\"] = patientProcs;\n  Object.entries(normalizedProcTables || {}).forEach(([sec, rows]) => {\n    combinedProcedureTables[sec] = (combinedProcedureTables[sec] || []).concat(rows || []);\n  });\n  const combinedDiagnosisTables = {};\n  if (patientDiags && patientDiags.length) combinedDiagnosisTables[\"Patient Diagnosis\"] = patientDiags;\n  Object.entries(normalizedDiagTables || {}).forEach(([sec, rows]) => {\n    combinedDiagnosisTables[sec] = (combinedDiagnosisTables[sec] || []).concat(rows || []);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Patient: \", (_ref18 = (_patient$PatientName = patient[\"Patient Name\"]) !== null && _patient$PatientName !== void 0 ? _patient$PatientName : patient[\"Patient\"]) !== null && _ref18 !== void 0 ? _ref18 : \"Unknown\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient-sub\",\n        children: \"Preview of patient fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-meta-grid\",\n      children: /*#__PURE__*/_jsxDEV(MetadataVertical, {\n        meta: patient,\n        combinedCounts: {\n          procsTotal,\n          diagsTotal\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-tables\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        children: \"Procedure / Billing (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProcedureTables, {\n        tables: combinedProcedureTables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        style: {\n          marginTop: 12\n        },\n        children: \"Diagnosis (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiagnosisTables, {\n        tables: combinedDiagnosisTables,\n        highlightCodes: highlightCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), highlightCodes.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matched-note\",\n        children: [\"Highlighted diagnosis codes found in patient fields: \", Array.from(highlightCodes).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   ResultBlock + main component\n   --------------------- */\n_c5 = PatientBlock;\nfunction ResultBlock({\n  item\n}) {\n  // normalize possible shapes\n  const patients = Array.isArray(item.patients) ? item.patients : item.patients_list || [];\n  const procedureTables = item.procedure_tables || item.procedureTables || item.procedureTables || item.procedure_tables || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosisTables || item.diagnosis_tables || {};\n\n  // Fallback: if backend returned older medical_billing_codes / diagnosis_codes arrays, wrap them into single sections\n  const procTablesMutable = {\n    ...normalizeTables(procedureTables)\n  };\n  const diagTablesMutable = {\n    ...normalizeTables(diagnosisTables)\n  };\n  if (Object.keys(procTablesMutable).length === 0 && Array.isArray(item.medical_billing_codes) && item.medical_billing_codes.length) {\n    procTablesMutable[\"Procedures\"] = item.medical_billing_codes.map(r => {\n      var _ref19, _r$Code3, _ref20, _r$Description2, _ref21, _r$Fee2;\n      return Array.isArray(r) ? r : [(_ref19 = (_r$Code3 = r.Code) !== null && _r$Code3 !== void 0 ? _r$Code3 : r.code) !== null && _ref19 !== void 0 ? _ref19 : \"\", (_ref20 = (_r$Description2 = r.Description) !== null && _r$Description2 !== void 0 ? _r$Description2 : r.description) !== null && _ref20 !== void 0 ? _ref20 : \"\", (_ref21 = (_r$Fee2 = r.Fee) !== null && _r$Fee2 !== void 0 ? _r$Fee2 : r.fee) !== null && _ref21 !== void 0 ? _ref21 : \"\"];\n    });\n  }\n  if (Object.keys(diagTablesMutable).length === 0 && Array.isArray(item.diagnosis_codes) && item.diagnosis_codes.length) {\n    diagTablesMutable[\"Diagnosis\"] = item.diagnosis_codes.map(d => {\n      var _ref22, _d$Type, _ref23, _d$Code, _ref24, _ref25, _ref26, _d$Diagnosis;\n      return Array.isArray(d) ? d : [(_ref22 = (_d$Type = d.Type) !== null && _d$Type !== void 0 ? _d$Type : d.type) !== null && _ref22 !== void 0 ? _ref22 : \"ICD-10\", (_ref23 = (_d$Code = d.Code) !== null && _d$Code !== void 0 ? _d$Code : d.code) !== null && _ref23 !== void 0 ? _ref23 : \"\", (_ref24 = (_ref25 = (_ref26 = (_d$Diagnosis = d.Diagnosis) !== null && _d$Diagnosis !== void 0 ? _d$Diagnosis : d.diagnosis) !== null && _ref26 !== void 0 ? _ref26 : d.Description) !== null && _ref25 !== void 0 ? _ref25 : d.description) !== null && _ref24 !== void 0 ? _ref24 : \"\"];\n    });\n  }\n  const totalProcRows = Object.values(procTablesMutable).reduce((s, a) => s + (a && a.length || 0), 0);\n  const totalDiagRows = Object.values(diagTablesMutable).reduce((s, a) => s + (a && a.length || 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"file-title\",\n      children: item.file_name || item.filename || \"Uploaded file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [patients.length, \" patient(s) \\u2022 \", totalProcRows, \" procedure rows \\u2022 \", totalDiagRows, \" diagnosis rows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"patients-list\",\n      children: patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: \"No patients found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this) : patients.map((p, idx) => /*#__PURE__*/_jsxDEV(PatientBlock, {\n        patient: p,\n        procedureTables: procTablesMutable,\n        diagnosisTables: diagTablesMutable\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Raw response (debug)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          maxHeight: 260,\n          overflow: \"auto\",\n          background: \"#0b1220\",\n          color: \"#cbd5e1\",\n          padding: 8\n        },\n        children: JSON.stringify(item, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n}\n_c6 = ResultBlock;\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert(\"⚠️ Session expired or access denied. Please log in again.\");\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) {\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n    // eslint-disable-next-line\n  }, [auth, isAdmin, navigate]);\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", {\n        username,\n        password\n      });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      const {\n        token,\n        username: un,\n        role\n      } = loginRes.data;\n      setAuth({\n        token,\n        username: un,\n        role\n      });\n      localStorage.setItem(\"auth\", JSON.stringify({\n        token,\n        username: un,\n        role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(\"Signup failed: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      if (res.data.token) {\n        const {\n          token,\n          username: un,\n          role\n        } = res.data;\n        setAuth({\n          token,\n          username: un,\n          role\n        });\n        localStorage.setItem(\"auth\", JSON.stringify({\n          token,\n          username: un,\n          role\n        }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage(\"Login failed: \" + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {}\n      };\n    }\n\n    // canonical shape: patients, procedure_tables, diagnosis_tables\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {}\n      };\n    }\n\n    // older shapes\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes) ? resData.medical_billing_codes.map(r => {\n          var _ref27, _r$Code4, _ref28, _r$Description3, _ref29, _r$Fee3;\n          return Array.isArray(r) ? r : [(_ref27 = (_r$Code4 = r.Code) !== null && _r$Code4 !== void 0 ? _r$Code4 : r.code) !== null && _ref27 !== void 0 ? _ref27 : \"\", (_ref28 = (_r$Description3 = r.Description) !== null && _r$Description3 !== void 0 ? _r$Description3 : r.description) !== null && _ref28 !== void 0 ? _ref28 : \"\", (_ref29 = (_r$Fee3 = r.Fee) !== null && _r$Fee3 !== void 0 ? _r$Fee3 : r.fee) !== null && _ref29 !== void 0 ? _ref29 : \"\"];\n        }) : []\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes) ? resData.diagnosis_codes.map(d => {\n          var _ref30, _d$Type2, _ref31, _d$Code2, _ref32, _ref33, _ref34, _d$Diagnosis2;\n          return Array.isArray(d) ? d : [(_ref30 = (_d$Type2 = d.Type) !== null && _d$Type2 !== void 0 ? _d$Type2 : d.type) !== null && _ref30 !== void 0 ? _ref30 : \"ICD-10\", (_ref31 = (_d$Code2 = d.Code) !== null && _d$Code2 !== void 0 ? _d$Code2 : d.code) !== null && _ref31 !== void 0 ? _ref31 : \"\", (_ref32 = (_ref33 = (_ref34 = (_d$Diagnosis2 = d.Diagnosis) !== null && _d$Diagnosis2 !== void 0 ? _d$Diagnosis2 : d.diagnosis) !== null && _ref34 !== void 0 ? _ref34 : d.Description) !== null && _ref33 !== void 0 ? _ref33 : d.description) !== null && _ref32 !== void 0 ? _ref32 : \"\"];\n        }) : []\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {}\n      };\n    }\n\n    // fallback: if metadata present\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta\n    };\n  };\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isSignup ? \"Signup\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"glass-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"glass-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          onClick: handleSignup,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          style: {\n            marginTop: 8\n          },\n          onClick: () => {\n            setIsSignup(!isSignup);\n            setMessage(\"\");\n          },\n          children: isSignup ? \"Already have an account? Login\" : \"No account? Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        style: {\n          marginTop: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 61\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting tables...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 19\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Parsed Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this), results.map((item, idx) => /*#__PURE__*/_jsxDEV(ResultBlock, {\n        item: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 554,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"rHWvzCgLol+q0ups8j2Fj9RAf2Q=\", false, function () {\n  return [useNavigate];\n});\n_c7 = OCRUpload;\nexport default OCRUpload;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"RenderMetaValue\");\n$RefreshReg$(_c2, \"MetadataVertical\");\n$RefreshReg$(_c3, \"ProcedureTables\");\n$RefreshReg$(_c4, \"DiagnosisTables\");\n$RefreshReg$(_c5, \"PatientBlock\");\n$RefreshReg$(_c6, \"ResultBlock\");\n$RefreshReg$(_c7, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","RenderMetaValue","value","startsWith","href","target","rel","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","join","style","whiteSpace","margin","JSON","stringify","String","_c","MetadataVertical","meta","combinedCounts","Object","keys","length","map","k","procsTotal","undefined","diagsTotal","_c2","normalizeRows","rows","numericLike","every","test","sort","a","b","Number","filter","x","vals","values","flatMap","v","normalizeTables","tables","Procedures","out","entries","forEach","sec","_cleanFeeString","s","raw","trim","replace","slice","parts","split","normalizeProcRow","r","_ref","_ref2","_ref3","_r$Code","_ref4","_ref5","_ref6","_r$Description","_ref7","_ref8","_ref9","_ref0","_ref1","_r$Fee","_r$","_r$2","_r$3","code","desc","fee","Code","code_value","Description","description","Desc","Fee","Amount","amount","Price","ProcedureTables","normalizedTables","section","i","colSpan","textAlign","_c3","DiagnosisTables","highlightCodes","Set","_ref10","_ref11","_r$Type","_ref12","_ref13","_r$Code2","_ref14","_ref15","_ref16","_ref17","_r$Diagnosis","type","Type","Diagnosis","diagnosis","isMatch","has","_c4","PatientBlock","patient","procedureTables","diagnosisTables","_ref18","_patient$PatientName","icdRegex","str","m","match","add","e","patientProcs","patientDiags","normalizedProcTables","normalizedDiagTables","totalProcsFromPatient","totalDiagsFromPatient","totalProcsFromGlobal","reduce","totalDiagsFromGlobal","combinedProcedureTables","concat","combinedDiagnosisTables","marginTop","size","from","_c5","ResultBlock","item","patients","patients_list","procedure_tables","diagnosis_tables","procTablesMutable","diagTablesMutable","medical_billing_codes","_ref19","_r$Code3","_ref20","_r$Description2","_ref21","_r$Fee2","diagnosis_codes","d","_ref22","_d$Type","_ref23","_d$Code","_ref24","_ref25","_ref26","_d$Diagnosis","totalProcRows","totalDiagRows","file_name","filename","p","idx","maxHeight","overflow","background","color","padding","_c6","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","results","setResults","loading","setLoading","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","handleSignup","res","post","data","loginRes","un","role","setItem","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","selected","buildItemFromResponse","resData","file","name","metadata","procedures","_ref27","_r$Code4","_ref28","_r$Description3","_ref29","_r$Fee3","diags","_ref30","_d$Type2","_ref31","_d$Code2","_ref32","_ref33","_ref34","_d$Diagnosis2","handleUploadAll","formData","FormData","append","push","console","placeholder","onChange","onClick","htmlFor","id","accept","multiple","disabled","_c7","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small UI helpers\n   --------------------- */\n\nfunction RenderMetaValue({ value }) {\n  if (typeof value === \"string\" && value.startsWith(\"/signatures/\")) {\n    return (\n      <a href={value} target=\"_blank\" rel=\"noreferrer\">\n        <img src={value} alt=\"signature\" className=\"signature-img\" />\n      </a>\n    );\n  }\n  if (Array.isArray(value)) {\n    return <div>{value.join(\", \")}</div>;\n  }\n  if (typeof value === \"object\" && value !== null) {\n    return <pre style={{ whiteSpace: \"pre-wrap\", margin: 0 }}>{JSON.stringify(value)}</pre>;\n  }\n  return <span>{String(value ?? \"\")}</span>;\n}\n\n/* Show metadata vertically; if combinedCounts provided, show combined totals for the table keys */\nfunction MetadataVertical({ meta, combinedCounts = {} }) {\n  if (!meta || Object.keys(meta).length === 0) return <div className=\"empty\">No metadata</div>;\n  return (\n    <table className=\"metadata-vertical\">\n      <tbody>\n        {Object.keys(meta).map((k) => (\n          <tr key={k}>\n            <th className=\"meta-key\">{k}</th>\n            <td className=\"meta-val\">\n              {(k === \"Procedure / Billing (All Tables)\" || k === \"Procedure / Billing\") && combinedCounts.procsTotal !== undefined ? (\n                <span>{combinedCounts.procsTotal} row(s) — shown in tables below</span>\n              ) : (k === \"Diagnosis (All Tables)\" || k === \"Diagnosis\") && combinedCounts.diagsTotal !== undefined ? (\n                <span>{combinedCounts.diagsTotal} row(s) — shown in tables below</span>\n              ) : (\n                <RenderMetaValue value={meta[k]} />\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\n/* ---------------------\n   Defensive normalization helpers\n   --------------------- */\n\n// Ensure rows is always an array of row entries (each entry may be an array or object)\nfunction normalizeRows(rows) {\n  if (!rows) return [];\n  // Already an array: return as-is\n  if (Array.isArray(rows)) return rows;\n  // If rows is an object with numeric keys or nested arrays, try to flatten values\n  if (typeof rows === \"object\") {\n    // If object has keys like \"0\",\"1\", treat as array-like\n    const keys = Object.keys(rows);\n    const numericLike = keys.every((k) => /^\\d+$/.test(k));\n    if (numericLike) {\n      // sort by numeric key\n      return keys\n        .sort((a, b) => Number(a) - Number(b))\n        .map((k) => rows[k])\n        .filter((x) => x !== undefined && x !== null);\n    }\n    // Values could be arrays (grouped by section) or single objects\n    const vals = Object.values(rows).flatMap((v) => (Array.isArray(v) ? v : [v]));\n    return vals.filter((x) => x !== undefined && x !== null);\n  }\n  // anything else -> wrap\n  return [rows];\n}\n\n// Ensure a \"tables\" object maps section -> array(rows)\nfunction normalizeTables(tables) {\n  if (!tables) return {};\n  if (Array.isArray(tables)) {\n    // unexpected: array of rows -> put under \"Procedures\"\n    return { Procedures: tables };\n  }\n  if (typeof tables === \"object\") {\n    const out = {};\n    Object.entries(tables).forEach(([sec, rows]) => {\n      out[sec || \"\"] = normalizeRows(rows);\n    });\n    return out;\n  }\n  return {};\n}\n\n/* small UI cleaning: try to normalize fee strings like \"2 00.00\" -> \"200.00\" or \"00.00\" -> \"0.00\" */\nfunction _cleanFeeString(s) {\n  if (s === undefined || s === null) return \"\";\n  let raw = String(s).trim();\n  if (!raw) return \"\";\n  raw = raw.replace(/\\s+/g, \" \");\n  raw = raw.replace(/^[\\|\\[\\(]+/, \"\");\n  // combine stray digit before currency: \"2 00.00\" -> \"200.00\"\n  raw = raw.replace(/(\\d)\\s+(\\d{2}\\.\\d{2})$/, \"$1$2\");\n  // \"000.00\" -> \"0.00\"\n  raw = raw.replace(/^0+(\\.\\d{2})$/, \"0$1\");\n  // digits only with length>2 -> assume last two digits are decimals\n  if (/^\\d+$/.test(raw) && raw.length > 2) {\n    raw = raw.slice(0, raw.length - 2) + \".\" + raw.slice(-2);\n  }\n  // ensure 2 decimal places\n  if (/^\\d+(\\.\\d+)?$/.test(raw) && !/\\.\\d{2}$/.test(raw)) {\n    const parts = raw.split(\".\");\n    if (parts.length === 1) raw = raw + \".00\";\n    else if (parts[1].length === 1) raw = raw + \"0\";\n  }\n  return raw;\n}\n\nfunction normalizeProcRow(r) {\n  if (!r) return [\"\", \"\", \"\"];\n  if (Array.isArray(r)) {\n    const code = r[0] ?? \"\";\n    let desc = r[1] ?? \"\";\n    let fee = r[2] ?? \"\";\n    return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n  }\n  // object-like\n  const code = r.Code ?? r.code ?? r.code_value ?? r[0] ?? \"\";\n  let desc = r.Description ?? r.description ?? r.Desc ?? r[1] ?? \"\";\n  let fee = r.Fee ?? r.fee ?? r.Amount ?? r.amount ?? r.Price ?? r[2] ?? \"\";\n  return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n}\n\n/* ---------------------\n   Procedure / Diagnosis table components\n   --------------------- */\n\nfunction ProcedureTables({ tables }) {\n  const normalizedTables = normalizeTables(tables);\n  if (!normalizedTables || Object.keys(normalizedTables).length === 0) {\n    return <div className=\"empty\">No procedure / billing tables found.</div>;\n  }\n  return (\n    <div className=\"procedures-root\">\n      {Object.entries(normalizedTables).map(([section, rows]) => (\n        <div className=\"table-block\" key={section}>\n          <h4 className=\"table-section-title\">{section}</h4>\n          <table className=\"excel-table\">\n            <thead>\n              <tr>\n                <th>Code</th>\n                <th>Description</th>\n                <th>Fee</th>\n              </tr>\n            </thead>\n            <tbody>\n              {rows && rows.length > 0 ? (\n                rows.map((r, i) => {\n                  const [code, desc, fee] = normalizeProcRow(r);\n                  return (\n                    <tr key={i}>\n                      <td>{code}</td>\n                      <td>{desc}</td>\n                      <td>{fee}</td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td colSpan={3} style={{ textAlign: \"center\" }}>\n                    No rows\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction DiagnosisTables({ tables, highlightCodes = new Set() }) {\n  const normalizedTables = normalizeTables(tables);\n  if (!normalizedTables || Object.keys(normalizedTables).length === 0) {\n    return <div className=\"empty\">No diagnosis tables found.</div>;\n  }\n  return (\n    <div className=\"diagnosis-root\">\n      {Object.entries(normalizedTables).map(([section, rows]) => (\n        <div className=\"table-block\" key={section}>\n          <h4 className=\"table-section-title\">{section}</h4>\n          <table className=\"excel-table\">\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Code</th>\n                <th>Diagnosis</th>\n              </tr>\n            </thead>\n            <tbody>\n              {rows && rows.length > 0 ? (\n                rows.map((r, i) => {\n                  const type = Array.isArray(r) ? r[0] : r.Type ?? r.type ?? r[0] ?? \"ICD-10\";\n                  const code = Array.isArray(r) ? r[1] : r.Code ?? r.code ?? r[1] ?? \"\";\n                  const desc = Array.isArray(r) ? r[2] : r.Diagnosis ?? r.diagnosis ?? r.Description ?? r.description ?? r[2] ?? \"\";\n                  const isMatch = highlightCodes.has(String(code).trim());\n                  return (\n                    <tr key={i} className={isMatch ? \"highlight-row\" : \"\"}>\n                      <td>{type}</td>\n                      <td>{code}</td>\n                      <td>{desc}</td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td colSpan={3} style={{ textAlign: \"center\" }}>\n                    No rows\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n/* ---------------------\n   Patient block - shows metadata + ALL tables (combined)\n   --------------------- */\n\nfunction PatientBlock({ patient, procedureTables = {}, diagnosisTables = {} }) {\n  // Collect ICD-like tokens from patient fields (to highlight matching diagnosis rows)\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach((v) => {\n    try {\n      const str = String(v || \"\");\n      const m = str.match(icdRegex);\n      if (m) m.forEach((code) => highlightCodes.add(code.trim()));\n    } catch (e) {\n      // ignore\n    }\n  });\n\n  // Patient-specific mapped arrays (these keys are added by extractor)\n  const patientProcs = Array.isArray(patient[\"Procedure / Billing (All Tables)\"])\n    ? patient[\"Procedure / Billing (All Tables)\"]\n    : Array.isArray(patient[\"Procedure / Billing\"])\n    ? patient[\"Procedure / Billing\"]\n    : normalizeRows(patient[\"Procedure / Billing (All Tables)\"] || patient[\"Procedure / Billing\"]);\n\n  const patientDiags = Array.isArray(patient[\"Diagnosis (All Tables)\"])\n    ? patient[\"Diagnosis (All Tables)\"]\n    : Array.isArray(patient[\"Diagnosis\"])\n    ? patient[\"Diagnosis\"]\n    : normalizeRows(patient[\"Diagnosis (All Tables)\"] || patient[\"Diagnosis\"]);\n\n  // Normalize incoming global tables\n  const normalizedProcTables = normalizeTables(procedureTables);\n  const normalizedDiagTables = normalizeTables(diagnosisTables);\n\n  // Build combined counts: patient-specific + global procedureTables/diagnosisTables\n  const totalProcsFromPatient = (Array.isArray(patientProcs) ? patientProcs.length : 0);\n  const totalDiagsFromPatient = (Array.isArray(patientDiags) ? patientDiags.length : 0);\n\n  const totalProcsFromGlobal = Object.values(normalizedProcTables || {}).reduce((s, a) => s + ((a && a.length) || 0), 0);\n  const totalDiagsFromGlobal = Object.values(normalizedDiagTables || {}).reduce((s, a) => s + ((a && a.length) || 0), 0);\n\n  const procsTotal = totalProcsFromPatient + totalProcsFromGlobal;\n  const diagsTotal = totalDiagsFromPatient + totalDiagsFromGlobal;\n\n  // Combined tables view for display (show patient-specific first, then global grouped)\n  const combinedProcedureTables = {};\n  if (patientProcs && patientProcs.length) combinedProcedureTables[\"Patient Procedures\"] = patientProcs;\n  Object.entries(normalizedProcTables || {}).forEach(([sec, rows]) => {\n    combinedProcedureTables[sec] = (combinedProcedureTables[sec] || []).concat(rows || []);\n  });\n\n  const combinedDiagnosisTables = {};\n  if (patientDiags && patientDiags.length) combinedDiagnosisTables[\"Patient Diagnosis\"] = patientDiags;\n  Object.entries(normalizedDiagTables || {}).forEach(([sec, rows]) => {\n    combinedDiagnosisTables[sec] = (combinedDiagnosisTables[sec] || []).concat(rows || []);\n  });\n\n  return (\n    <div className=\"patient-block\">\n      <div className=\"patient-header\">\n        <h4>Patient: {patient[\"Patient Name\"] ?? patient[\"Patient\"] ?? \"Unknown\"}</h4>\n        <div className=\"patient-sub\">Preview of patient fields</div>\n      </div>\n\n      <div className=\"patient-meta-grid\">\n        <MetadataVertical meta={patient} combinedCounts={{ procsTotal, diagsTotal }} />\n      </div>\n\n      <div className=\"patient-tables\">\n        <h5 className=\"section-title\">Procedure / Billing (All Tables)</h5>\n        <ProcedureTables tables={combinedProcedureTables} />\n\n        <h5 className=\"section-title\" style={{ marginTop: 12 }}>\n          Diagnosis (All Tables)\n        </h5>\n        <DiagnosisTables tables={combinedDiagnosisTables} highlightCodes={highlightCodes} />\n\n        {highlightCodes.size > 0 && (\n          <div className=\"matched-note\">Highlighted diagnosis codes found in patient fields: {Array.from(highlightCodes).join(\", \")}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/* ---------------------\n   ResultBlock + main component\n   --------------------- */\n\nfunction ResultBlock({ item }) {\n  // normalize possible shapes\n  const patients = Array.isArray(item.patients) ? item.patients : item.patients_list || [];\n\n  const procedureTables =\n    item.procedure_tables || item.procedureTables || item.procedureTables || item.procedure_tables || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosisTables || item.diagnosis_tables || {};\n\n  // Fallback: if backend returned older medical_billing_codes / diagnosis_codes arrays, wrap them into single sections\n  const procTablesMutable = { ...normalizeTables(procedureTables) };\n  const diagTablesMutable = { ...normalizeTables(diagnosisTables) };\n\n  if (Object.keys(procTablesMutable).length === 0 && Array.isArray(item.medical_billing_codes) && item.medical_billing_codes.length) {\n    procTablesMutable[\"Procedures\"] = item.medical_billing_codes.map((r) =>\n      Array.isArray(r) ? r : [r.Code ?? r.code ?? \"\", r.Description ?? r.description ?? \"\", r.Fee ?? r.fee ?? \"\"]\n    );\n  }\n  if (Object.keys(diagTablesMutable).length === 0 && Array.isArray(item.diagnosis_codes) && item.diagnosis_codes.length) {\n    diagTablesMutable[\"Diagnosis\"] = item.diagnosis_codes.map((d) =>\n      Array.isArray(d) ? d : [d.Type ?? d.type ?? \"ICD-10\", d.Code ?? d.code ?? \"\", d.Diagnosis ?? d.diagnosis ?? d.Description ?? d.description ?? \"\"]\n    );\n  }\n\n  const totalProcRows = Object.values(procTablesMutable).reduce((s, a) => s + ((a && a.length) || 0), 0);\n  const totalDiagRows = Object.values(diagTablesMutable).reduce((s, a) => s + ((a && a.length) || 0), 0);\n\n  return (\n    <div className=\"result-block\">\n      <h2 className=\"file-title\">{item.file_name || item.filename || \"Uploaded file\"}</h2>\n      <div className=\"summary\">\n        {patients.length} patient(s) • {totalProcRows} procedure rows • {totalDiagRows} diagnosis rows\n      </div>\n\n      <section className=\"patients-list\">\n        {patients.length === 0 ? (\n          <div className=\"empty\">No patients found</div>\n        ) : (\n          patients.map((p, idx) => (\n            <PatientBlock key={idx} patient={p} procedureTables={procTablesMutable} diagnosisTables={diagTablesMutable} />\n          ))\n        )}\n      </section>\n\n      <details style={{ marginTop: 12 }}>\n        <summary>Raw response (debug)</summary>\n        <pre style={{ maxHeight: 260, overflow: \"auto\", background: \"#0b1220\", color: \"#cbd5e1\", padding: 8 }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </details>\n    </div>\n  );\n}\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert(\"⚠️ Session expired or access denied. Please log in again.\");\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) {\n      navigate(\"/\", { replace: true });\n    }\n    // eslint-disable-next-line\n  }, [auth, isAdmin, navigate]);\n\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", { username, password });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", { username, password });\n      const { token, username: un, role } = loginRes.data;\n      setAuth({ token, username: un, role });\n      localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n    } catch (err) {\n      setMessage(\"Signup failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", { username, password });\n      if (res.data.token) {\n        const { token, username: un, role } = res.data;\n        setAuth({ token, username: un, role });\n        localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      setMessage(\"Login failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {},\n      };\n    }\n\n    // canonical shape: patients, procedure_tables, diagnosis_tables\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {},\n      };\n    }\n\n    // older shapes\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes)\n          ? resData.medical_billing_codes.map((r) => (Array.isArray(r) ? r : [r.Code ?? r.code ?? \"\", r.Description ?? r.description ?? \"\", r.Fee ?? r.fee ?? \"\"]))\n          : [],\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes)\n          ? resData.diagnosis_codes.map((d) => (Array.isArray(d) ? d : [d.Type ?? d.type ?? \"ICD-10\", d.Code ?? d.code ?? \"\", d.Diagnosis ?? d.diagnosis ?? d.Description ?? d.description ?? \"\"]))\n          : [],\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {},\n      };\n    }\n\n    // fallback: if metadata present\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta,\n    };\n  };\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container login-container\">\n        <div className=\"glass-card login-form\">\n          <h2>{isSignup ? \"Signup\" : \"Login\"}</h2>\n          <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"glass-input\" />\n          <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"glass-input\" />\n          {isSignup ? (\n            <button className=\"glass-btn\" onClick={handleSignup}>Signup</button>\n          ) : (\n            <button className=\"glass-btn\" onClick={handleLogin}>Login</button>\n          )}\n          <button className=\"glass-btn\" style={{ marginTop: 8 }} onClick={() => { setIsSignup(!isSignup); setMessage(\"\"); }}>\n            {isSignup ? \"Already have an account? Login\" : \"No account? Signup\"}\n          </button>\n          {message && <p className=\"message\">{message}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">{isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"}</h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\" style={{ marginTop: 8 }}>\n          <button className=\"upload-btn\" onClick={handleUploadAll} disabled={loading}>{loading ? \"Processing...\" : \"Upload All\"}</button>\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">{files.map((file, i) => <li key={i}>📎 {file.name}</li>)}</ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting tables...</p>}\n\n      {results.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Parsed Tables</h3>\n          {results.map((item, idx) => <ResultBlock key={idx} item={item} />)}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}