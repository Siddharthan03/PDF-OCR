{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [summaries, setSummaries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert('⚠️ Session expired or access denied. Please log in again.');\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) {\n      navigate('/', {\n        replace: true\n      });\n    }\n  }, [auth, isAdmin, navigate]);\n\n  // -------- Auth --------\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', {\n        username,\n        password\n      });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage('Signup failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', {\n        username,\n        password\n      });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage('Login failed: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n\n  // -------- File Selection --------\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setSummaries([]);\n    setDownloadReady(false);\n  };\n\n  // -------- Upload --------\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const outTables = [];\n      const outSummaries = [];\n      for (const [idx, file] of files.entries()) {\n        var _res$data$metadata3;\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('OCR response for', file.name, res.data);\n        const report = res.data.report || null;\n\n        // --- Fixed headers ---\n        const fixedHeaders = [\"Patient Name\", \"Pat Ocr\", \"Responsible Party Name\", \"Rep #\", \"Doc\", \"B-Type\", \"Seen\", \"Service\", \"Type\", \"Office\", \"Code\", \"Description\", \"Amount\", \"Balance\", \"Claim\", \"Loc\", \"Entered\", \"Who\"];\n\n        // --- Rows: use report.rows or fallback ---\n        let rows = [];\n        if (report && Array.isArray(report.rows) && report.rows.length > 0) {\n          rows = report.rows;\n        } else {\n          var _res$data$metadata, _res$data$metadata2, _patientFields$find, _patientFields$find2, _patientFields$find3;\n          const metaTables = ((_res$data$metadata = res.data.metadata) === null || _res$data$metadata === void 0 ? void 0 : _res$data$metadata.tables) || [];\n          const patientFields = ((_res$data$metadata2 = res.data.metadata) === null || _res$data$metadata2 === void 0 ? void 0 : _res$data$metadata2.fields) || [];\n\n          // Extract some patient info from fields\n          const patientName = ((_patientFields$find = patientFields.find(f => {\n            var _f$Field;\n            return (_f$Field = f.Field) === null || _f$Field === void 0 ? void 0 : _f$Field.toLowerCase().includes(\"patient name\");\n          })) === null || _patientFields$find === void 0 ? void 0 : _patientFields$find.Value) || \"\";\n          const patOcr = ((_patientFields$find2 = patientFields.find(f => {\n            var _f$Field2;\n            return (_f$Field2 = f.Field) === null || _f$Field2 === void 0 ? void 0 : _f$Field2.toLowerCase().includes(\"pat ocr\");\n          })) === null || _patientFields$find2 === void 0 ? void 0 : _patientFields$find2.Value) || \"\";\n          const respParty = ((_patientFields$find3 = patientFields.find(f => {\n            var _f$Field3;\n            return (_f$Field3 = f.Field) === null || _f$Field3 === void 0 ? void 0 : _f$Field3.toLowerCase().includes(\"responsible party\");\n          })) === null || _patientFields$find3 === void 0 ? void 0 : _patientFields$find3.Value) || \"\";\n\n          // Filter potential procedure rows\n          rows = metaTables.filter(t => Array.isArray(t) && t.join(\" \").match(/\\d{4,}|\\.\\d{2}/)) // keep lines with numbers/amounts\n          .map(parts => {\n            const rowObj = {};\n            fixedHeaders.forEach((col, i) => {\n              var _parts$i;\n              if (col === \"Patient Name\") rowObj[col] = patientName;else if (col === \"Pat Ocr\") rowObj[col] = patOcr;else if (col === \"Responsible Party Name\") rowObj[col] = respParty;else rowObj[col] = (_parts$i = parts[i]) !== null && _parts$i !== void 0 ? _parts$i : \"\";\n            });\n            return rowObj;\n          });\n        }\n        outTables[idx] = {\n          columns: fixedHeaders,\n          rows\n        };\n\n        // --- Summary from metadata.fields ---\n        const fieldArr = ((_res$data$metadata3 = res.data.metadata) === null || _res$data$metadata3 === void 0 ? void 0 : _res$data$metadata3.fields) || [];\n        const summaryObj = {};\n        [\"Charges\", \"Receipts\", \"Credits\", \"Debits\", \"Bal Fwd\", \"Acct. Rec.\", \"Total Entries\"].forEach(key => {\n          const found = fieldArr.find(f => {\n            var _f$Field4;\n            return ((_f$Field4 = f.Field) === null || _f$Field4 === void 0 ? void 0 : _f$Field4.toLowerCase()) === key.toLowerCase();\n          });\n          if (found) summaryObj[key] = found.Value;\n        });\n        outSummaries[idx] = summaryObj;\n      }\n      setTables(outTables);\n      setSummaries(outSummaries);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // -------- Table Renderer --------\n  const ExcelGrid = ({\n    title,\n    columns,\n    rows,\n    summary\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid compact\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"excel-grid-scroll\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"excel-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: col\n                }, col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [rows && rows.length > 0 ? rows.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(col => {\n                  var _r$col;\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"excel-td\",\n                    children: (_r$col = r === null || r === void 0 ? void 0 : r[col]) !== null && _r$col !== void 0 ? _r$col : ''\n                  }, col, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: columns.length,\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: \"No rows\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), summary && Object.keys(summary).length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"summary-row\",\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: columns.length,\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: [\"Charges: \", summary[\"Charges\"] || 0, \" | Receipts: \", summary[\"Receipts\"] || 0, \" | Credits: \", summary[\"Credits\"] || 0, \" | Debits: \", summary[\"Debits\"] || 0, \" | Balance Fwd: \", summary[\"Bal Fwd\"] || 0, \" | Acct. Rec.: \", summary[\"Acct. Rec.\"] || 0, \" | Total Entries: \", summary[\"Total Entries\"] || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  };\n\n  // -------- Auth Gate --------\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Signup' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage('');\n        },\n        children: isSignup ? 'Already have an account? Login' : 'No account? Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  }\n\n  // -------- UI --------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: () => alert('Excel export handled on server.'),\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting table...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }, this), tables.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Procedure Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), files.map((file, idx) => {\n        var _tables$idx, _tables$idx2;\n        return /*#__PURE__*/_jsxDEV(ExcelGrid, {\n          title: file.name,\n          columns: ((_tables$idx = tables[idx]) === null || _tables$idx === void 0 ? void 0 : _tables$idx.columns) || [],\n          rows: ((_tables$idx2 = tables[idx]) === null || _tables$idx2 === void 0 ? void 0 : _tables$idx2.rows) || [],\n          summary: summaries[idx] || {}\n        }, `grid-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"LzJOiSnKr3bq63SE5thwgkESO00=\", false, function () {\n  return [useNavigate];\n});\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","tables","setTables","summaries","setSummaries","loading","setLoading","downloadReady","setDownloadReady","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","replace","handleSignup","res","post","data","loginRes","role","setItem","JSON","stringify","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","e","selected","Array","from","target","length","handleUploadAll","outTables","outSummaries","idx","file","entries","_res$data$metadata3","formData","FormData","append","console","log","name","report","fixedHeaders","rows","isArray","_res$data$metadata","_res$data$metadata2","_patientFields$find","_patientFields$find2","_patientFields$find3","metaTables","metadata","patientFields","fields","patientName","find","f","_f$Field","Field","toLowerCase","Value","patOcr","_f$Field2","respParty","_f$Field3","filter","t","join","match","map","parts","rowObj","forEach","col","i","_parts$i","columns","fieldArr","summaryObj","key","found","_f$Field4","ExcelGrid","title","summary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","r","_r$col","colSpan","style","textAlign","Object","keys","fontWeight","type","placeholder","value","onChange","onClick","htmlFor","id","accept","multiple","_tables$idx","_tables$idx2","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [summaries, setSummaries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert('⚠️ Session expired or access denied. Please log in again.');\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) {\n      navigate('/', { replace: true });\n    }\n  }, [auth, isAdmin, navigate]);\n\n  // -------- Auth --------\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', { username, password });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', { username, password });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role,\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role,\n      }));\n    } catch (err) {\n      setMessage('Signup failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', { username, password });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role,\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role,\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      setMessage('Login failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  // -------- File Selection --------\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setSummaries([]);\n    setDownloadReady(false);\n  };\n\n  // -------- Upload --------\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n\n    try {\n      const outTables = [];\n      const outSummaries = [];\n\n      for (const [idx, file] of files.entries()) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const res = await api.post('/api/ocr', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n\n        console.log('OCR response for', file.name, res.data);\n\n        const report = res.data.report || null;\n\n        // --- Fixed headers ---\n        const fixedHeaders = [\n          \"Patient Name\",\"Pat Ocr\",\"Responsible Party Name\",\"Rep #\",\"Doc\",\n          \"B-Type\",\"Seen\",\"Service\",\"Type\",\"Office\",\"Code\",\"Description\",\n          \"Amount\",\"Balance\",\"Claim\",\"Loc\",\"Entered\",\"Who\"\n        ];\n\n        // --- Rows: use report.rows or fallback ---\n        let rows = [];\n        if (report && Array.isArray(report.rows) && report.rows.length > 0) {\n          rows = report.rows;\n        } else {\n          const metaTables = res.data.metadata?.tables || [];\n          const patientFields = res.data.metadata?.fields || [];\n\n          // Extract some patient info from fields\n          const patientName = patientFields.find(f => f.Field?.toLowerCase().includes(\"patient name\"))?.Value || \"\";\n          const patOcr = patientFields.find(f => f.Field?.toLowerCase().includes(\"pat ocr\"))?.Value || \"\";\n          const respParty = patientFields.find(f => f.Field?.toLowerCase().includes(\"responsible party\"))?.Value || \"\";\n\n          // Filter potential procedure rows\n          rows = metaTables\n            .filter(t => Array.isArray(t) && t.join(\" \").match(/\\d{4,}|\\.\\d{2}/)) // keep lines with numbers/amounts\n            .map(parts => {\n              const rowObj = {};\n              fixedHeaders.forEach((col, i) => {\n                if (col === \"Patient Name\") rowObj[col] = patientName;\n                else if (col === \"Pat Ocr\") rowObj[col] = patOcr;\n                else if (col === \"Responsible Party Name\") rowObj[col] = respParty;\n                else rowObj[col] = parts[i] ?? \"\";\n              });\n              return rowObj;\n            });\n        }\n\n        outTables[idx] = { columns: fixedHeaders, rows };\n\n        // --- Summary from metadata.fields ---\n        const fieldArr = res.data.metadata?.fields || [];\n        const summaryObj = {};\n        [\"Charges\", \"Receipts\", \"Credits\", \"Debits\", \"Bal Fwd\", \"Acct. Rec.\", \"Total Entries\"].forEach(key => {\n          const found = fieldArr.find(f => f.Field?.toLowerCase() === key.toLowerCase());\n          if (found) summaryObj[key] = found.Value;\n        });\n        outSummaries[idx] = summaryObj;\n      }\n\n      setTables(outTables);\n      setSummaries(outSummaries);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // -------- Table Renderer --------\n  const ExcelGrid = ({ title, columns, rows, summary }) => {\n    return (\n      <div className=\"excel-grid-wrapper\">\n        <div className=\"excel-grid-header\">\n          <h4 className=\"file-title\">{title}</h4>\n        </div>\n        <div className=\"excel-grid compact\">\n          <div className=\"excel-grid-scroll\">\n            <table className=\"excel-table\">\n              <thead>\n                <tr>\n                  {columns.map((col) => (\n                    <th key={col} className=\"excel-th\">{col}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {rows && rows.length > 0 ? (\n                  rows.map((r, i) => (\n                    <tr key={i}>\n                      {columns.map((col) => (\n                        <td key={col} className=\"excel-td\">{r?.[col] ?? ''}</td>\n                      ))}\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan={columns.length} style={{ textAlign: 'center' }}>\n                      No rows\n                    </td>\n                  </tr>\n                )}\n                {summary && Object.keys(summary).length > 0 && (\n                  <tr className=\"summary-row\">\n                    <td colSpan={columns.length} style={{ fontWeight: 'bold' }}>\n                      Charges: {summary[\"Charges\"] || 0} | Receipts: {summary[\"Receipts\"] || 0} | \n                      Credits: {summary[\"Credits\"] || 0} | Debits: {summary[\"Debits\"] || 0} | \n                      Balance Fwd: {summary[\"Bal Fwd\"] || 0} | Acct. Rec.: {summary[\"Acct. Rec.\"] || 0} | \n                      Total Entries: {summary[\"Total Entries\"] || 0}\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // -------- Auth Gate --------\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? 'Signup' : 'Login'}</h2>\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"auth-input\" />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"auth-input\" />\n        {isSignup ? (\n          <button className=\"auth-btn\" onClick={handleSignup}>Signup</button>\n        ) : (\n          <button className=\"auth-btn\" onClick={handleLogin}>Login</button>\n        )}\n        <button className=\"toggle-btn\" onClick={() => { setIsSignup(!isSignup); setMessage(''); }}>\n          {isSignup ? 'Already have an account? Login' : 'No account? Signup'}\n        </button>\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  // -------- UI --------\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">\n          {isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'}\n        </h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>Upload All</button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={() => alert('Excel export handled on server.')}>\n              ⬇️ Download Excel\n            </button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, i) => (<li key={i}>📎 {file.name}</li>))}\n          </ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting table...</p>}\n\n      {tables.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Procedure Report</h3>\n          {files.map((file, idx) => (\n            <ExcelGrid\n              key={`grid-${idx}`}\n              title={file.name}\n              columns={tables[idx]?.columns || []}\n              rows={tables[idx]?.rows || []}\n              summary={summaries[idx] || {}}\n            />\n          ))}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,OAAO,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM8B,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;EAC1E,MAAMC,GAAG,GAAGhC,KAAK,CAACiC,MAAM,CAAC;IAAEC,OAAO,EAAEN;EAAS,CAAC,CAAC;EAE/CI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;IACvC,IAAIjC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEkC,KAAK,EAAED,MAAM,CAACE,OAAO,CAACC,aAAa,GAAG,UAAUpC,IAAI,CAACkC,KAAK,EAAE;IACtE,OAAOD,MAAM;EACf,CAAC,CAAC;EAEFN,GAAG,CAACG,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;IAAA,IAAAC,eAAA;IACT,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,EAAAD,eAAA,GAACD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,CAAC,EAAE;MAC/CC,YAAY,CAACC,KAAK,CAAC,CAAC;MACpB1C,OAAO,CAAC,IAAI,CAAC;MACb2C,KAAK,CAAC,2DAA2D,CAAC;IACpE;IACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;EAC9B,CACF,CAAC;EAED5C,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEkC,KAAK,IAAI,CAAChC,OAAO,EAAE;MAC3BE,QAAQ,CAAC,GAAG,EAAE;QAAE2C,OAAO,EAAE;MAAK,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,CAAC/C,IAAI,EAAEE,OAAO,EAAEE,QAAQ,CAAC,CAAC;;EAE7B;EACA,MAAM4C,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,cAAc,EAAE;QAAEjC,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAClEG,UAAU,CAAC2B,GAAG,CAACE,IAAI,CAAC9B,OAAO,IAAI,oBAAoB,CAAC;MACpD,MAAM+B,QAAQ,GAAG,MAAMzB,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAE;QAAEjC,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACtElB,OAAO,CAAC;QACNiC,KAAK,EAAEkB,QAAQ,CAACD,IAAI,CAACjB,KAAK;QAC1BjB,QAAQ,EAAEmC,QAAQ,CAACD,IAAI,CAAClC,QAAQ;QAChCoC,IAAI,EAAED,QAAQ,CAACD,IAAI,CAACE;MACtB,CAAC,CAAC;MACFX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;QAC1CtB,KAAK,EAAEkB,QAAQ,CAACD,IAAI,CAACjB,KAAK;QAC1BjB,QAAQ,EAAEmC,QAAQ,CAACD,IAAI,CAAClC,QAAQ;QAChCoC,IAAI,EAAED,QAAQ,CAACD,IAAI,CAACE;MACtB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOI,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZrC,UAAU,CAAC,iBAAiB,IAAI,EAAAoC,aAAA,GAAAD,GAAG,CAACpB,QAAQ,cAAAqB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcP,IAAI,cAAAQ,kBAAA,uBAAlBA,kBAAA,CAAoBrB,KAAK,KAAImB,GAAG,CAACpC,OAAO,CAAC,CAAC;IAC5E;EACF,CAAC;EAED,MAAMuC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMX,GAAG,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAE;QAAEjC,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACjE,IAAI8B,GAAG,CAACE,IAAI,CAACjB,KAAK,EAAE;QAClBjC,OAAO,CAAC;UACNiC,KAAK,EAAEe,GAAG,CAACE,IAAI,CAACjB,KAAK;UACrBjB,QAAQ,EAAEgC,GAAG,CAACE,IAAI,CAAClC,QAAQ;UAC3BoC,IAAI,EAAEJ,GAAG,CAACE,IAAI,CAACE;QACjB,CAAC,CAAC;QACFX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;UAC1CtB,KAAK,EAAEe,GAAG,CAACE,IAAI,CAACjB,KAAK;UACrBjB,QAAQ,EAAEgC,GAAG,CAACE,IAAI,CAAClC,QAAQ;UAC3BoC,IAAI,EAAEJ,GAAG,CAACE,IAAI,CAACE;QACjB,CAAC,CAAC,CAAC;QACH/B,UAAU,CAAC,mBAAmB,CAAC;MACjC,CAAC,MAAM;QACLA,UAAU,CAAC,qBAAqB,CAAC;MACnC;IACF,CAAC,CAAC,OAAOmC,GAAG,EAAE;MAAA,IAAAI,cAAA,EAAAC,mBAAA;MACZxC,UAAU,CAAC,gBAAgB,IAAI,EAAAuC,cAAA,GAAAJ,GAAG,CAACpB,QAAQ,cAAAwB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcV,IAAI,cAAAW,mBAAA,uBAAlBA,mBAAA,CAAoBxB,KAAK,KAAImB,GAAG,CAACpC,OAAO,CAAC,CAAC;IAC3E;EACF,CAAC;;EAED;EACA,MAAM0C,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,MAAM,CAAC/D,KAAK,IAAI,EAAE,CAAC;IACjD,IAAI4D,QAAQ,CAACI,MAAM,GAAG,EAAE,EAAE;MACxBzB,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACF;IACAtC,QAAQ,CAAC2D,QAAQ,CAAC;IAClBzD,SAAS,CAAC,EAAE,CAAC;IACbE,YAAY,CAAC,EAAE,CAAC;IAChBI,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;;EAED;EACA,MAAMwD,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACjE,KAAK,CAACgE,MAAM,EAAE;IACnBzD,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAM2D,SAAS,GAAG,EAAE;MACpB,MAAMC,YAAY,GAAG,EAAE;MAEvB,KAAK,MAAM,CAACC,GAAG,EAAEC,IAAI,CAAC,IAAIrE,KAAK,CAACsE,OAAO,CAAC,CAAC,EAAE;QAAA,IAAAC,mBAAA;QACzC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;QAE7B,MAAMzB,GAAG,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,UAAU,EAAE2B,QAAQ,EAAE;UAC/C1C,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CAAC,CAAC;QAEF6C,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEP,IAAI,CAACQ,IAAI,EAAEjC,GAAG,CAACE,IAAI,CAAC;QAEpD,MAAMgC,MAAM,GAAGlC,GAAG,CAACE,IAAI,CAACgC,MAAM,IAAI,IAAI;;QAEtC;QACA,MAAMC,YAAY,GAAG,CACnB,cAAc,EAAC,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAC,KAAK,EAC/D,QAAQ,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAC,aAAa,EAC9D,QAAQ,EAAC,SAAS,EAAC,OAAO,EAAC,KAAK,EAAC,SAAS,EAAC,KAAK,CACjD;;QAED;QACA,IAAIC,IAAI,GAAG,EAAE;QACb,IAAIF,MAAM,IAAIjB,KAAK,CAACoB,OAAO,CAACH,MAAM,CAACE,IAAI,CAAC,IAAIF,MAAM,CAACE,IAAI,CAAChB,MAAM,GAAG,CAAC,EAAE;UAClEgB,IAAI,GAAGF,MAAM,CAACE,IAAI;QACpB,CAAC,MAAM;UAAA,IAAAE,kBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,oBAAA,EAAAC,oBAAA;UACL,MAAMC,UAAU,GAAG,EAAAL,kBAAA,GAAAtC,GAAG,CAACE,IAAI,CAAC0C,QAAQ,cAAAN,kBAAA,uBAAjBA,kBAAA,CAAmBhF,MAAM,KAAI,EAAE;UAClD,MAAMuF,aAAa,GAAG,EAAAN,mBAAA,GAAAvC,GAAG,CAACE,IAAI,CAAC0C,QAAQ,cAAAL,mBAAA,uBAAjBA,mBAAA,CAAmBO,MAAM,KAAI,EAAE;;UAErD;UACA,MAAMC,WAAW,GAAG,EAAAP,mBAAA,GAAAK,aAAa,CAACG,IAAI,CAACC,CAAC;YAAA,IAAAC,QAAA;YAAA,QAAAA,QAAA,GAAID,CAAC,CAACE,KAAK,cAAAD,QAAA,uBAAPA,QAAA,CAASE,WAAW,CAAC,CAAC,CAAC7D,QAAQ,CAAC,cAAc,CAAC;UAAA,EAAC,cAAAiD,mBAAA,uBAAxEA,mBAAA,CAA0Ea,KAAK,KAAI,EAAE;UACzG,MAAMC,MAAM,GAAG,EAAAb,oBAAA,GAAAI,aAAa,CAACG,IAAI,CAACC,CAAC;YAAA,IAAAM,SAAA;YAAA,QAAAA,SAAA,GAAIN,CAAC,CAACE,KAAK,cAAAI,SAAA,uBAAPA,SAAA,CAASH,WAAW,CAAC,CAAC,CAAC7D,QAAQ,CAAC,SAAS,CAAC;UAAA,EAAC,cAAAkD,oBAAA,uBAAnEA,oBAAA,CAAqEY,KAAK,KAAI,EAAE;UAC/F,MAAMG,SAAS,GAAG,EAAAd,oBAAA,GAAAG,aAAa,CAACG,IAAI,CAACC,CAAC;YAAA,IAAAQ,SAAA;YAAA,QAAAA,SAAA,GAAIR,CAAC,CAACE,KAAK,cAAAM,SAAA,uBAAPA,SAAA,CAASL,WAAW,CAAC,CAAC,CAAC7D,QAAQ,CAAC,mBAAmB,CAAC;UAAA,EAAC,cAAAmD,oBAAA,uBAA7EA,oBAAA,CAA+EW,KAAK,KAAI,EAAE;;UAE5G;UACAjB,IAAI,GAAGO,UAAU,CACde,MAAM,CAACC,CAAC,IAAI1C,KAAK,CAACoB,OAAO,CAACsB,CAAC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;UAAA,CACrEC,GAAG,CAACC,KAAK,IAAI;YACZ,MAAMC,MAAM,GAAG,CAAC,CAAC;YACjB7B,YAAY,CAAC8B,OAAO,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;cAAA,IAAAC,QAAA;cAC/B,IAAIF,GAAG,KAAK,cAAc,EAAEF,MAAM,CAACE,GAAG,CAAC,GAAGnB,WAAW,CAAC,KACjD,IAAImB,GAAG,KAAK,SAAS,EAAEF,MAAM,CAACE,GAAG,CAAC,GAAGZ,MAAM,CAAC,KAC5C,IAAIY,GAAG,KAAK,wBAAwB,EAAEF,MAAM,CAACE,GAAG,CAAC,GAAGV,SAAS,CAAC,KAC9DQ,MAAM,CAACE,GAAG,CAAC,IAAAE,QAAA,GAAGL,KAAK,CAACI,CAAC,CAAC,cAAAC,QAAA,cAAAA,QAAA,GAAI,EAAE;YACnC,CAAC,CAAC;YACF,OAAOJ,MAAM;UACf,CAAC,CAAC;QACN;QAEA1C,SAAS,CAACE,GAAG,CAAC,GAAG;UAAE6C,OAAO,EAAElC,YAAY;UAAEC;QAAK,CAAC;;QAEhD;QACA,MAAMkC,QAAQ,GAAG,EAAA3C,mBAAA,GAAA3B,GAAG,CAACE,IAAI,CAAC0C,QAAQ,cAAAjB,mBAAA,uBAAjBA,mBAAA,CAAmBmB,MAAM,KAAI,EAAE;QAChD,MAAMyB,UAAU,GAAG,CAAC,CAAC;QACrB,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,EAAE,eAAe,CAAC,CAACN,OAAO,CAACO,GAAG,IAAI;UACpG,MAAMC,KAAK,GAAGH,QAAQ,CAACtB,IAAI,CAACC,CAAC;YAAA,IAAAyB,SAAA;YAAA,OAAI,EAAAA,SAAA,GAAAzB,CAAC,CAACE,KAAK,cAAAuB,SAAA,uBAAPA,SAAA,CAAStB,WAAW,CAAC,CAAC,MAAKoB,GAAG,CAACpB,WAAW,CAAC,CAAC;UAAA,EAAC;UAC9E,IAAIqB,KAAK,EAAEF,UAAU,CAACC,GAAG,CAAC,GAAGC,KAAK,CAACpB,KAAK;QAC1C,CAAC,CAAC;QACF9B,YAAY,CAACC,GAAG,CAAC,GAAG+C,UAAU;MAChC;MAEAhH,SAAS,CAAC+D,SAAS,CAAC;MACpB7D,YAAY,CAAC8D,YAAY,CAAC;MAC1B1D,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAO2C,GAAG,EAAE;MACZuB,OAAO,CAAC1C,KAAK,CAAC,gBAAgB,EAAEmB,GAAG,CAAC;MACpCb,KAAK,CAAC,qCAAqC,CAAC;IAC9C,CAAC,SAAS;MACRhC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMgH,SAAS,GAAGA,CAAC;IAAEC,KAAK;IAAEP,OAAO;IAAEjC,IAAI;IAAEyC;EAAQ,CAAC,KAAK;IACvD,oBACEhI,OAAA;MAAKiI,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjClI,OAAA;QAAKiI,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChClI,OAAA;UAAIiI,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEH;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACNtI,OAAA;QAAKiI,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjClI,OAAA;UAAKiI,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAChClI,OAAA;YAAOiI,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC5BlI,OAAA;cAAAkI,QAAA,eACElI,OAAA;gBAAAkI,QAAA,EACGV,OAAO,CAACP,GAAG,CAAEI,GAAG,iBACfrH,OAAA;kBAAciI,SAAS,EAAC,UAAU;kBAAAC,QAAA,EAAEb;gBAAG,GAA9BA,GAAG;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAgC,CAC7C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACRtI,OAAA;cAAAkI,QAAA,GACG3C,IAAI,IAAIA,IAAI,CAAChB,MAAM,GAAG,CAAC,GACtBgB,IAAI,CAAC0B,GAAG,CAAC,CAACsB,CAAC,EAAEjB,CAAC,kBACZtH,OAAA;gBAAAkI,QAAA,EACGV,OAAO,CAACP,GAAG,CAAEI,GAAG;kBAAA,IAAAmB,MAAA;kBAAA,oBACfxI,OAAA;oBAAciI,SAAS,EAAC,UAAU;oBAAAC,QAAA,GAAAM,MAAA,GAAED,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAGlB,GAAG,CAAC,cAAAmB,MAAA,cAAAA,MAAA,GAAI;kBAAE,GAAzCnB,GAAG;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAA2C,CAAC;gBAAA,CACzD;cAAC,GAHKhB,CAAC;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAIN,CACL,CAAC,gBAEFtI,OAAA;gBAAAkI,QAAA,eACElI,OAAA;kBAAIyI,OAAO,EAAEjB,OAAO,CAACjD,MAAO;kBAACmE,KAAK,EAAE;oBAAEC,SAAS,EAAE;kBAAS,CAAE;kBAAAT,QAAA,EAAC;gBAE7D;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACL,EACAN,OAAO,IAAIY,MAAM,CAACC,IAAI,CAACb,OAAO,CAAC,CAACzD,MAAM,GAAG,CAAC,iBACzCvE,OAAA;gBAAIiI,SAAS,EAAC,aAAa;gBAAAC,QAAA,eACzBlI,OAAA;kBAAIyI,OAAO,EAAEjB,OAAO,CAACjD,MAAO;kBAACmE,KAAK,EAAE;oBAAEI,UAAU,EAAE;kBAAO,CAAE;kBAAAZ,QAAA,GAAC,WACjD,EAACF,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,eAAa,EAACA,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,cAChE,EAACA,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,aAAW,EAACA,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,kBACxD,EAACA,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,iBAAe,EAACA,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,oBAClE,EAACA,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC;gBAAA;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACL;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EACA,IAAI,EAACpI,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEkC,KAAK,KAAI,CAAChC,OAAO,EAAE;IAC5B,oBACEJ,OAAA;MAAKiI,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBlI,OAAA;QAAAkI,QAAA,EAAKjH,QAAQ,GAAG,QAAQ,GAAG;MAAO;QAAAkH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxCtI,OAAA;QAAO+I,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAE9H,QAAS;QAAC+H,QAAQ,EAAGhF,CAAC,IAAK9C,WAAW,CAAC8C,CAAC,CAACI,MAAM,CAAC2E,KAAK,CAAE;QAAChB,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClItI,OAAA;QAAO+I,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAE5H,QAAS;QAAC6H,QAAQ,EAAGhF,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACI,MAAM,CAAC2E,KAAK,CAAE;QAAChB,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACrIrH,QAAQ,gBACPjB,OAAA;QAAQiI,SAAS,EAAC,UAAU;QAACkB,OAAO,EAAEjG,YAAa;QAAAgF,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEnEtI,OAAA;QAAQiI,SAAS,EAAC,UAAU;QAACkB,OAAO,EAAErF,WAAY;QAAAoE,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACjE,eACDtI,OAAA;QAAQiI,SAAS,EAAC,YAAY;QAACkB,OAAO,EAAEA,CAAA,KAAM;UAAEjI,WAAW,CAAC,CAACD,QAAQ,CAAC;UAAEO,UAAU,CAAC,EAAE,CAAC;QAAE,CAAE;QAAA0G,QAAA,EACvFjH,QAAQ,GAAG,gCAAgC,GAAG;MAAoB;QAAAkH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,EACR/G,OAAO,iBAAIvB,OAAA;QAAGiI,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAE3G;MAAO;QAAA4G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEV;;EAEA;EACA,oBACEtI,OAAA;IAAKiI,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlI,OAAA;MAAAkI,QAAA,eACElI,OAAA;QAAIiI,SAAS,EAAC,cAAc;QAAAC,QAAA,EACzB9H,OAAO,GAAG,0BAA0B,GAAG;MAA6B;QAAA+H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAETtI,OAAA;MAASiI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBACjClI,OAAA;QAAOoJ,OAAO,EAAC,aAAa;QAACnB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpFtI,OAAA;QAAO+I,IAAI,EAAC,MAAM;QAACM,EAAE,EAAC,aAAa;QAACC,MAAM,EAAC,iCAAiC;QAACC,QAAQ;QAACL,QAAQ,EAAEjF;MAAiB;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpHtI,OAAA;QAAKiI,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBlI,OAAA;UAAQiI,SAAS,EAAC,YAAY;UAACkB,OAAO,EAAE3E,eAAgB;UAAA0D,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC3EvH,aAAa,iBACZf,OAAA;UAAQiI,SAAS,EAAC,cAAc;UAACkB,OAAO,EAAEA,CAAA,KAAMrG,KAAK,CAAC,iCAAiC,CAAE;UAAAoF,QAAA,EAAC;QAE1F;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAET/H,KAAK,CAACgE,MAAM,GAAG,CAAC,iBACfvE,OAAA;MAASiI,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC/BlI,OAAA;QAAIiI,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDtI,OAAA;QAAIiI,SAAS,EAAC,WAAW;QAAAC,QAAA,EACtB3H,KAAK,CAAC0G,GAAG,CAAC,CAACrC,IAAI,EAAE0C,CAAC,kBAAMtH,OAAA;UAAAkI,QAAA,GAAY,eAAG,EAACtD,IAAI,CAACQ,IAAI;QAAA,GAAhBkC,CAAC;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACV,EAEAzH,OAAO,iBAAIb,OAAA;MAAGiI,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEhE7H,MAAM,CAAC8D,MAAM,GAAG,CAAC,iBAChBvE,OAAA;MAASiI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAClClI,OAAA;QAAIiI,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvD/H,KAAK,CAAC0G,GAAG,CAAC,CAACrC,IAAI,EAAED,GAAG;QAAA,IAAA6E,WAAA,EAAAC,YAAA;QAAA,oBACnBzJ,OAAA,CAAC8H,SAAS;UAERC,KAAK,EAAEnD,IAAI,CAACQ,IAAK;UACjBoC,OAAO,EAAE,EAAAgC,WAAA,GAAA/I,MAAM,CAACkE,GAAG,CAAC,cAAA6E,WAAA,uBAAXA,WAAA,CAAahC,OAAO,KAAI,EAAG;UACpCjC,IAAI,EAAE,EAAAkE,YAAA,GAAAhJ,MAAM,CAACkE,GAAG,CAAC,cAAA8E,YAAA,uBAAXA,YAAA,CAAalE,IAAI,KAAI,EAAG;UAC9ByC,OAAO,EAAErH,SAAS,CAACgE,GAAG,CAAC,IAAI,CAAC;QAAE,GAJzB,QAAQA,GAAG,EAAE;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKnB,CAAC;MAAA,CACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjI,EAAA,CAvSIJ,SAAS;EAAA,QACIH,WAAW;AAAA;AAAA4J,EAAA,GADxBzJ,SAAS;AAySf,eAAeA,SAAS;AAAC,IAAAyJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}