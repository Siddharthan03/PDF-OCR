{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = ({\n  auth,\n  setAuth\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [allMetadata, setAllMetadata] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  // Auth states\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // no redirect — we show auth form if not logged in\n  }, [auth]);\n\n  // Handle signup\n  const handleSignup = async () => {\n    try {\n      const res = await axios.post('http://localhost:5000/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      // Auto-login after signup\n      const loginRes = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (loginRes.data.success) {\n        setAuth({\n          token: loginRes.data.token,\n          username: loginRes.data.username\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: loginRes.data.token,\n          username: loginRes.data.username\n        }));\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage('Signup failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    }\n  };\n\n  // Handle login\n  const handleLogin = async () => {\n    try {\n      const res = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (res.data.success) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: res.data.token,\n          username: res.data.username\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage('Login failed: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n    }\n  };\n\n  // File selection\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setAllMetadata([]);\n    setDownloadReady(false);\n  };\n\n  // Upload all files for OCR\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      await axios.get('http://localhost:5000/api/reset', {\n        headers: {\n          Authorization: `Bearer ${auth.token}`\n        }\n      });\n      setAllMetadata([]);\n      const all = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await axios.post('http://localhost:5000/api/ocr', formData, {\n          headers: {\n            Authorization: `Bearer ${auth.token}`\n          }\n        });\n        const meta = res.data.metadata || {};\n        meta['File Name'] = file.name;\n        meta['Patient Signature'] = res.data.patient_signature;\n        meta['Physician Signature'] = res.data.physician_signature;\n        all.push(meta);\n        await axios.post('http://localhost:5000/api/export-excel', {\n          metadata: meta\n        }, {\n          headers: {\n            Authorization: `Bearer ${auth.token}`\n          }\n        });\n      }\n      setAllMetadata(all);\n      setDownloadReady(true);\n    } catch (err) {\n      var _err$response3;\n      console.error('Upload failed:', err);\n      if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 401) {\n        alert('Session expired. Please log in again.');\n        localStorage.clear();\n        setAuth(null);\n      } else {\n        alert('Upload failed. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Download Excel\n  const handleDownloadExcel = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/export-excel', {\n        headers: {\n          Authorization: `Bearer ${auth.token}`\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'metadata_output.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (err) {\n      console.error('Excel download failed:', err);\n      alert('Download failed. Please try again.');\n    }\n  };\n\n  // If not logged in → show login/signup UI\n  if (!(auth !== null && auth !== void 0 && auth.token)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Signup' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage('');\n        },\n        children: isSignup ? 'Already have an account? Login' : 'No account? Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If logged in → show OCR upload UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: \"\\uD83D\\uDCC4 File OCR Extraction Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.clear();\n          setAuth(null);\n        },\n        className: \"logout-btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: handleDownloadExcel,\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting metadata...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }, this), allMetadata.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCB Extracted Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), allMetadata.map((meta, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-title\",\n          children: meta['File Name']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"metadata-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(meta).map(([key, value], i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"field-cell\",\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"value-cell\",\n                children: (key === 'Patient Signature' || key === 'Physician Signature') && value !== null && value !== void 0 && value.includes('/signatures/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost:5000${value}`,\n                  alt: key,\n                  className: \"signature-img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 29\n                }, this) : value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this)]\n      }, fileIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"9c0HA4r0hpgHgSjAfH05xmEGBXk=\");\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OCRUpload","auth","setAuth","_s","files","setFiles","allMetadata","setAllMetadata","loading","setLoading","downloadReady","setDownloadReady","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","handleSignup","res","post","data","loginRes","success","token","localStorage","setItem","JSON","stringify","err","_err$response","_err$response$data","response","handleLogin","_err$response2","_err$response2$data","handleFileChange","e","selected","Array","from","target","length","alert","handleUploadAll","get","headers","Authorization","all","file","formData","FormData","append","meta","metadata","name","patient_signature","physician_signature","push","_err$response3","console","error","status","clear","handleDownloadExcel","responseType","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","onClick","htmlFor","id","accept","multiple","map","index","fileIndex","Object","entries","key","i","includes","src","alt","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\n\nconst OCRUpload = ({ auth, setAuth }) => {\n  const [files, setFiles] = useState([]);\n  const [allMetadata, setAllMetadata] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  // Auth states\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    // no redirect — we show auth form if not logged in\n  }, [auth]);\n\n  // Handle signup\n  const handleSignup = async () => {\n    try {\n      const res = await axios.post('http://localhost:5000/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      // Auto-login after signup\n      const loginRes = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (loginRes.data.success) {\n        setAuth({ token: loginRes.data.token, username: loginRes.data.username });\n        localStorage.setItem('auth', JSON.stringify({ token: loginRes.data.token, username: loginRes.data.username }));\n      }\n    } catch (err) {\n      setMessage('Signup failed: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  // Handle login\n  const handleLogin = async () => {\n    try {\n      const res = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (res.data.success) {\n        setAuth({ token: res.data.token, username: res.data.username });\n        localStorage.setItem('auth', JSON.stringify({ token: res.data.token, username: res.data.username }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      setMessage('Login failed: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  // File selection\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setAllMetadata([]);\n    setDownloadReady(false);\n  };\n\n  // Upload all files for OCR\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n\n    try {\n      await axios.get('http://localhost:5000/api/reset', {\n        headers: { Authorization: `Bearer ${auth.token}` }\n      });\n\n      setAllMetadata([]);\n      const all = [];\n\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const res = await axios.post('http://localhost:5000/api/ocr', formData, {\n          headers: { Authorization: `Bearer ${auth.token}` }\n        });\n\n        const meta = res.data.metadata || {};\n        meta['File Name'] = file.name;\n        meta['Patient Signature'] = res.data.patient_signature;\n        meta['Physician Signature'] = res.data.physician_signature;\n\n        all.push(meta);\n\n        await axios.post('http://localhost:5000/api/export-excel', { metadata: meta }, {\n          headers: { Authorization: `Bearer ${auth.token}` }\n        });\n      }\n\n      setAllMetadata(all);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      if (err.response?.status === 401) {\n        alert('Session expired. Please log in again.');\n        localStorage.clear();\n        setAuth(null);\n      } else {\n        alert('Upload failed. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Download Excel\n  const handleDownloadExcel = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/export-excel', {\n        headers: { Authorization: `Bearer ${auth.token}` },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'metadata_output.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (err) {\n      console.error('Excel download failed:', err);\n      alert('Download failed. Please try again.');\n    }\n  };\n\n  // If not logged in → show login/signup UI\n  if (!auth?.token) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? 'Signup' : 'Login'}</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          className=\"auth-input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"auth-input\"\n        />\n\n        {isSignup ? (\n          <button className=\"auth-btn\" onClick={handleSignup}>Signup</button>\n        ) : (\n          <button className=\"auth-btn\" onClick={handleLogin}>Login</button>\n        )}\n\n        {/* Toggle between signup and login */}\n        <button\n          className=\"toggle-btn\"\n          onClick={() => {\n            setIsSignup(!isSignup);\n            setMessage('');\n          }}\n        >\n          {isSignup ? 'Already have an account? Login' : 'No account? Signup'}\n        </button>\n\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  // If logged in → show OCR upload UI\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">📄 File OCR Extraction Tool</h2>\n        <button\n          onClick={() => { localStorage.clear(); setAuth(null); }}\n          className=\"logout-btn\"\n        >\n          Logout\n        </button>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">\n          Upload up to 10 files:\n        </label>\n        <input\n          type=\"file\"\n          id=\"file-upload\"\n          accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n          multiple\n          onChange={handleFileChange}\n        />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>Upload All</button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={handleDownloadExcel}>\n              ⬇️ Download Excel\n            </button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, index) => (\n              <li key={index}>📎 {file.name}</li>\n            ))}\n          </ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting metadata...</p>}\n\n      {allMetadata.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📋 Extracted Metadata</h3>\n          {allMetadata.map((meta, fileIndex) => (\n            <div key={fileIndex} className=\"table-container\">\n              <h4 className=\"file-title\">{meta['File Name']}</h4>\n              <table className=\"metadata-table\">\n                <thead>\n                  <tr>\n                    <th>Field</th>\n                    <th>Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(meta).map(([key, value], i) => (\n                    <tr key={i}>\n                      <td className=\"field-cell\">{key}</td>\n                      <td className=\"value-cell\">\n                        {(key === 'Patient Signature' || key === 'Physician Signature') && value?.includes('/signatures/')\n                          ? <img src={`http://localhost:5000${value}`} alt={key} className=\"signature-img\" />\n                          : value\n                        }\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ))}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}