{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [structuredData, setStructuredData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setStructuredData(null);\n    setDownloadReady(false);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/api/ocr', formData);\n      setStructuredData(res.data.structured_data);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Error uploading file:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadPDF = async () => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/export-pdf', {\n        structured_data: structuredData\n      }, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'ocr_output.pdf');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      console.error('Error downloading PDF:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCC4 PDF OCR Extractor & Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginLeft: '1rem'\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'orange',\n        marginTop: '1rem'\n      },\n      children: \"\\u23F3 Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), structuredData && Object.entries(structuredData).map(([section, rows]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), Array.isArray(rows) && rows.length > 0 && typeof rows[0] === 'object' ? /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this) : rows.map((para, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          lineHeight: '1.6'\n        },\n        children: para\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this))]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadPDF,\n      style: {\n        marginTop: '2rem'\n      },\n      children: \"\\u2B07\\uFE0F Download PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"ye4xiQKuwScAFDI5/2s01qEOIXU=\");\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OCRUpload","_s","file","setFile","structuredData","setStructuredData","loading","setLoading","downloadReady","setDownloadReady","handleFileChange","e","target","files","handleUpload","formData","FormData","append","res","post","data","structured_data","err","console","error","handleDownloadPDF","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","marginLeft","color","marginTop","Object","entries","map","section","rows","Array","isArray","length","border","cellPadding","width","borderCollapse","row","i","code","description","para","lineHeight","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst OCRUpload = () => {\n  const [file, setFile] = useState(null);\n  const [structuredData, setStructuredData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setStructuredData(null);\n    setDownloadReady(false);\n  };\n\n  const handleUpload = async () => {\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/api/ocr', formData);\n      setStructuredData(res.data.structured_data);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Error uploading file:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownloadPDF = async () => {\n    try {\n      const res = await axios.post(\n        'http://localhost:5000/api/export-pdf',\n        { structured_data: structuredData },\n        { responseType: 'blob' }\n      );\n\n      const url = window.URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'ocr_output.pdf');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      console.error('Error downloading PDF:', err);\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'sans-serif' }}>\n      <h2>üìÑ PDF OCR Extractor & Export</h2>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload} style={{ marginLeft: '1rem' }}>\n        Upload\n      </button>\n\n      {loading && (\n        <p style={{ color: 'orange', marginTop: '1rem' }}>‚è≥ Processing...</p>\n      )}\n\n      {structuredData && Object.entries(structuredData).map(([section, rows]) => (\n        <div key={section} style={{ marginTop: '2rem' }}>\n          <h3>{section}</h3>\n          {Array.isArray(rows) && rows.length > 0 && typeof rows[0] === 'object' ? (\n            <table border=\"1\" cellPadding=\"10\" style={{ width: '100%', borderCollapse: 'collapse' }}>\n              <thead>\n                <tr>\n                  <th>Code</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                {rows.map((row, i) => (\n                  <tr key={i}>\n                    <td>{row.code}</td>\n                    <td>{row.description}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            rows.map((para, i) => (\n              <p key={i} style={{ lineHeight: '1.6' }}>{para}</p>\n            ))\n          )}\n        </div>\n      ))}\n\n      {downloadReady && (\n        <button onClick={handleDownloadPDF} style={{ marginTop: '2rem' }}>\n          ‚¨áÔ∏è Download PDF\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}