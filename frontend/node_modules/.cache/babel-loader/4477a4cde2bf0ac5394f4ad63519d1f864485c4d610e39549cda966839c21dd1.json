{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/PDF-OCR/frontend/src/OCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OCRUpload() {\n  _s();\n  const [text, setText] = useState('');\n  const [file, setFile] = useState(null);\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const res = await axios.post('http://localhost:5000/api/ocr', formData);\n    setText(res.data.text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PDF OCR Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload & Extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(OCRUpload, \"wmQWBe94VIaTzjwQUpxvuogJC3o=\");\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OCRUpload","_s","text","setText","file","setFile","handleUpload","formData","FormData","append","res","post","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/PDF-OCR/frontend/src/OCRUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction OCRUpload() {\n  const [text, setText] = useState('');\n  const [file, setFile] = useState(null);\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const res = await axios.post('http://localhost:5000/api/ocr', formData);\n    setText(res.data.text);\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h2>PDF OCR Upload</h2>\n      <input type=\"file\" onChange={e => setFile(e.target.files[0])} />\n      <button onClick={handleUpload}>Upload & Extract</button>\n      <pre>{text}</pre>\n    </div>\n  );\n}\n\nexport default OCRUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAE7B,MAAMM,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,+BAA+B,EAAEJ,QAAQ,CAAC;IACvEJ,OAAO,CAACO,GAAG,CAACE,IAAI,CAACV,IAAI,CAAC;EACxB,CAAC;EAED,oBACEH,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEC,CAAC,IAAIhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEnB,OAAA;MAAQyB,OAAO,EAAElB,YAAa;MAAAQ,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxDnB,OAAA;MAAAe,QAAA,EAAMZ;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACjB,EAAA,CApBQD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAsBlB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}