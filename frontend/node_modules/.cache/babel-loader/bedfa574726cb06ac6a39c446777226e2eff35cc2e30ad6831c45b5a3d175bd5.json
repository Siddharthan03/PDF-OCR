{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\n// OCRUpload.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]); // [{ columns, rows, raw }]\n  const [summaries, setSummaries] = useState([]); // [{ Charges, Receipts, ... }]\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n\n  // Attach token automatically\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert('⚠️ Session expired or access denied. Please log in again.');\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) {\n      navigate('/', {\n        replace: true\n      });\n    }\n  }, [auth, isAdmin, navigate]);\n\n  // -------- Auth --------\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', {\n        username,\n        password\n      });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage('Signup failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', {\n        username,\n        password\n      });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage('Login failed: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n\n  // -------- File Selection --------\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setSummaries([]);\n    setDownloadReady(false);\n  };\n\n  // -------- Upload & Parse --------\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const outTables = [];\n      const outSummaries = [];\n      for (const [idx, file] of files.entries()) {\n        var _d$metadata, _d$metadata2, _d$metadata3;\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('OCR response for', file.name, res.data);\n\n        // Support both shapes: top-level and metadata-nested\n        const d = res.data || {};\n        const report = d.report || ((_d$metadata = d.metadata) === null || _d$metadata === void 0 ? void 0 : _d$metadata.report) || null;\n        const metaTables = d.tables || ((_d$metadata2 = d.metadata) === null || _d$metadata2 === void 0 ? void 0 : _d$metadata2.tables) || [];\n        const fieldArr = d.fields || ((_d$metadata3 = d.metadata) === null || _d$metadata3 === void 0 ? void 0 : _d$metadata3.fields) || [];\n\n        // Fixed headers that your UI expects\n        const fixedHeaders = [\"Patient Name\", \"Pat Ocr\", \"Responsible Party Name\", \"Rep #\", \"Doc\", \"B-Type\", \"Seen\", \"Service\", \"Type\", \"Office\", \"Code\", \"Description\", \"Amount\", \"Balance\", \"Claim\", \"Loc\", \"Entered\", \"Who\"];\n\n        // Prefer structured rows from backend; else fallback from raw metaTables\n        let rows = [];\n        if (report && Array.isArray(report.rows) && report.rows.length > 0) {\n          rows = report.rows; // already keyed by headers\n        } else {\n          var _fieldArr$find, _fieldArr$find2, _fieldArr$find3;\n          // Pull a few patient fields (if any) to seed fallback lines\n          const patientName = ((_fieldArr$find = fieldArr.find(f => {\n            var _f$Field;\n            return (_f$Field = f.Field) === null || _f$Field === void 0 ? void 0 : _f$Field.toLowerCase().includes(\"patient name\");\n          })) === null || _fieldArr$find === void 0 ? void 0 : _fieldArr$find.Value) || \"\";\n          const patOcr = ((_fieldArr$find2 = fieldArr.find(f => {\n            var _f$Field2;\n            return (_f$Field2 = f.Field) === null || _f$Field2 === void 0 ? void 0 : _f$Field2.toLowerCase().includes(\"pat ocr\");\n          })) === null || _fieldArr$find2 === void 0 ? void 0 : _fieldArr$find2.Value) || \"\";\n          const respParty = ((_fieldArr$find3 = fieldArr.find(f => {\n            var _f$Field3;\n            return (_f$Field3 = f.Field) === null || _f$Field3 === void 0 ? void 0 : _f$Field3.toLowerCase().includes(\"responsible party\");\n          })) === null || _fieldArr$find3 === void 0 ? void 0 : _fieldArr$find3.Value) || \"\";\n\n          // Heuristic fallback: keep lines that look like procedure entries (codes/amounts)\n          rows = (metaTables || []).map(parts => Array.isArray(parts) ? parts : [String(parts !== null && parts !== void 0 ? parts : \"\")]).filter(parts => parts.join(\" \").match(/\\b\\d{4,}\\b|\\d+\\.\\d{2}/)) // numbers/codes/amounts\n          .map(parts => {\n            const rowObj = {};\n            fixedHeaders.forEach((col, i) => {\n              var _parts$i;\n              if (col === \"Patient Name\") rowObj[col] = patientName;else if (col === \"Pat Ocr\") rowObj[col] = patOcr;else if (col === \"Responsible Party Name\") rowObj[col] = respParty;else rowObj[col] = (_parts$i = parts[i]) !== null && _parts$i !== void 0 ? _parts$i : \"\";\n            });\n            return rowObj;\n          });\n        }\n\n        // Keep in state (also store raw for Excel RawText sheet)\n        outTables[idx] = {\n          columns: fixedHeaders,\n          rows,\n          raw: metaTables\n        };\n\n        // Build summaries from fields; if missing, parse from raw text\n        const summaryObj = {};\n        const wanted = [\"Charges\", \"Receipts\", \"Credits\", \"Debits\", \"Bal Fwd\", \"Acct. Rec.\", \"Total Entries\"];\n        wanted.forEach(key => {\n          const found = fieldArr.find(f => {\n            var _f$Field4;\n            return ((_f$Field4 = f.Field) === null || _f$Field4 === void 0 ? void 0 : _f$Field4.toLowerCase()) === key.toLowerCase();\n          });\n          if ((found === null || found === void 0 ? void 0 : found.Value) !== undefined) summaryObj[key] = found.Value;\n        });\n        if (Object.keys(summaryObj).length === 0 && metaTables !== null && metaTables !== void 0 && metaTables.length) {\n          const joined = metaTables.map(x => Array.isArray(x) ? x.join(\" \") : String(x)).join(\" \");\n          const grab = label => {\n            const m = new RegExp(`${label}\\\\s*:?\\\\s*([0-9,.-]+)`, \"i\").exec(joined);\n            return m ? m[1] : \"\";\n          };\n          wanted.forEach(k => {\n            summaryObj[k] = grab(k) || \"\";\n          });\n        }\n        outSummaries[idx] = summaryObj;\n      }\n      setTables(outTables);\n      setSummaries(outSummaries);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // -------- Excel Export (client-side) --------\n  const handleDownloadExcel = () => {\n    const wb = XLSX.utils.book_new();\n\n    // 1) For each file: ReportRows_<n>\n    tables.forEach((t, i) => {\n      const data = (t.rows || []).map(r => {\n        const o = {};\n        (t.columns || []).forEach(c => {\n          var _r$c;\n          o[c] = (_r$c = r === null || r === void 0 ? void 0 : r[c]) !== null && _r$c !== void 0 ? _r$c : \"\";\n        });\n        return o;\n      });\n      const ws = XLSX.utils.json_to_sheet(data.length ? data : [{\n        Note: \"No rows\"\n      }]);\n      XLSX.utils.book_append_sheet(wb, ws, `ReportRows_${i + 1}`);\n    });\n\n    // 2) Fields sheet (summaries per file)\n    const fieldsRows = summaries.map((s, i) => {\n      var _files$i;\n      return {\n        File: ((_files$i = files[i]) === null || _files$i === void 0 ? void 0 : _files$i.name) || `File_${i + 1}`,\n        ...s\n      };\n    });\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(fieldsRows.length ? fieldsRows : [{\n      Note: \"No summaries\"\n    }]), \"Fields\");\n\n    // 3) RawText_<n> per file so you can audit OCR\n    tables.forEach((t, i) => {\n      const raw = (t.raw || []).map((line, idx) => ({\n        Line: idx + 1,\n        Text: Array.isArray(line) ? line.join(\" \") : String(line !== null && line !== void 0 ? line : \"\")\n      }));\n      const ws = XLSX.utils.json_to_sheet(raw.length ? raw : [{\n        Note: \"No raw text\"\n      }]);\n      XLSX.utils.book_append_sheet(wb, ws, `RawText_${i + 1}`);\n    });\n    const wbout = XLSX.write(wb, {\n      type: 'array',\n      bookType: 'xlsx'\n    });\n    saveAs(new Blob([wbout], {\n      type: 'application/octet-stream'\n    }), 'ocr_export.xlsx');\n  };\n\n  // -------- Table Renderer --------\n  const ExcelGrid = ({\n    title,\n    columns,\n    rows,\n    summary\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid compact\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"excel-grid-scroll\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"excel-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: col\n                }, col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [rows && rows.length > 0 ? rows.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(col => {\n                  var _r$col;\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"excel-td\",\n                    children: (_r$col = r === null || r === void 0 ? void 0 : r[col]) !== null && _r$col !== void 0 ? _r$col : ''\n                  }, col, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: columns.length,\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: \"No rows\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), summary && Object.keys(summary).length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"summary-row\",\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: columns.length,\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: [\"Charges: \", summary[\"Charges\"] || 0, \" | Receipts: \", summary[\"Receipts\"] || 0, \" | Credits: \", summary[\"Credits\"] || 0, \" | Debits: \", summary[\"Debits\"] || 0, \" | Balance Fwd: \", summary[\"Bal Fwd\"] || 0, \" | Acct. Rec.: \", summary[\"Acct. Rec.\"] || 0, \" | Total Entries: \", summary[\"Total Entries\"] || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  };\n\n  // -------- Auth Gate --------\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Signup' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage('');\n        },\n        children: isSignup ? 'Already have an account? Login' : 'No account? Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  }\n\n  // -------- UI --------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: handleDownloadExcel,\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting table...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }, this), tables.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Procedure Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), files.map((file, idx) => {\n        var _tables$idx, _tables$idx2;\n        return /*#__PURE__*/_jsxDEV(ExcelGrid, {\n          title: file.name,\n          columns: ((_tables$idx = tables[idx]) === null || _tables$idx === void 0 ? void 0 : _tables$idx.columns) || [],\n          rows: ((_tables$idx2 = tables[idx]) === null || _tables$idx2 === void 0 ? void 0 : _tables$idx2.rows) || [],\n          summary: summaries[idx] || {}\n        }, `grid-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"LzJOiSnKr3bq63SE5thwgkESO00=\", false, function () {\n  return [useNavigate];\n});\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","XLSX","saveAs","jsxDEV","_jsxDEV","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","tables","setTables","summaries","setSummaries","loading","setLoading","downloadReady","setDownloadReady","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","replace","handleSignup","res","post","data","loginRes","role","setItem","JSON","stringify","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","e","selected","Array","from","target","length","handleUploadAll","outTables","outSummaries","idx","file","entries","_d$metadata","_d$metadata2","_d$metadata3","formData","FormData","append","console","log","name","d","report","metadata","metaTables","fieldArr","fields","fixedHeaders","rows","isArray","_fieldArr$find","_fieldArr$find2","_fieldArr$find3","patientName","find","f","_f$Field","Field","toLowerCase","Value","patOcr","_f$Field2","respParty","_f$Field3","map","parts","String","filter","join","match","rowObj","forEach","col","i","_parts$i","columns","raw","summaryObj","wanted","key","found","_f$Field4","undefined","Object","keys","joined","x","grab","label","m","RegExp","exec","k","handleDownloadExcel","wb","utils","book_new","t","r","o","c","_r$c","ws","json_to_sheet","Note","book_append_sheet","fieldsRows","s","_files$i","File","line","Line","Text","wbout","write","type","bookType","Blob","ExcelGrid","title","summary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_r$col","colSpan","style","textAlign","fontWeight","placeholder","value","onChange","onClick","htmlFor","id","accept","multiple","_tables$idx","_tables$idx2","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["// OCRUpload.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport '../App.css';\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]);     // [{ columns, rows, raw }]\n  const [summaries, setSummaries] = useState([]); // [{ Charges, Receipts, ... }]\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({ baseURL: API_BASE });\n\n  // Attach token automatically\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert('⚠️ Session expired or access denied. Please log in again.');\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) {\n      navigate('/', { replace: true });\n    }\n  }, [auth, isAdmin, navigate]);\n\n  // -------- Auth --------\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', { username, password });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', { username, password });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role,\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role,\n      }));\n    } catch (err) {\n      setMessage('Signup failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', { username, password });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role,\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role,\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      setMessage('Login failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  // -------- File Selection --------\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setSummaries([]);\n    setDownloadReady(false);\n  };\n\n  // -------- Upload & Parse --------\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n\n    try {\n      const outTables = [];\n      const outSummaries = [];\n\n      for (const [idx, file] of files.entries()) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const res = await api.post('/api/ocr', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n\n        console.log('OCR response for', file.name, res.data);\n\n        // Support both shapes: top-level and metadata-nested\n        const d = res.data || {};\n        const report = d.report || d.metadata?.report || null;\n        const metaTables = d.tables || d.metadata?.tables || [];\n        const fieldArr = d.fields || d.metadata?.fields || [];\n\n        // Fixed headers that your UI expects\n        const fixedHeaders = [\n          \"Patient Name\",\"Pat Ocr\",\"Responsible Party Name\",\"Rep #\",\"Doc\",\n          \"B-Type\",\"Seen\",\"Service\",\"Type\",\"Office\",\"Code\",\"Description\",\n          \"Amount\",\"Balance\",\"Claim\",\"Loc\",\"Entered\",\"Who\"\n        ];\n\n        // Prefer structured rows from backend; else fallback from raw metaTables\n        let rows = [];\n        if (report && Array.isArray(report.rows) && report.rows.length > 0) {\n          rows = report.rows; // already keyed by headers\n        } else {\n          // Pull a few patient fields (if any) to seed fallback lines\n          const patientName = fieldArr.find(f => f.Field?.toLowerCase().includes(\"patient name\"))?.Value || \"\";\n          const patOcr = fieldArr.find(f => f.Field?.toLowerCase().includes(\"pat ocr\"))?.Value || \"\";\n          const respParty = fieldArr.find(f => f.Field?.toLowerCase().includes(\"responsible party\"))?.Value || \"\";\n\n          // Heuristic fallback: keep lines that look like procedure entries (codes/amounts)\n          rows = (metaTables || [])\n            .map(parts => (Array.isArray(parts) ? parts : [String(parts ?? \"\")]))\n            .filter(parts => parts.join(\" \").match(/\\b\\d{4,}\\b|\\d+\\.\\d{2}/)) // numbers/codes/amounts\n            .map(parts => {\n              const rowObj = {};\n              fixedHeaders.forEach((col, i) => {\n                if (col === \"Patient Name\") rowObj[col] = patientName;\n                else if (col === \"Pat Ocr\") rowObj[col] = patOcr;\n                else if (col === \"Responsible Party Name\") rowObj[col] = respParty;\n                else rowObj[col] = parts[i] ?? \"\";\n              });\n              return rowObj;\n            });\n        }\n\n        // Keep in state (also store raw for Excel RawText sheet)\n        outTables[idx] = { columns: fixedHeaders, rows, raw: metaTables };\n\n        // Build summaries from fields; if missing, parse from raw text\n        const summaryObj = {};\n        const wanted = [\"Charges\",\"Receipts\",\"Credits\",\"Debits\",\"Bal Fwd\",\"Acct. Rec.\",\"Total Entries\"];\n        wanted.forEach(key => {\n          const found = fieldArr.find(f => f.Field?.toLowerCase() === key.toLowerCase());\n          if (found?.Value !== undefined) summaryObj[key] = found.Value;\n        });\n        if (Object.keys(summaryObj).length === 0 && metaTables?.length) {\n          const joined = metaTables\n            .map(x => (Array.isArray(x) ? x.join(\" \") : String(x)))\n            .join(\" \");\n          const grab = (label) => {\n            const m = new RegExp(`${label}\\\\s*:?\\\\s*([0-9,.-]+)`, \"i\").exec(joined);\n            return m ? m[1] : \"\";\n          };\n          wanted.forEach(k => { summaryObj[k] = grab(k) || \"\"; });\n        }\n        outSummaries[idx] = summaryObj;\n      }\n\n      setTables(outTables);\n      setSummaries(outSummaries);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // -------- Excel Export (client-side) --------\n  const handleDownloadExcel = () => {\n    const wb = XLSX.utils.book_new();\n\n    // 1) For each file: ReportRows_<n>\n    tables.forEach((t, i) => {\n      const data = (t.rows || []).map(r => {\n        const o = {};\n        (t.columns || []).forEach(c => { o[c] = r?.[c] ?? \"\"; });\n        return o;\n      });\n      const ws = XLSX.utils.json_to_sheet(data.length ? data : [{ Note: \"No rows\" }]);\n      XLSX.utils.book_append_sheet(wb, ws, `ReportRows_${i + 1}`);\n    });\n\n    // 2) Fields sheet (summaries per file)\n    const fieldsRows = summaries.map((s, i) => ({ File: files[i]?.name || `File_${i + 1}`, ...s }));\n    XLSX.utils.book_append_sheet(\n      wb,\n      XLSX.utils.json_to_sheet(fieldsRows.length ? fieldsRows : [{ Note: \"No summaries\" }]),\n      \"Fields\"\n    );\n\n    // 3) RawText_<n> per file so you can audit OCR\n    tables.forEach((t, i) => {\n      const raw = (t.raw || []).map((line, idx) => ({\n        Line: idx + 1,\n        Text: Array.isArray(line) ? line.join(\" \") : String(line ?? \"\")\n      }));\n      const ws = XLSX.utils.json_to_sheet(raw.length ? raw : [{ Note: \"No raw text\" }]);\n      XLSX.utils.book_append_sheet(wb, ws, `RawText_${i + 1}`);\n    });\n\n    const wbout = XLSX.write(wb, { type: 'array', bookType: 'xlsx' });\n    saveAs(new Blob([wbout], { type: 'application/octet-stream' }), 'ocr_export.xlsx');\n  };\n\n  // -------- Table Renderer --------\n  const ExcelGrid = ({ title, columns, rows, summary }) => {\n    return (\n      <div className=\"excel-grid-wrapper\">\n        <div className=\"excel-grid-header\">\n          <h4 className=\"file-title\">{title}</h4>\n        </div>\n        <div className=\"excel-grid compact\">\n          <div className=\"excel-grid-scroll\">\n            <table className=\"excel-table\">\n              <thead>\n                <tr>\n                  {columns.map((col) => (\n                    <th key={col} className=\"excel-th\">{col}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {rows && rows.length > 0 ? (\n                  rows.map((r, i) => (\n                    <tr key={i}>\n                      {columns.map((col) => (\n                        <td key={col} className=\"excel-td\">{r?.[col] ?? ''}</td>\n                      ))}\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan={columns.length} style={{ textAlign: 'center' }}>\n                      No rows\n                    </td>\n                  </tr>\n                )}\n                {summary && Object.keys(summary).length > 0 && (\n                  <tr className=\"summary-row\">\n                    <td colSpan={columns.length} style={{ fontWeight: 'bold' }}>\n                      Charges: {summary[\"Charges\"] || 0} | Receipts: {summary[\"Receipts\"] || 0} | \n                      Credits: {summary[\"Credits\"] || 0} | Debits: {summary[\"Debits\"] || 0} | \n                      Balance Fwd: {summary[\"Bal Fwd\"] || 0} | Acct. Rec.: {summary[\"Acct. Rec.\"] || 0} | \n                      Total Entries: {summary[\"Total Entries\"] || 0}\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // -------- Auth Gate --------\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? 'Signup' : 'Login'}</h2>\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"auth-input\" />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"auth-input\" />\n        {isSignup ? (\n          <button className=\"auth-btn\" onClick={handleSignup}>Signup</button>\n        ) : (\n          <button className=\"auth-btn\" onClick={handleLogin}>Login</button>\n        )}\n        <button className=\"toggle-btn\" onClick={() => { setIsSignup(!isSignup); setMessage(''); }}>\n          {isSignup ? 'Already have an account? Login' : 'No account? Signup'}\n        </button>\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  // -------- UI --------\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">\n          {isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'}\n        </h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>Upload All</button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={handleDownloadExcel}>\n              ⬇️ Download Excel\n            </button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, i) => (<li key={i}>📎 {file.name}</li>))}\n          </ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting table...</p>}\n\n      {tables.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Procedure Report</h3>\n          {files.map((file, idx) => (\n            <ExcelGrid\n              key={`grid-${idx}`}\n              title={file.name}\n              columns={tables[idx]?.columns || []}\n              rows={tables[idx]?.rows || []}\n              summary={summaries[idx] || {}}\n            />\n          ))}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}