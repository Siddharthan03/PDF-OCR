{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [allMetadata, setAllMetadata] = useState([]);\n  const [agingTables, setAgingTables] = useState([]); // NEW: per-file {columns, rows, sections}\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n\n  // Axios instance\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n\n  // Add Authorization header automatically\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  // Handle session expiration globally\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert('⚠️ Session expired or access denied. Please log in again.');\n    }\n    return Promise.reject(error);\n  });\n\n  // Redirect if already logged in (only for non-admins)\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) {\n      navigate('/', {\n        replace: true\n      });\n    }\n  }, [auth, isAdmin, navigate]);\n\n  // --------------------------\n  // Signup / Login\n  // --------------------------\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      // auto-login after signup\n      const loginRes = await api.post('/auth/login', {\n        username,\n        password\n      });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      // FIX: use JS logical OR (||), not Python \"or\"\n      setMessage('Signup failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', {\n        username,\n        password\n      });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage('Login failed: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n\n  // --------------------------\n  // File Upload Handlers\n  // --------------------------\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setAllMetadata([]);\n    setAgingTables([]); // NEW: reset tables list\n    setDownloadReady(false);\n  };\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      var _auth$role;\n      // Only Admin attempts to reset server-side accumulator\n      if ((auth === null || auth === void 0 ? void 0 : (_auth$role = auth.role) === null || _auth$role === void 0 ? void 0 : _auth$role.toLowerCase()) === 'admin') {\n        try {\n          await api.post('/api/reset');\n        } catch (resetErr) {\n          var _resetErr$response;\n          console.warn('Reset skipped:', (resetErr === null || resetErr === void 0 ? void 0 : (_resetErr$response = resetErr.response) === null || _resetErr$response === void 0 ? void 0 : _resetErr$response.status) || (resetErr === null || resetErr === void 0 ? void 0 : resetErr.message));\n        }\n      }\n      const all = [];\n      const tables = [];\n      for (const [idx, file] of files.entries()) {\n        var _res$data$metadata;\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${auth === null || auth === void 0 ? void 0 : auth.token}` // ✅ preserve token\n          }\n        });\n        const meta = res.data.metadata || {};\n        meta['File Name'] = meta['File Name'] || file.name;\n        meta['Patient Signature'] = res.data.patient_signature;\n        meta['Physician Signature'] = res.data.physician_signature;\n\n        // NEW: capture parsed report for Excel-like table\n        const report = res.data.report || ((_res$data$metadata = res.data.metadata) === null || _res$data$metadata === void 0 ? void 0 : _res$data$metadata.report) || null;\n        tables[idx] = report && report.columns && report.rows ? report : {\n          columns: [],\n          rows: [],\n          sections: []\n        };\n        all.push(meta);\n\n        // Save metadata on server for Excel export\n        await api.post('/api/export-excel', {\n          metadata: meta\n        }, {\n          headers: {\n            Authorization: `Bearer ${auth === null || auth === void 0 ? void 0 : auth.token}`\n          }\n        });\n      }\n      setAllMetadata(all);\n      setAgingTables(tables); // NEW: set per-file tables\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadExcel = async () => {\n    try {\n      const res = await api.get('/api/export-excel', {\n        responseType: 'blob',\n        headers: {\n          Authorization: `Bearer ${auth === null || auth === void 0 ? void 0 : auth.token}` // ✅ preserve token\n        }\n      });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'metadata_output.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (err) {\n      console.error('Excel download failed:', err);\n      alert('⚠️ Download failed. Please try again.');\n    }\n  };\n\n  // --------------------------\n  // Excel-like table component\n  // --------------------------\n  const ExcelGrid = ({\n    title,\n    columns,\n    rows\n  }) => {\n    _s();\n    // Optional CSV export\n    const csv = useMemo(() => {\n      if (!Array.isArray(columns) || !columns.length || !Array.isArray(rows)) return '';\n      const escape = v => {\n        const s = String(v !== null && v !== void 0 ? v : '');\n        const needs = /[\",\\n]/.test(s);\n        const esc = s.replace(/\"/g, '\"\"');\n        return needs ? `\"${esc}\"` : esc;\n      };\n      const header = columns.map(escape).join(',');\n      const body = rows.map(r => columns.map(c => escape(r === null || r === void 0 ? void 0 : r[c])).join(',')).join('\\n');\n      return `${header}\\n${body}`;\n    }, [columns, rows]);\n    const downloadCSV = () => {\n      if (!csv) return;\n      const blob = new Blob([csv], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.setAttribute('download', `${title || 'aging_report'}.csv`);\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    };\n    const hasData = Array.isArray(columns) && columns.length > 0 && Array.isArray(rows);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"excel-grid-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"download-btn\",\n            onClick: downloadCSV,\n            disabled: !csv,\n            children: \"\\u2B07\\uFE0F Download CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), !hasData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: \"No table rows parsed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid compact\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"excel-grid-scroll\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"excel-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: col\n                }, col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: rows.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"excel-td\",\n                  colSpan: columns.length,\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: \"No rows\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this) : rows.map((r, i) => {\n                var _r$row_id;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: columns.map(col => {\n                    var _r$col;\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"excel-td\",\n                      children: (_r$col = r === null || r === void 0 ? void 0 : r[col]) !== null && _r$col !== void 0 ? _r$col : ''\n                    }, col, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, (_r$row_id = r === null || r === void 0 ? void 0 : r.row_id) !== null && _r$row_id !== void 0 ? _r$row_id : i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this);\n  };\n\n  // --------------------------\n  // Render\n  // --------------------------\n  _s(ExcelGrid, \"ALFZ3d2d7I5JCvodDCO3z2eJd+Y=\");\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Signup' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage('');\n        },\n        children: isSignup ? 'Already have an account? Login' : 'No account? Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: handleDownloadExcel,\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting metadata...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 19\n    }, this), allMetadata.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-heading\",\n          children: \"\\uD83D\\uDCCB Extracted Metadata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), allMetadata.map((meta, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"file-title\",\n            children: meta['File Name']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"metadata-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Field\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(meta).map(([key, value], i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"field-cell\",\n                  children: key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"value-cell\",\n                  children: (key === 'Patient Signature' || key === 'Physician Signature') && typeof value === 'string' && value.includes('/signatures/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `${API_BASE}${value}`,\n                    alt: key,\n                    className: \"signature-img\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 29\n                  }, this) : String(value !== null && value !== void 0 ? value : '')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this)]\n        }, fileIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-heading\",\n          children: \"\\uD83D\\uDCCA Aging Report (Excel-style)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), files.map((file, idx) => {\n          const table = agingTables[idx] || {\n            columns: [],\n            rows: [],\n            sections: []\n          };\n          return /*#__PURE__*/_jsxDEV(ExcelGrid, {\n            title: file.name,\n            columns: table.columns || [],\n            rows: table.rows || []\n          }, `grid-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n};\n_s2(OCRUpload, \"1yEv8CEvgo+YtObcttcdtVC3GUE=\", false, function () {\n  return [useNavigate];\n});\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","OCRUpload","auth","setAuth","isAdmin","_s2","_s","$RefreshSig$","navigate","files","setFiles","allMetadata","setAllMetadata","agingTables","setAgingTables","loading","setLoading","downloadReady","setDownloadReady","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","replace","handleSignup","res","post","data","loginRes","role","setItem","JSON","stringify","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","e","selected","Array","from","target","length","handleUploadAll","_auth$role","toLowerCase","resetErr","_resetErr$response","console","warn","all","tables","idx","file","entries","_res$data$metadata","formData","FormData","append","meta","metadata","name","patient_signature","physician_signature","report","columns","rows","sections","push","handleDownloadExcel","get","responseType","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","ExcelGrid","title","csv","isArray","escape","v","s","String","needs","test","esc","header","map","join","r","c","downloadCSV","blob","type","a","hasData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","col","colSpan","style","textAlign","i","_r$row_id","_r$col","row_id","placeholder","value","onChange","htmlFor","id","accept","multiple","fileIndex","Object","key","src","alt","table","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [allMetadata, setAllMetadata] = useState([]);\n  const [agingTables, setAgingTables] = useState([]); // NEW: per-file {columns, rows, sections}\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n\n  // Axios instance\n  const api = axios.create({ baseURL: API_BASE });\n\n  // Add Authorization header automatically\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  // Handle session expiration globally\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert('⚠️ Session expired or access denied. Please log in again.');\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  // Redirect if already logged in (only for non-admins)\n  useEffect(() => {\n    if (auth?.token && !isAdmin) {\n      navigate('/', { replace: true });\n    }\n  }, [auth, isAdmin, navigate]);\n\n  // --------------------------\n  // Signup / Login\n  // --------------------------\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', { username, password });\n      setMessage(res.data.message || 'Signup successful!');\n      // auto-login after signup\n      const loginRes = await api.post('/auth/login', { username, password });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role,\n      });\n      localStorage.setItem(\n        'auth',\n        JSON.stringify({\n          token: loginRes.data.token,\n          username: loginRes.data.username,\n          role: loginRes.data.role,\n        })\n      );\n    } catch (err) {\n      // FIX: use JS logical OR (||), not Python \"or\"\n      setMessage('Signup failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', { username, password });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role,\n        });\n        localStorage.setItem(\n          'auth',\n          JSON.stringify({\n            token: res.data.token,\n            username: res.data.username,\n            role: res.data.role,\n          })\n        );\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      setMessage('Login failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  // --------------------------\n  // File Upload Handlers\n  // --------------------------\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setAllMetadata([]);\n    setAgingTables([]); // NEW: reset tables list\n    setDownloadReady(false);\n  };\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n\n    try {\n      // Only Admin attempts to reset server-side accumulator\n      if (auth?.role?.toLowerCase() === 'admin') {\n        try {\n          await api.post('/api/reset');\n        } catch (resetErr) {\n          console.warn('Reset skipped:', resetErr?.response?.status || resetErr?.message);\n        }\n      }\n\n      const all = [];\n      const tables = [];\n\n      for (const [idx, file] of files.entries()) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${auth?.token}`, // ✅ preserve token\n          },\n        });\n\n        const meta = res.data.metadata || {};\n        meta['File Name'] = meta['File Name'] || file.name;\n        meta['Patient Signature'] = res.data.patient_signature;\n        meta['Physician Signature'] = res.data.physician_signature;\n\n        // NEW: capture parsed report for Excel-like table\n        const report = res.data.report || res.data.metadata?.report || null;\n        tables[idx] = (report && report.columns && report.rows)\n          ? report\n          : { columns: [], rows: [], sections: [] };\n\n        all.push(meta);\n\n        // Save metadata on server for Excel export\n        await api.post(\n          '/api/export-excel',\n          { metadata: meta },\n          {\n            headers: {\n              Authorization: `Bearer ${auth?.token}`,\n            },\n          }\n        );\n      }\n\n      setAllMetadata(all);\n      setAgingTables(tables); // NEW: set per-file tables\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownloadExcel = async () => {\n    try {\n      const res = await api.get('/api/export-excel', {\n        responseType: 'blob',\n        headers: {\n          Authorization: `Bearer ${auth?.token}`, // ✅ preserve token\n        },\n      });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'metadata_output.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (err) {\n      console.error('Excel download failed:', err);\n      alert('⚠️ Download failed. Please try again.');\n    }\n  };\n\n  // --------------------------\n  // Excel-like table component\n  // --------------------------\n  const ExcelGrid = ({ title, columns, rows }) => {\n    // Optional CSV export\n    const csv = useMemo(() => {\n      if (!Array.isArray(columns) || !columns.length || !Array.isArray(rows)) return '';\n      const escape = (v) => {\n        const s = String(v ?? '');\n        const needs = /[\",\\n]/.test(s);\n        const esc = s.replace(/\"/g, '\"\"');\n        return needs ? `\"${esc}\"` : esc;\n      };\n      const header = columns.map(escape).join(',');\n      const body = rows.map(r => columns.map(c => escape(r?.[c])).join(',')).join('\\n');\n      return `${header}\\n${body}`;\n    }, [columns, rows]);\n\n    const downloadCSV = () => {\n      if (!csv) return;\n      const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.setAttribute('download', `${title || 'aging_report'}.csv`);\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    };\n\n    const hasData = Array.isArray(columns) && columns.length > 0 && Array.isArray(rows);\n\n    return (\n      <div className=\"excel-grid-wrapper\">\n        <div className=\"excel-grid-header\">\n          <h4 className=\"file-title\">{title}</h4>\n          <div className=\"excel-grid-actions\">\n            <button className=\"download-btn\" onClick={downloadCSV} disabled={!csv}>\n              ⬇️ Download CSV\n            </button>\n          </div>\n        </div>\n\n        {!hasData ? (\n          <div className=\"no-data\">No table rows parsed</div>\n        ) : (\n          <div className=\"excel-grid compact\">\n            <div className=\"excel-grid-scroll\">\n              <table className=\"excel-table\">\n                <thead>\n                  <tr>\n                    {columns.map((col) => (\n                      <th key={col} className=\"excel-th\">{col}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {rows.length === 0 ? (\n                    <tr>\n                      <td className=\"excel-td\" colSpan={columns.length} style={{ textAlign: 'center' }}>\n                        No rows\n                      </td>\n                    </tr>\n                  ) : (\n                    rows.map((r, i) => (\n                      <tr key={r?.row_id ?? i}>\n                        {columns.map((col) => (\n                          <td key={col} className=\"excel-td\">{r?.[col] ?? ''}</td>\n                        ))}\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // --------------------------\n  // Render\n  // --------------------------\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? 'Signup' : 'Login'}</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          className=\"auth-input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"auth-input\"\n        />\n\n        {isSignup ? (\n          <button className=\"auth-btn\" onClick={handleSignup}>Signup</button>\n        ) : (\n          <button className=\"auth-btn\" onClick={handleLogin}>Login</button>\n        )}\n\n        <button\n          className=\"toggle-btn\"\n          onClick={() => {\n            setIsSignup(!isSignup);\n            setMessage('');\n          }}\n        >\n          {isSignup ? 'Already have an account? Login' : 'No account? Signup'}\n        </button>\n\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">\n          {isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'}\n        </h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">\n          Upload up to 10 files:\n        </label>\n        <input\n          type=\"file\"\n          id=\"file-upload\"\n          accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n          multiple\n          onChange={handleFileChange}\n        />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>\n            Upload All\n          </button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={handleDownloadExcel}>\n              ⬇️ Download Excel\n            </button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, i) => (\n              <li key={i}>📎 {file.name}</li>\n            ))}\n          </ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting metadata...</p>}\n\n      {allMetadata.length > 0 && (\n        <>\n          {/* Existing key/value metadata table */}\n          <section className=\"results-section\">\n            <h3 className=\"section-heading\">📋 Extracted Metadata</h3>\n            {allMetadata.map((meta, fileIndex) => (\n              <div key={fileIndex} className=\"table-container\">\n                <h4 className=\"file-title\">{meta['File Name']}</h4>\n                <table className=\"metadata-table\">\n                  <thead>\n                    <tr>\n                      <th>Field</th>\n                      <th>Value</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {Object.entries(meta).map(([key, value], i) => (\n                      <tr key={i}>\n                        <td className=\"field-cell\">{key}</td>\n                        <td className=\"value-cell\">\n                          {(key === 'Patient Signature' || key === 'Physician Signature') &&\n                          typeof value === 'string' &&\n                          value.includes('/signatures/') ? (\n                            <img\n                              src={`${API_BASE}${value}`}\n                              alt={key}\n                              className=\"signature-img\"\n                            />\n                          ) : (\n                            String(value ?? '')\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            ))}\n          </section>\n\n          {/* NEW: Excel-like tables for parsed Aging Report rows */}\n          <section className=\"results-section\">\n            <h3 className=\"section-heading\">📊 Aging Report (Excel-style)</h3>\n            {files.map((file, idx) => {\n              const table = agingTables[idx] || { columns: [], rows: [], sections: [] };\n              return (\n                <ExcelGrid\n                  key={`grid-${idx}`}\n                  title={file.name}\n                  columns={table.columns || []}\n                  rows={table.rows || []}\n                />\n              );\n            })}\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,OAAO,GAAG;AAAM,CAAC,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACxD,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMmC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;;EAE1E;EACA,MAAMC,GAAG,GAAGpC,KAAK,CAACqC,MAAM,CAAC;IAAEC,OAAO,EAAEN;EAAS,CAAC,CAAC;;EAE/C;EACAI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;IACvC,IAAInC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEoC,KAAK,EAAED,MAAM,CAACE,OAAO,CAACC,aAAa,GAAG,UAAUtC,IAAI,CAACoC,KAAK,EAAE;IACtE,OAAOD,MAAM;EACf,CAAC,CAAC;;EAEF;EACAN,GAAG,CAACG,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;IAAA,IAAAC,eAAA;IACT,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,EAAAD,eAAA,GAACD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,CAAC,EAAE;MAC/CC,YAAY,CAACC,KAAK,CAAC,CAAC;MACpB5C,OAAO,CAAC,IAAI,CAAC;MACb6C,KAAK,CAAC,2DAA2D,CAAC;IACpE;IACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;EAC9B,CACF,CAAC;;EAED;EACAjD,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEoC,KAAK,IAAI,CAAClC,OAAO,EAAE;MAC3BI,QAAQ,CAAC,GAAG,EAAE;QAAE2C,OAAO,EAAE;MAAK,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,CAACjD,IAAI,EAAEE,OAAO,EAAEI,QAAQ,CAAC,CAAC;;EAE7B;EACA;EACA;EACA,MAAM4C,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,cAAc,EAAE;QAAEjC,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAClEG,UAAU,CAAC2B,GAAG,CAACE,IAAI,CAAC9B,OAAO,IAAI,oBAAoB,CAAC;MACpD;MACA,MAAM+B,QAAQ,GAAG,MAAMzB,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAE;QAAEjC,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACtEpB,OAAO,CAAC;QACNmC,KAAK,EAAEkB,QAAQ,CAACD,IAAI,CAACjB,KAAK;QAC1BjB,QAAQ,EAAEmC,QAAQ,CAACD,IAAI,CAAClC,QAAQ;QAChCoC,IAAI,EAAED,QAAQ,CAACD,IAAI,CAACE;MACtB,CAAC,CAAC;MACFX,YAAY,CAACY,OAAO,CAClB,MAAM,EACNC,IAAI,CAACC,SAAS,CAAC;QACbtB,KAAK,EAAEkB,QAAQ,CAACD,IAAI,CAACjB,KAAK;QAC1BjB,QAAQ,EAAEmC,QAAQ,CAACD,IAAI,CAAClC,QAAQ;QAChCoC,IAAI,EAAED,QAAQ,CAACD,IAAI,CAACE;MACtB,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOI,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZ;MACArC,UAAU,CAAC,iBAAiB,IAAI,EAAAoC,aAAA,GAAAD,GAAG,CAACpB,QAAQ,cAAAqB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcP,IAAI,cAAAQ,kBAAA,uBAAlBA,kBAAA,CAAoBrB,KAAK,KAAImB,GAAG,CAACpC,OAAO,CAAC,CAAC;IAC5E;EACF,CAAC;EAED,MAAMuC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMX,GAAG,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAE;QAAEjC,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACjE,IAAI8B,GAAG,CAACE,IAAI,CAACjB,KAAK,EAAE;QAClBnC,OAAO,CAAC;UACNmC,KAAK,EAAEe,GAAG,CAACE,IAAI,CAACjB,KAAK;UACrBjB,QAAQ,EAAEgC,GAAG,CAACE,IAAI,CAAClC,QAAQ;UAC3BoC,IAAI,EAAEJ,GAAG,CAACE,IAAI,CAACE;QACjB,CAAC,CAAC;QACFX,YAAY,CAACY,OAAO,CAClB,MAAM,EACNC,IAAI,CAACC,SAAS,CAAC;UACbtB,KAAK,EAAEe,GAAG,CAACE,IAAI,CAACjB,KAAK;UACrBjB,QAAQ,EAAEgC,GAAG,CAACE,IAAI,CAAClC,QAAQ;UAC3BoC,IAAI,EAAEJ,GAAG,CAACE,IAAI,CAACE;QACjB,CAAC,CACH,CAAC;QACD/B,UAAU,CAAC,mBAAmB,CAAC;MACjC,CAAC,MAAM;QACLA,UAAU,CAAC,qBAAqB,CAAC;MACnC;IACF,CAAC,CAAC,OAAOmC,GAAG,EAAE;MAAA,IAAAI,cAAA,EAAAC,mBAAA;MACZxC,UAAU,CAAC,gBAAgB,IAAI,EAAAuC,cAAA,GAAAJ,GAAG,CAACpB,QAAQ,cAAAwB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcV,IAAI,cAAAW,mBAAA,uBAAlBA,mBAAA,CAAoBxB,KAAK,KAAImB,GAAG,CAACpC,OAAO,CAAC,CAAC;IAC3E;EACF,CAAC;;EAED;EACA;EACA;EACA,MAAM0C,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,MAAM,CAAC/D,KAAK,CAAC;IAC3C,IAAI4D,QAAQ,CAACI,MAAM,GAAG,EAAE,EAAE;MACxBzB,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACF;IACAtC,QAAQ,CAAC2D,QAAQ,CAAC;IAClBzD,cAAc,CAAC,EAAE,CAAC;IAClBE,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACpBI,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMwD,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACjE,KAAK,CAACgE,MAAM,EAAE;IACnBzD,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MAAA,IAAA2D,UAAA;MACF;MACA,IAAI,CAAAzE,IAAI,aAAJA,IAAI,wBAAAyE,UAAA,GAAJzE,IAAI,CAAEuD,IAAI,cAAAkB,UAAA,uBAAVA,UAAA,CAAYC,WAAW,CAAC,CAAC,MAAK,OAAO,EAAE;QACzC,IAAI;UACF,MAAM7C,GAAG,CAACuB,IAAI,CAAC,YAAY,CAAC;QAC9B,CAAC,CAAC,OAAOuB,QAAQ,EAAE;UAAA,IAAAC,kBAAA;UACjBC,OAAO,CAACC,IAAI,CAAC,gBAAgB,EAAE,CAAAH,QAAQ,aAARA,QAAQ,wBAAAC,kBAAA,GAARD,QAAQ,CAAEpC,QAAQ,cAAAqC,kBAAA,uBAAlBA,kBAAA,CAAoBjC,MAAM,MAAIgC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEpD,OAAO,EAAC;QACjF;MACF;MAEA,MAAMwD,GAAG,GAAG,EAAE;MACd,MAAMC,MAAM,GAAG,EAAE;MAEjB,KAAK,MAAM,CAACC,GAAG,EAAEC,IAAI,CAAC,IAAI3E,KAAK,CAAC4E,OAAO,CAAC,CAAC,EAAE;QAAA,IAAAC,kBAAA;QACzC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;QAE7B,MAAM/B,GAAG,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,UAAU,EAAEiC,QAAQ,EAAE;UAC/ChD,OAAO,EAAE;YACP,cAAc,EAAE,qBAAqB;YACrCC,aAAa,EAAE,UAAUtC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoC,KAAK,EAAE,CAAE;UAC1C;QACF,CAAC,CAAC;QAEF,MAAMoD,IAAI,GAAGrC,GAAG,CAACE,IAAI,CAACoC,QAAQ,IAAI,CAAC,CAAC;QACpCD,IAAI,CAAC,WAAW,CAAC,GAAGA,IAAI,CAAC,WAAW,CAAC,IAAIN,IAAI,CAACQ,IAAI;QAClDF,IAAI,CAAC,mBAAmB,CAAC,GAAGrC,GAAG,CAACE,IAAI,CAACsC,iBAAiB;QACtDH,IAAI,CAAC,qBAAqB,CAAC,GAAGrC,GAAG,CAACE,IAAI,CAACuC,mBAAmB;;QAE1D;QACA,MAAMC,MAAM,GAAG1C,GAAG,CAACE,IAAI,CAACwC,MAAM,MAAAT,kBAAA,GAAIjC,GAAG,CAACE,IAAI,CAACoC,QAAQ,cAAAL,kBAAA,uBAAjBA,kBAAA,CAAmBS,MAAM,KAAI,IAAI;QACnEb,MAAM,CAACC,GAAG,CAAC,GAAIY,MAAM,IAAIA,MAAM,CAACC,OAAO,IAAID,MAAM,CAACE,IAAI,GAClDF,MAAM,GACN;UAAEC,OAAO,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAC;QAE3CjB,GAAG,CAACkB,IAAI,CAACT,IAAI,CAAC;;QAEd;QACA,MAAM3D,GAAG,CAACuB,IAAI,CACZ,mBAAmB,EACnB;UAAEqC,QAAQ,EAAED;QAAK,CAAC,EAClB;UACEnD,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUtC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoC,KAAK;UACtC;QACF,CACF,CAAC;MACH;MAEA1B,cAAc,CAACqE,GAAG,CAAC;MACnBnE,cAAc,CAACoE,MAAM,CAAC,CAAC,CAAC;MACxBhE,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAO2C,GAAG,EAAE;MACZkB,OAAO,CAACrC,KAAK,CAAC,gBAAgB,EAAEmB,GAAG,CAAC;MACpCb,KAAK,CAAC,qCAAqC,CAAC;IAC9C,CAAC,SAAS;MACRhC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMoF,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAM/C,GAAG,GAAG,MAAMtB,GAAG,CAACsE,GAAG,CAAC,mBAAmB,EAAE;QAC7CC,YAAY,EAAE,MAAM;QACpB/D,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUtC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoC,KAAK,EAAE,CAAE;QAC1C;MACF,CAAC,CAAC;MACF,MAAMiE,GAAG,GAAGC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACrD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;MACrD,MAAMoD,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;MACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,sBAAsB,CAAC;MACrDH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;IACf,CAAC,CAAC,OAAOtD,GAAG,EAAE;MACZkB,OAAO,CAACrC,KAAK,CAAC,wBAAwB,EAAEmB,GAAG,CAAC;MAC5Cb,KAAK,CAAC,uCAAuC,CAAC;IAChD;EACF,CAAC;;EAED;EACA;EACA;EACA,MAAMoE,SAAS,GAAGA,CAAC;IAAEC,KAAK;IAAErB,OAAO;IAAEC;EAAK,CAAC,KAAK;IAAA3F,EAAA;IAC9C;IACA,MAAMgH,GAAG,GAAG5H,OAAO,CAAC,MAAM;MACxB,IAAI,CAAC4E,KAAK,CAACiD,OAAO,CAACvB,OAAO,CAAC,IAAI,CAACA,OAAO,CAACvB,MAAM,IAAI,CAACH,KAAK,CAACiD,OAAO,CAACtB,IAAI,CAAC,EAAE,OAAO,EAAE;MACjF,MAAMuB,MAAM,GAAIC,CAAC,IAAK;QACpB,MAAMC,CAAC,GAAGC,MAAM,CAACF,CAAC,aAADA,CAAC,cAADA,CAAC,GAAI,EAAE,CAAC;QACzB,MAAMG,KAAK,GAAG,QAAQ,CAACC,IAAI,CAACH,CAAC,CAAC;QAC9B,MAAMI,GAAG,GAAGJ,CAAC,CAACvE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;QACjC,OAAOyE,KAAK,GAAG,IAAIE,GAAG,GAAG,GAAGA,GAAG;MACjC,CAAC;MACD,MAAMC,MAAM,GAAG/B,OAAO,CAACgC,GAAG,CAACR,MAAM,CAAC,CAACS,IAAI,CAAC,GAAG,CAAC;MAC5C,MAAMjB,IAAI,GAAGf,IAAI,CAAC+B,GAAG,CAACE,CAAC,IAAIlC,OAAO,CAACgC,GAAG,CAACG,CAAC,IAAIX,MAAM,CAACU,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,GAAG,CAAC,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC;MACjF,OAAO,GAAGF,MAAM,KAAKf,IAAI,EAAE;IAC7B,CAAC,EAAE,CAAChB,OAAO,EAAEC,IAAI,CAAC,CAAC;IAEnB,MAAMmC,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAI,CAACd,GAAG,EAAE;MACV,MAAMe,IAAI,GAAG,IAAI3B,IAAI,CAAC,CAACY,GAAG,CAAC,EAAE;QAAEgB,IAAI,EAAE;MAA0B,CAAC,CAAC;MACjE,MAAM/B,GAAG,GAAGC,GAAG,CAACC,eAAe,CAAC4B,IAAI,CAAC;MACrC,MAAME,CAAC,GAAG3B,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrC0B,CAAC,CAACzB,IAAI,GAAGP,GAAG;MACZgC,CAAC,CAACxB,YAAY,CAAC,UAAU,EAAE,GAAGM,KAAK,IAAI,cAAc,MAAM,CAAC;MAC5DT,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACsB,CAAC,CAAC;MAC5BA,CAAC,CAACrB,KAAK,CAAC,CAAC;MACTqB,CAAC,CAACpB,MAAM,CAAC,CAAC;IACZ,CAAC;IAED,MAAMqB,OAAO,GAAGlE,KAAK,CAACiD,OAAO,CAACvB,OAAO,CAAC,IAAIA,OAAO,CAACvB,MAAM,GAAG,CAAC,IAAIH,KAAK,CAACiD,OAAO,CAACtB,IAAI,CAAC;IAEnF,oBACEnG,OAAA;MAAK2I,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC5I,OAAA;QAAK2I,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChC5I,OAAA;UAAI2I,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAErB;QAAK;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvChJ,OAAA;UAAK2I,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjC5I,OAAA;YAAQ2I,SAAS,EAAC,cAAc;YAACM,OAAO,EAAEX,WAAY;YAACY,QAAQ,EAAE,CAAC1B,GAAI;YAAAoB,QAAA,EAAC;UAEvE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEL,CAACN,OAAO,gBACP1I,OAAA;QAAK2I,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAEnDhJ,OAAA;QAAK2I,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjC5I,OAAA;UAAK2I,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAChC5I,OAAA;YAAO2I,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC5B5I,OAAA;cAAA4I,QAAA,eACE5I,OAAA;gBAAA4I,QAAA,EACG1C,OAAO,CAACgC,GAAG,CAAEiB,GAAG,iBACfnJ,OAAA;kBAAc2I,SAAS,EAAC,UAAU;kBAAAC,QAAA,EAAEO;gBAAG,GAA9BA,GAAG;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAgC,CAC7C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACRhJ,OAAA;cAAA4I,QAAA,EACGzC,IAAI,CAACxB,MAAM,KAAK,CAAC,gBAChB3E,OAAA;gBAAA4I,QAAA,eACE5I,OAAA;kBAAI2I,SAAS,EAAC,UAAU;kBAACS,OAAO,EAAElD,OAAO,CAACvB,MAAO;kBAAC0E,KAAK,EAAE;oBAAEC,SAAS,EAAE;kBAAS,CAAE;kBAAAV,QAAA,EAAC;gBAElF;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,GAEL7C,IAAI,CAAC+B,GAAG,CAAC,CAACE,CAAC,EAAEmB,CAAC;gBAAA,IAAAC,SAAA;gBAAA,oBACZxJ,OAAA;kBAAA4I,QAAA,EACG1C,OAAO,CAACgC,GAAG,CAAEiB,GAAG;oBAAA,IAAAM,MAAA;oBAAA,oBACfzJ,OAAA;sBAAc2I,SAAS,EAAC,UAAU;sBAAAC,QAAA,GAAAa,MAAA,GAAErB,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAGe,GAAG,CAAC,cAAAM,MAAA,cAAAA,MAAA,GAAI;oBAAE,GAAzCN,GAAG;sBAAAN,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAA2C,CAAC;kBAAA,CACzD;gBAAC,IAAAQ,SAAA,GAHKpB,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEsB,MAAM,cAAAF,SAAA,cAAAA,SAAA,GAAID,CAAC;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAInB,CAAC;cAAA,CACN;YACF;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV,CAAC;;EAED;EACA;EACA;EAAAxI,EAAA,CAhFM8G,SAAS;EAiFf,IAAI,EAAClH,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEoC,KAAK,KAAI,CAAClC,OAAO,EAAE;IAC5B,oBACEN,OAAA;MAAK2I,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB5I,OAAA;QAAA4I,QAAA,EAAKvH,QAAQ,GAAG,QAAQ,GAAG;MAAO;QAAAwH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxChJ,OAAA;QACEwI,IAAI,EAAC,MAAM;QACXmB,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAErI,QAAS;QAChBsI,QAAQ,EAAGvF,CAAC,IAAK9C,WAAW,CAAC8C,CAAC,CAACI,MAAM,CAACkF,KAAK,CAAE;QAC7CjB,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFhJ,OAAA;QACEwI,IAAI,EAAC,UAAU;QACfmB,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEnI,QAAS;QAChBoI,QAAQ,EAAGvF,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACI,MAAM,CAACkF,KAAK,CAAE;QAC7CjB,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,EAED3H,QAAQ,gBACPrB,OAAA;QAAQ2I,SAAS,EAAC,UAAU;QAACM,OAAO,EAAE3F,YAAa;QAAAsF,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEnEhJ,OAAA;QAAQ2I,SAAS,EAAC,UAAU;QAACM,OAAO,EAAE/E,WAAY;QAAA0E,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACjE,eAEDhJ,OAAA;QACE2I,SAAS,EAAC,YAAY;QACtBM,OAAO,EAAEA,CAAA,KAAM;UACb3H,WAAW,CAAC,CAACD,QAAQ,CAAC;UACtBO,UAAU,CAAC,EAAE,CAAC;QAChB,CAAE;QAAAgH,QAAA,EAEDvH,QAAQ,GAAG,gCAAgC,GAAG;MAAoB;QAAAwH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,EAERrH,OAAO,iBAAI3B,OAAA;QAAG2I,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEjH;MAAO;QAAAkH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEV;EAEA,oBACEhJ,OAAA;IAAK2I,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB5I,OAAA;MAAA4I,QAAA,eACE5I,OAAA;QAAI2I,SAAS,EAAC,cAAc;QAAAC,QAAA,EACzBtI,OAAO,GAAG,0BAA0B,GAAG;MAA6B;QAAAuI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEThJ,OAAA;MAAS2I,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBACjC5I,OAAA;QAAO8J,OAAO,EAAC,aAAa;QAACnB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAEtD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRhJ,OAAA;QACEwI,IAAI,EAAC,MAAM;QACXuB,EAAE,EAAC,aAAa;QAChBC,MAAM,EAAC,iCAAiC;QACxCC,QAAQ;QACRJ,QAAQ,EAAExF;MAAiB;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFhJ,OAAA;QAAK2I,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5I,OAAA;UAAQ2I,SAAS,EAAC,YAAY;UAACM,OAAO,EAAErE,eAAgB;UAAAgE,QAAA,EAAC;QAEzD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACR7H,aAAa,iBACZnB,OAAA;UAAQ2I,SAAS,EAAC,cAAc;UAACM,OAAO,EAAE3C,mBAAoB;UAAAsC,QAAA,EAAC;QAE/D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAETrI,KAAK,CAACgE,MAAM,GAAG,CAAC,iBACf3E,OAAA;MAAS2I,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC/B5I,OAAA;QAAI2I,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDhJ,OAAA;QAAI2I,SAAS,EAAC,WAAW;QAAAC,QAAA,EACtBjI,KAAK,CAACuH,GAAG,CAAC,CAAC5C,IAAI,EAAEiE,CAAC,kBACjBvJ,OAAA;UAAA4I,QAAA,GAAY,eAAG,EAACtD,IAAI,CAACQ,IAAI;QAAA,GAAhByD,CAAC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACV,EAEA/H,OAAO,iBAAIjB,OAAA;MAAG2I,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEnEnI,WAAW,CAAC8D,MAAM,GAAG,CAAC,iBACrB3E,OAAA,CAAAE,SAAA;MAAA0I,QAAA,gBAEE5I,OAAA;QAAS2I,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAClC5I,OAAA;UAAI2I,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACzDnI,WAAW,CAACqH,GAAG,CAAC,CAACtC,IAAI,EAAEsE,SAAS,kBAC/BlK,OAAA;UAAqB2I,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9C5I,OAAA;YAAI2I,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEhD,IAAI,CAAC,WAAW;UAAC;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnDhJ,OAAA;YAAO2I,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC/B5I,OAAA;cAAA4I,QAAA,eACE5I,OAAA;gBAAA4I,QAAA,gBACE5I,OAAA;kBAAA4I,QAAA,EAAI;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACdhJ,OAAA;kBAAA4I,QAAA,EAAI;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACRhJ,OAAA;cAAA4I,QAAA,EACGuB,MAAM,CAAC5E,OAAO,CAACK,IAAI,CAAC,CAACsC,GAAG,CAAC,CAAC,CAACkC,GAAG,EAAER,KAAK,CAAC,EAAEL,CAAC,kBACxCvJ,OAAA;gBAAA4I,QAAA,gBACE5I,OAAA;kBAAI2I,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAEwB;gBAAG;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACrChJ,OAAA;kBAAI2I,SAAS,EAAC,YAAY;kBAAAC,QAAA,EACvB,CAACwB,GAAG,KAAK,mBAAmB,IAAIA,GAAG,KAAK,qBAAqB,KAC9D,OAAOR,KAAK,KAAK,QAAQ,IACzBA,KAAK,CAAC9G,QAAQ,CAAC,cAAc,CAAC,gBAC5B9C,OAAA;oBACEqK,GAAG,EAAE,GAAGxI,QAAQ,GAAG+H,KAAK,EAAG;oBAC3BU,GAAG,EAAEF,GAAI;oBACTzB,SAAS,EAAC;kBAAe;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1B,CAAC,GAEFnB,MAAM,CAAC+B,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE;gBACnB;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA,GAdEO,CAAC;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAeN,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GA7BAkB,SAAS;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8Bd,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAGVhJ,OAAA;QAAS2I,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAClC5I,OAAA;UAAI2I,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjErI,KAAK,CAACuH,GAAG,CAAC,CAAC5C,IAAI,EAAED,GAAG,KAAK;UACxB,MAAMkF,KAAK,GAAGxJ,WAAW,CAACsE,GAAG,CAAC,IAAI;YAAEa,OAAO,EAAE,EAAE;YAAEC,IAAI,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAG,CAAC;UACzE,oBACEpG,OAAA,CAACsH,SAAS;YAERC,KAAK,EAAEjC,IAAI,CAACQ,IAAK;YACjBI,OAAO,EAAEqE,KAAK,CAACrE,OAAO,IAAI,EAAG;YAC7BC,IAAI,EAAEoE,KAAK,CAACpE,IAAI,IAAI;UAAG,GAHlB,QAAQd,GAAG,EAAE;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAInB,CAAC;QAEN,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA,eACV,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzI,GAAA,CAzaIJ,SAAS;EAAA,QACIL,WAAW;AAAA;AAAA0K,EAAA,GADxBrK,SAAS;AA2af,eAAeA,SAAS;AAAC,IAAAqK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}