{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\n// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small UI helpers\n   --------------------- */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderMetaValue({\n  value\n}) {\n  if (typeof value === \"string\" && value.startsWith(\"/signatures/\")) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: value,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: value,\n        alt: \"signature\",\n        className: \"signature-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n  if (Array.isArray(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value.join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  if (typeof value === \"object\" && value !== null) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        whiteSpace: \"pre-wrap\",\n        margin: 0\n      },\n      children: JSON.stringify(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: String(value !== null && value !== void 0 ? value : \"\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n_c = RenderMetaValue;\nfunction MetadataVertical({\n  meta,\n  combinedCounts = {}\n}) {\n  if (!meta || Object.keys(meta).length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty\",\n    children: \"No metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 55\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"metadata-vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Object.keys(meta).map(k => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"meta-key\",\n          children: k\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"meta-val\",\n          children: (k === \"Procedure / Billing (All Tables)\" || k === \"Procedure / Billing\") && combinedCounts.procsTotal !== undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [combinedCounts.procsTotal, \" row(s) \\u2014 shown in tables below\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this) : (k === \"Diagnosis (All Tables)\" || k === \"Diagnosis\") && combinedCounts.diagsTotal !== undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [combinedCounts.diagsTotal, \" row(s) \\u2014 shown in tables below\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(RenderMetaValue, {\n            value: meta[k]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, k, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   Defensive normalization helpers\n   --------------------- */\n\n// Ensure rows is always an array of row entries (each entry may be an array or object)\n_c2 = MetadataVertical;\nfunction normalizeRows(rows) {\n  if (!rows) return [];\n  if (Array.isArray(rows)) return rows;\n  if (typeof rows === \"object\") {\n    const keys = Object.keys(rows);\n    const numericLike = keys.every(k => /^\\d+$/.test(k));\n    if (numericLike) {\n      return keys.sort((a, b) => Number(a) - Number(b)).map(k => rows[k]).filter(x => x !== undefined && x !== null);\n    }\n    // flatten values (if section -> rows object passed mistakenly)\n    const vals = Object.values(rows).flatMap(v => Array.isArray(v) ? v : [v]);\n    return vals.filter(x => x !== undefined && x !== null);\n  }\n  return [rows];\n}\nfunction normalizeTables(tables) {\n  if (!tables) return {};\n  if (Array.isArray(tables)) {\n    return {\n      Procedures: tables\n    };\n  }\n  if (typeof tables === \"object\") {\n    const out = {};\n    Object.entries(tables).forEach(([sec, rows]) => {\n      out[sec || \"\"] = normalizeRows(rows);\n    });\n    return out;\n  }\n  return {};\n}\n\n/* small UI cleaning: try to normalize fee strings like \"2 00.00\" -> \"200.00\" or \"00.00\" -> \"0.00\" */\nfunction _cleanFeeString(s) {\n  if (s === undefined || s === null) return \"\";\n  let raw = String(s).trim();\n  if (!raw) return \"\";\n  raw = raw.replace(/\\s+/g, \" \"); // collapse whitespace\n  raw = raw.replace(/^[\\|\\[\\(]+/, \"\");\n  // Merge stray single-digit group into currency: \"2 00.00\" -> \"200.00\"\n  raw = raw.replace(/(\\d)\\s+(\\d{2}\\.\\d{2})$/, \"$1$2\");\n  // If somebody OCRed \"992.43\" but it's a code, we will handle code heuristics separately.\n  // Normalize sequences like \"00\" that mean zero\n  raw = raw.replace(/^00+(\\.\\d{2})?$/, \"0.00\");\n  // If digits only and length>2, assume last two are cents\n  if (/^\\d+$/.test(raw) && raw.length > 2) {\n    raw = raw.slice(0, raw.length - 2) + \".\" + raw.slice(-2);\n  }\n  // Ensure decimals have 2 digits\n  if (/^\\d+(\\.\\d+)?$/.test(raw) && !/\\.\\d{2}$/.test(raw)) {\n    const parts = raw.split(\".\");\n    if (parts.length === 1) raw = raw + \".00\";else if (parts[1].length === 1) raw = raw + \"0\";\n  }\n  return raw;\n}\n\n/* Improved normalization for procedure row reconstruction\n   - handles array or object shapes\n   - tries to detect many common OCR split patterns and repair them\n*/\nfunction normalizeProcRow(r) {\n  if (!r) return [\"\", \"\", \"\"];\n  // If r is an object with numeric indices like {0: '0438', 1: '', 2: '200.00'}\n  if (typeof r === \"object\" && !Array.isArray(r)) {\n    var _ref, _r$Code, _ref2, _r$Description, _ref3, _r$Fee, _cand$, _cand$2, _cand$3;\n    // Flatten known keys to array style precedence\n    const arrLike = [r[0], r.Code, r.code, r.code_value, r[1], r.Description, r.description, r.Desc, r[2], r.Fee, r.fee];\n    // Build fallback array by pulling any scalar values\n    const scalarValues = Object.values(r).filter(v => typeof v !== \"object\");\n    // prefer arrLike if it contains values\n    const cand = arrLike.some(v => v !== undefined && v !== null && String(v).trim() !== \"\") ? [(_ref = (_r$Code = r.Code) !== null && _r$Code !== void 0 ? _r$Code : r.code) !== null && _ref !== void 0 ? _ref : r[0], (_ref2 = (_r$Description = r.Description) !== null && _r$Description !== void 0 ? _r$Description : r.description) !== null && _ref2 !== void 0 ? _ref2 : r[1], (_ref3 = (_r$Fee = r.Fee) !== null && _r$Fee !== void 0 ? _r$Fee : r.fee) !== null && _ref3 !== void 0 ? _ref3 : r[2]] : scalarValues.slice(0, 3);\n    // normalize below using cand\n    const codeRaw = String((_cand$ = cand[0]) !== null && _cand$ !== void 0 ? _cand$ : \"\").trim();\n    const descRaw = String((_cand$2 = cand[1]) !== null && _cand$2 !== void 0 ? _cand$2 : \"\").trim();\n    const feeRaw = String((_cand$3 = cand[2]) !== null && _cand$3 !== void 0 ? _cand$3 : \"\").trim();\n    return _repairRowPieces(codeRaw, descRaw, feeRaw);\n  }\n\n  // If array form\n  if (Array.isArray(r)) {\n    var _r$, _r$2, _r$3;\n    const codeRaw = String((_r$ = r[0]) !== null && _r$ !== void 0 ? _r$ : \"\").trim();\n    const descRaw = String((_r$2 = r[1]) !== null && _r$2 !== void 0 ? _r$2 : \"\").trim();\n    const feeRaw = String((_r$3 = r[2]) !== null && _r$3 !== void 0 ? _r$3 : \"\").trim();\n    return _repairRowPieces(codeRaw, descRaw, feeRaw);\n  }\n\n  // other scalar -> just string into description\n  return [\"\", String(r).trim(), \"\"];\n}\n\n/* Heuristics to repair pieces:\n   - if fee looks like a dotted code (e.g. '992.43') -> convert to code '99243'\n   - if code and desc are tiny numeric tokens like '75' and '00' and fee looks like dotted code -> move dotted code -> code\n   - if desc contains stray slash or letter tokens (e.g. 'G 04.44') try to join letter with neighbor\n   - fallback: keep best guess\n*/\nfunction _repairRowPieces(codeRaw, descRaw, feeRaw) {\n  let code = (codeRaw || \"\").trim();\n  let desc = (descRaw || \"\").trim();\n  let fee = (feeRaw || \"\").trim();\n\n  // helper tests\n  const looksLikeCurrency = s => /^\\d{1,3}(?:\\.\\d{2})?$/.test(s.replace(/\\s+/g, \"\"));\n  const looksLikeDottedCode = s => /^\\d{2,3}\\.\\d{2}$/.test(s); // e.g. \"992.43\"\n  const looksLikeWholeDigits = s => /^\\d+$/.test(s);\n  const looksLikeCodeLetters = s => /^[A-Z]\\s*\\d/.test(s) || /^[A-Z][0-9]/i.test(s);\n\n  // If fee is dotted-code and code is tiny/empty -> treat fee as code (remove dot)\n  if (looksLikeDottedCode(fee) && (code.length <= 3 || code === \"\")) {\n    const mergedCode = fee.replace(\".\", \"\");\n    // if mergedCode is 3-6 digits assume it's a code\n    if (/^\\d{3,6}$/.test(mergedCode)) {\n      code = mergedCode;\n      fee = \"\"; // unknown actual fee\n      return [code, desc, _cleanFeeString(fee)];\n    }\n  }\n\n  // If code and desc are both tiny numeric fragments (like '75' '00') and fee is dotted-code -> combine code+desc? (try code from fee)\n  if (looksLikeWholeDigits(code) && looksLikeWholeDigits(desc) && desc.length <= 3 && looksLikeDottedCode(fee)) {\n    const mergedCode = fee.replace(\".\", \"\");\n    if (/^\\d{3,6}$/.test(mergedCode)) {\n      code = mergedCode;\n      fee = \"\"; // we lost fee info\n      return [code, \"\", _cleanFeeString(fee)];\n    }\n  }\n\n  // If desc contains stray letter + currency e.g. \"G 04.44\" -> merge letter into desc and use fee as 4.44\n  const gMatch = desc.match(/^([A-Za-z])[\\s\\-\\/]*([0-9\\.]+)$/);\n  if (gMatch) {\n    desc = gMatch[1];\n    fee = gMatch[2] || fee;\n    return [code, desc, _cleanFeeString(fee)];\n  }\n\n  // If desc seems to be a small integer '00' and code is 2-3 digits and fee is currency-like -> keep code, normalize fee from feeRaw\n  if (desc === \"00\" && looksLikeWholeDigits(code) && looksLikeCurrency(fee)) {\n    return [code, \"\", _cleanFeeString(fee)];\n  }\n\n  // If code looks like '00' and desc looks like a longer number and fee looks like currency, maybe code is missing; swap\n  if (code === \"00\" && desc && looksLikeCurrency(fee) && looksLikeWholeDigits(desc) && desc.length >= 3) {\n    code = desc;\n    desc = \"\";\n    return [code, desc, _cleanFeeString(fee)];\n  }\n\n  // If fee looks numeric but without dot and long, assume last two digits are cents\n  if (/^\\d{3,}$/.test(fee) && !fee.includes(\".\")) {\n    fee = fee.slice(0, fee.length - 2) + \".\" + fee.slice(-2);\n    return [code, desc, _cleanFeeString(fee)];\n  }\n\n  // Final fallback: clean fee normally and return\n  return [code, desc, _cleanFeeString(fee)];\n}\n\n/* ---------------------\n   Table components\n   --------------------- */\n\nfunction ProcedureTables({\n  tables\n}) {\n  const normalizedTables = normalizeTables(tables);\n  if (!normalizedTables || Object.keys(normalizedTables).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No procedure / billing tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"procedures-root\",\n    children: Object.entries(normalizedTables).map(([section, rows]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"table-section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"excel-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows && rows.length > 0 ? normalizeRows(rows).map((r, i) => {\n            const [code, desc, fee] = normalizeProcRow(r);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: fee\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 3,\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"No rows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ProcedureTables;\nfunction DiagnosisTables({\n  tables,\n  highlightCodes = new Set()\n}) {\n  const normalizedTables = normalizeTables(tables);\n  if (!normalizedTables || Object.keys(normalizedTables).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No diagnosis tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagnosis-root\",\n    children: Object.entries(normalizedTables).map(([section, rows]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"table-section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"excel-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Diagnosis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: normalizeRows(rows).length > 0 ? normalizeRows(rows).map((r, i) => {\n            var _ref4, _ref5, _r$Type, _ref6, _ref7, _r$Code2, _ref8, _ref9, _ref0, _ref1, _r$Diagnosis;\n            const type = Array.isArray(r) ? r[0] : (_ref4 = (_ref5 = (_r$Type = r.Type) !== null && _r$Type !== void 0 ? _r$Type : r.type) !== null && _ref5 !== void 0 ? _ref5 : r[0]) !== null && _ref4 !== void 0 ? _ref4 : \"ICD-10\";\n            const code = Array.isArray(r) ? r[1] : (_ref6 = (_ref7 = (_r$Code2 = r.Code) !== null && _r$Code2 !== void 0 ? _r$Code2 : r.code) !== null && _ref7 !== void 0 ? _ref7 : r[1]) !== null && _ref6 !== void 0 ? _ref6 : \"\";\n            const desc = Array.isArray(r) ? r[2] : (_ref8 = (_ref9 = (_ref0 = (_ref1 = (_r$Diagnosis = r.Diagnosis) !== null && _r$Diagnosis !== void 0 ? _r$Diagnosis : r.diagnosis) !== null && _ref1 !== void 0 ? _ref1 : r.Description) !== null && _ref0 !== void 0 ? _ref0 : r.description) !== null && _ref9 !== void 0 ? _ref9 : r[2]) !== null && _ref8 !== void 0 ? _ref8 : \"\";\n            const isMatch = highlightCodes.has(String(code).trim());\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: isMatch ? \"highlight-row\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 3,\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"No rows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   Patient block - shows metadata + ALL tables (combined)\n   --------------------- */\n_c4 = DiagnosisTables;\nfunction PatientBlock({\n  patient,\n  procedureTables = {},\n  diagnosisTables = {}\n}) {\n  var _ref10, _patient$PatientName;\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach(v => {\n    try {\n      const str = String(v || \"\");\n      const m = str.match(icdRegex);\n      if (m) m.forEach(code => highlightCodes.add(code.trim()));\n    } catch (e) {}\n  });\n  const patientProcs = Array.isArray(patient[\"Procedure / Billing (All Tables)\"]) ? patient[\"Procedure / Billing (All Tables)\"] : Array.isArray(patient[\"Procedure / Billing\"]) ? patient[\"Procedure / Billing\"] : normalizeRows(patient[\"Procedure / Billing (All Tables)\"] || patient[\"Procedure / Billing\"]);\n  const patientDiags = Array.isArray(patient[\"Diagnosis (All Tables)\"]) ? patient[\"Diagnosis (All Tables)\"] : Array.isArray(patient[\"Diagnosis\"]) ? patient[\"Diagnosis\"] : normalizeRows(patient[\"Diagnosis (All Tables)\"] || patient[\"Diagnosis\"]);\n  const normalizedProcTables = normalizeTables(procedureTables);\n  const normalizedDiagTables = normalizeTables(diagnosisTables);\n  const totalProcsFromPatient = Array.isArray(patientProcs) ? patientProcs.length : 0;\n  const totalDiagsFromPatient = Array.isArray(patientDiags) ? patientDiags.length : 0;\n  const totalProcsFromGlobal = Object.values(normalizedProcTables || {}).reduce((s, a) => s + (a && a.length || 0), 0);\n  const totalDiagsFromGlobal = Object.values(normalizedDiagTables || {}).reduce((s, a) => s + (a && a.length || 0), 0);\n  const procsTotal = totalProcsFromPatient + totalProcsFromGlobal;\n  const diagsTotal = totalDiagsFromPatient + totalDiagsFromGlobal;\n  const combinedProcedureTables = {};\n  if (patientProcs && patientProcs.length) combinedProcedureTables[\"Patient Procedures\"] = patientProcs;\n  Object.entries(normalizedProcTables || {}).forEach(([sec, rows]) => {\n    combinedProcedureTables[sec] = (combinedProcedureTables[sec] || []).concat(rows || []);\n  });\n  const combinedDiagnosisTables = {};\n  if (patientDiags && patientDiags.length) combinedDiagnosisTables[\"Patient Diagnosis\"] = patientDiags;\n  Object.entries(normalizedDiagTables || {}).forEach(([sec, rows]) => {\n    combinedDiagnosisTables[sec] = (combinedDiagnosisTables[sec] || []).concat(rows || []);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Patient: \", (_ref10 = (_patient$PatientName = patient[\"Patient Name\"]) !== null && _patient$PatientName !== void 0 ? _patient$PatientName : patient[\"Patient\"]) !== null && _ref10 !== void 0 ? _ref10 : \"Unknown\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient-sub\",\n        children: \"Preview of patient fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-meta-grid\",\n      children: /*#__PURE__*/_jsxDEV(MetadataVertical, {\n        meta: patient,\n        combinedCounts: {\n          procsTotal,\n          diagsTotal\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-tables\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        children: \"Procedure / Billing (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProcedureTables, {\n        tables: combinedProcedureTables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        style: {\n          marginTop: 12\n        },\n        children: \"Diagnosis (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiagnosisTables, {\n        tables: combinedDiagnosisTables,\n        highlightCodes: highlightCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), highlightCodes.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matched-note\",\n        children: [\"Highlighted diagnosis codes found in patient fields: \", Array.from(highlightCodes).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   ResultBlock + main component\n   --------------------- */\n_c5 = PatientBlock;\nfunction ResultBlock({\n  item\n}) {\n  const patients = Array.isArray(item.patients) ? item.patients : item.patients_list || [];\n  const procedureTables = item.procedure_tables || item.procedureTables || item.procedureTables || item.procedure_tables || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosisTables || item.diagnosis_tables || {};\n  const procTablesMutable = {\n    ...normalizeTables(procedureTables)\n  };\n  const diagTablesMutable = {\n    ...normalizeTables(diagnosisTables)\n  };\n  if (Object.keys(procTablesMutable).length === 0 && Array.isArray(item.medical_billing_codes) && item.medical_billing_codes.length) {\n    procTablesMutable[\"Procedures\"] = item.medical_billing_codes.map(r => {\n      var _ref11, _r$Code3, _ref12, _r$Description2, _ref13, _r$Fee2;\n      return Array.isArray(r) ? r : [(_ref11 = (_r$Code3 = r.Code) !== null && _r$Code3 !== void 0 ? _r$Code3 : r.code) !== null && _ref11 !== void 0 ? _ref11 : \"\", (_ref12 = (_r$Description2 = r.Description) !== null && _r$Description2 !== void 0 ? _r$Description2 : r.description) !== null && _ref12 !== void 0 ? _ref12 : \"\", (_ref13 = (_r$Fee2 = r.Fee) !== null && _r$Fee2 !== void 0 ? _r$Fee2 : r.fee) !== null && _ref13 !== void 0 ? _ref13 : \"\"];\n    });\n  }\n  if (Object.keys(diagTablesMutable).length === 0 && Array.isArray(item.diagnosis_codes) && item.diagnosis_codes.length) {\n    diagTablesMutable[\"Diagnosis\"] = item.diagnosis_codes.map(d => {\n      var _ref14, _d$Type, _ref15, _d$Code, _ref16, _ref17, _ref18, _d$Diagnosis;\n      return Array.isArray(d) ? d : [(_ref14 = (_d$Type = d.Type) !== null && _d$Type !== void 0 ? _d$Type : d.type) !== null && _ref14 !== void 0 ? _ref14 : \"ICD-10\", (_ref15 = (_d$Code = d.Code) !== null && _d$Code !== void 0 ? _d$Code : d.code) !== null && _ref15 !== void 0 ? _ref15 : \"\", (_ref16 = (_ref17 = (_ref18 = (_d$Diagnosis = d.Diagnosis) !== null && _d$Diagnosis !== void 0 ? _d$Diagnosis : d.diagnosis) !== null && _ref18 !== void 0 ? _ref18 : d.Description) !== null && _ref17 !== void 0 ? _ref17 : d.description) !== null && _ref16 !== void 0 ? _ref16 : \"\"];\n    });\n  }\n  const totalProcRows = Object.values(procTablesMutable).reduce((s, a) => s + (a && a.length || 0), 0);\n  const totalDiagRows = Object.values(diagTablesMutable).reduce((s, a) => s + (a && a.length || 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"file-title\",\n      children: item.file_name || item.filename || \"Uploaded file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [patients.length, \" patient(s) \\u2022 \", totalProcRows, \" procedure rows \\u2022 \", totalDiagRows, \" diagnosis rows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"patients-list\",\n      children: patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: \"No patients found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this) : patients.map((p, idx) => /*#__PURE__*/_jsxDEV(PatientBlock, {\n        patient: p,\n        procedureTables: procTablesMutable,\n        diagnosisTables: diagTablesMutable\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Raw response (debug)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          maxHeight: 260,\n          overflow: \"auto\",\n          background: \"#0b1220\",\n          color: \"#cbd5e1\",\n          padding: 8\n        },\n        children: JSON.stringify(item, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 5\n  }, this);\n}\n_c6 = ResultBlock;\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert(\"⚠️ Session expired or access denied. Please log in again.\");\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) {\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n    // eslint-disable-next-line\n  }, [auth, isAdmin, navigate]);\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", {\n        username,\n        password\n      });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      const {\n        token,\n        username: un,\n        role\n      } = loginRes.data;\n      setAuth({\n        token,\n        username: un,\n        role\n      });\n      localStorage.setItem(\"auth\", JSON.stringify({\n        token,\n        username: un,\n        role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(\"Signup failed: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      if (res.data.token) {\n        const {\n          token,\n          username: un,\n          role\n        } = res.data;\n        setAuth({\n          token,\n          username: un,\n          role\n        });\n        localStorage.setItem(\"auth\", JSON.stringify({\n          token,\n          username: un,\n          role\n        }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage(\"Login failed: \" + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {}\n      };\n    }\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {}\n      };\n    }\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes) ? resData.medical_billing_codes.map(r => {\n          var _ref19, _r$Code4, _ref20, _r$Description3, _ref21, _r$Fee3;\n          return Array.isArray(r) ? r : [(_ref19 = (_r$Code4 = r.Code) !== null && _r$Code4 !== void 0 ? _r$Code4 : r.code) !== null && _ref19 !== void 0 ? _ref19 : \"\", (_ref20 = (_r$Description3 = r.Description) !== null && _r$Description3 !== void 0 ? _r$Description3 : r.description) !== null && _ref20 !== void 0 ? _ref20 : \"\", (_ref21 = (_r$Fee3 = r.Fee) !== null && _r$Fee3 !== void 0 ? _r$Fee3 : r.fee) !== null && _ref21 !== void 0 ? _ref21 : \"\"];\n        }) : []\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes) ? resData.diagnosis_codes.map(d => {\n          var _ref22, _d$Type2, _ref23, _d$Code2, _ref24, _ref25, _ref26, _d$Diagnosis2;\n          return Array.isArray(d) ? d : [(_ref22 = (_d$Type2 = d.Type) !== null && _d$Type2 !== void 0 ? _d$Type2 : d.type) !== null && _ref22 !== void 0 ? _ref22 : \"ICD-10\", (_ref23 = (_d$Code2 = d.Code) !== null && _d$Code2 !== void 0 ? _d$Code2 : d.code) !== null && _ref23 !== void 0 ? _ref23 : \"\", (_ref24 = (_ref25 = (_ref26 = (_d$Diagnosis2 = d.Diagnosis) !== null && _d$Diagnosis2 !== void 0 ? _d$Diagnosis2 : d.diagnosis) !== null && _ref26 !== void 0 ? _ref26 : d.Description) !== null && _ref25 !== void 0 ? _ref25 : d.description) !== null && _ref24 !== void 0 ? _ref24 : \"\"];\n        }) : []\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {}\n      };\n    }\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta\n    };\n  };\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isSignup ? \"Signup\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"glass-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"glass-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          onClick: handleSignup,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          style: {\n            marginTop: 8\n          },\n          onClick: () => {\n            setIsSignup(!isSignup);\n            setMessage(\"\");\n          },\n          children: isSignup ? \"Already have an account? Login\" : \"No account? Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        style: {\n          marginTop: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 61\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting tables...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 19\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Parsed Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 11\n      }, this), results.map((item, idx) => /*#__PURE__*/_jsxDEV(ResultBlock, {\n        item: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 623,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"rHWvzCgLol+q0ups8j2Fj9RAf2Q=\", false, function () {\n  return [useNavigate];\n});\n_c7 = OCRUpload;\nexport default OCRUpload;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"RenderMetaValue\");\n$RefreshReg$(_c2, \"MetadataVertical\");\n$RefreshReg$(_c3, \"ProcedureTables\");\n$RefreshReg$(_c4, \"DiagnosisTables\");\n$RefreshReg$(_c5, \"PatientBlock\");\n$RefreshReg$(_c6, \"ResultBlock\");\n$RefreshReg$(_c7, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","RenderMetaValue","value","startsWith","href","target","rel","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","join","style","whiteSpace","margin","JSON","stringify","String","_c","MetadataVertical","meta","combinedCounts","Object","keys","length","map","k","procsTotal","undefined","diagsTotal","_c2","normalizeRows","rows","numericLike","every","test","sort","a","b","Number","filter","x","vals","values","flatMap","v","normalizeTables","tables","Procedures","out","entries","forEach","sec","_cleanFeeString","s","raw","trim","replace","slice","parts","split","normalizeProcRow","r","_ref","_r$Code","_ref2","_r$Description","_ref3","_r$Fee","_cand$","_cand$2","_cand$3","arrLike","Code","code","code_value","Description","description","Desc","Fee","fee","scalarValues","cand","some","codeRaw","descRaw","feeRaw","_repairRowPieces","_r$","_r$2","_r$3","desc","looksLikeCurrency","looksLikeDottedCode","looksLikeWholeDigits","looksLikeCodeLetters","mergedCode","gMatch","match","includes","ProcedureTables","normalizedTables","section","i","colSpan","textAlign","_c3","DiagnosisTables","highlightCodes","Set","_ref4","_ref5","_r$Type","_ref6","_ref7","_r$Code2","_ref8","_ref9","_ref0","_ref1","_r$Diagnosis","type","Type","Diagnosis","diagnosis","isMatch","has","_c4","PatientBlock","patient","procedureTables","diagnosisTables","_ref10","_patient$PatientName","icdRegex","str","m","add","e","patientProcs","patientDiags","normalizedProcTables","normalizedDiagTables","totalProcsFromPatient","totalDiagsFromPatient","totalProcsFromGlobal","reduce","totalDiagsFromGlobal","combinedProcedureTables","concat","combinedDiagnosisTables","marginTop","size","from","_c5","ResultBlock","item","patients","patients_list","procedure_tables","diagnosis_tables","procTablesMutable","diagTablesMutable","medical_billing_codes","_ref11","_r$Code3","_ref12","_r$Description2","_ref13","_r$Fee2","diagnosis_codes","d","_ref14","_d$Type","_ref15","_d$Code","_ref16","_ref17","_ref18","_d$Diagnosis","totalProcRows","totalDiagRows","file_name","filename","p","idx","maxHeight","overflow","background","color","padding","_c6","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","results","setResults","loading","setLoading","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","status","localStorage","clear","alert","Promise","reject","handleSignup","res","post","data","loginRes","un","role","setItem","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","selected","buildItemFromResponse","resData","file","name","metadata","procedures","_ref19","_r$Code4","_ref20","_r$Description3","_ref21","_r$Fee3","diags","_ref22","_d$Type2","_ref23","_d$Code2","_ref24","_ref25","_ref26","_d$Diagnosis2","handleUploadAll","formData","FormData","append","push","console","placeholder","onChange","onClick","htmlFor","id","accept","multiple","disabled","_c7","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small UI helpers\n   --------------------- */\n\nfunction RenderMetaValue({ value }) {\n  if (typeof value === \"string\" && value.startsWith(\"/signatures/\")) {\n    return (\n      <a href={value} target=\"_blank\" rel=\"noreferrer\">\n        <img src={value} alt=\"signature\" className=\"signature-img\" />\n      </a>\n    );\n  }\n  if (Array.isArray(value)) {\n    return <div>{value.join(\", \")}</div>;\n  }\n  if (typeof value === \"object\" && value !== null) {\n    return <pre style={{ whiteSpace: \"pre-wrap\", margin: 0 }}>{JSON.stringify(value)}</pre>;\n  }\n  return <span>{String(value ?? \"\")}</span>;\n}\n\nfunction MetadataVertical({ meta, combinedCounts = {} }) {\n  if (!meta || Object.keys(meta).length === 0) return <div className=\"empty\">No metadata</div>;\n  return (\n    <table className=\"metadata-vertical\">\n      <tbody>\n        {Object.keys(meta).map((k) => (\n          <tr key={k}>\n            <th className=\"meta-key\">{k}</th>\n            <td className=\"meta-val\">\n              {(k === \"Procedure / Billing (All Tables)\" || k === \"Procedure / Billing\") && combinedCounts.procsTotal !== undefined ? (\n                <span>{combinedCounts.procsTotal} row(s) — shown in tables below</span>\n              ) : (k === \"Diagnosis (All Tables)\" || k === \"Diagnosis\") && combinedCounts.diagsTotal !== undefined ? (\n                <span>{combinedCounts.diagsTotal} row(s) — shown in tables below</span>\n              ) : (\n                <RenderMetaValue value={meta[k]} />\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\n/* ---------------------\n   Defensive normalization helpers\n   --------------------- */\n\n// Ensure rows is always an array of row entries (each entry may be an array or object)\nfunction normalizeRows(rows) {\n  if (!rows) return [];\n  if (Array.isArray(rows)) return rows;\n  if (typeof rows === \"object\") {\n    const keys = Object.keys(rows);\n    const numericLike = keys.every((k) => /^\\d+$/.test(k));\n    if (numericLike) {\n      return keys\n        .sort((a, b) => Number(a) - Number(b))\n        .map((k) => rows[k])\n        .filter((x) => x !== undefined && x !== null);\n    }\n    // flatten values (if section -> rows object passed mistakenly)\n    const vals = Object.values(rows).flatMap((v) => (Array.isArray(v) ? v : [v]));\n    return vals.filter((x) => x !== undefined && x !== null);\n  }\n  return [rows];\n}\n\nfunction normalizeTables(tables) {\n  if (!tables) return {};\n  if (Array.isArray(tables)) {\n    return { Procedures: tables };\n  }\n  if (typeof tables === \"object\") {\n    const out = {};\n    Object.entries(tables).forEach(([sec, rows]) => {\n      out[sec || \"\"] = normalizeRows(rows);\n    });\n    return out;\n  }\n  return {};\n}\n\n/* small UI cleaning: try to normalize fee strings like \"2 00.00\" -> \"200.00\" or \"00.00\" -> \"0.00\" */\nfunction _cleanFeeString(s) {\n  if (s === undefined || s === null) return \"\";\n  let raw = String(s).trim();\n  if (!raw) return \"\";\n  raw = raw.replace(/\\s+/g, \" \"); // collapse whitespace\n  raw = raw.replace(/^[\\|\\[\\(]+/, \"\");\n  // Merge stray single-digit group into currency: \"2 00.00\" -> \"200.00\"\n  raw = raw.replace(/(\\d)\\s+(\\d{2}\\.\\d{2})$/, \"$1$2\");\n  // If somebody OCRed \"992.43\" but it's a code, we will handle code heuristics separately.\n  // Normalize sequences like \"00\" that mean zero\n  raw = raw.replace(/^00+(\\.\\d{2})?$/, \"0.00\");\n  // If digits only and length>2, assume last two are cents\n  if (/^\\d+$/.test(raw) && raw.length > 2) {\n    raw = raw.slice(0, raw.length - 2) + \".\" + raw.slice(-2);\n  }\n  // Ensure decimals have 2 digits\n  if (/^\\d+(\\.\\d+)?$/.test(raw) && !/\\.\\d{2}$/.test(raw)) {\n    const parts = raw.split(\".\");\n    if (parts.length === 1) raw = raw + \".00\";\n    else if (parts[1].length === 1) raw = raw + \"0\";\n  }\n  return raw;\n}\n\n/* Improved normalization for procedure row reconstruction\n   - handles array or object shapes\n   - tries to detect many common OCR split patterns and repair them\n*/\nfunction normalizeProcRow(r) {\n  if (!r) return [\"\", \"\", \"\"];\n  // If r is an object with numeric indices like {0: '0438', 1: '', 2: '200.00'}\n  if (typeof r === \"object\" && !Array.isArray(r)) {\n    // Flatten known keys to array style precedence\n    const arrLike = [r[0], r.Code, r.code, r.code_value, r[1], r.Description, r.description, r.Desc, r[2], r.Fee, r.fee];\n    // Build fallback array by pulling any scalar values\n    const scalarValues = Object.values(r).filter((v) => typeof v !== \"object\");\n    // prefer arrLike if it contains values\n    const cand = arrLike.some((v) => v !== undefined && v !== null && String(v).trim() !== \"\")\n      ? [r.Code ?? r.code ?? r[0], r.Description ?? r.description ?? r[1], r.Fee ?? r.fee ?? r[2]]\n      : scalarValues.slice(0, 3);\n    // normalize below using cand\n    const codeRaw = String(cand[0] ?? \"\").trim();\n    const descRaw = String(cand[1] ?? \"\").trim();\n    const feeRaw = String(cand[2] ?? \"\").trim();\n    return _repairRowPieces(codeRaw, descRaw, feeRaw);\n  }\n\n  // If array form\n  if (Array.isArray(r)) {\n    const codeRaw = String(r[0] ?? \"\").trim();\n    const descRaw = String(r[1] ?? \"\").trim();\n    const feeRaw = String(r[2] ?? \"\").trim();\n    return _repairRowPieces(codeRaw, descRaw, feeRaw);\n  }\n\n  // other scalar -> just string into description\n  return [\"\", String(r).trim(), \"\"];\n}\n\n/* Heuristics to repair pieces:\n   - if fee looks like a dotted code (e.g. '992.43') -> convert to code '99243'\n   - if code and desc are tiny numeric tokens like '75' and '00' and fee looks like dotted code -> move dotted code -> code\n   - if desc contains stray slash or letter tokens (e.g. 'G 04.44') try to join letter with neighbor\n   - fallback: keep best guess\n*/\nfunction _repairRowPieces(codeRaw, descRaw, feeRaw) {\n  let code = (codeRaw || \"\").trim();\n  let desc = (descRaw || \"\").trim();\n  let fee = (feeRaw || \"\").trim();\n\n  // helper tests\n  const looksLikeCurrency = (s) => /^\\d{1,3}(?:\\.\\d{2})?$/.test(s.replace(/\\s+/g, \"\"));\n  const looksLikeDottedCode = (s) => /^\\d{2,3}\\.\\d{2}$/.test(s); // e.g. \"992.43\"\n  const looksLikeWholeDigits = (s) => /^\\d+$/.test(s);\n  const looksLikeCodeLetters = (s) => /^[A-Z]\\s*\\d/.test(s) || /^[A-Z][0-9]/i.test(s);\n\n  // If fee is dotted-code and code is tiny/empty -> treat fee as code (remove dot)\n  if (looksLikeDottedCode(fee) && (code.length <= 3 || code === \"\")) {\n    const mergedCode = fee.replace(\".\", \"\");\n    // if mergedCode is 3-6 digits assume it's a code\n    if (/^\\d{3,6}$/.test(mergedCode)) {\n      code = mergedCode;\n      fee = \"\"; // unknown actual fee\n      return [code, desc, _cleanFeeString(fee)];\n    }\n  }\n\n  // If code and desc are both tiny numeric fragments (like '75' '00') and fee is dotted-code -> combine code+desc? (try code from fee)\n  if (looksLikeWholeDigits(code) && looksLikeWholeDigits(desc) && desc.length <= 3 && looksLikeDottedCode(fee)) {\n    const mergedCode = fee.replace(\".\", \"\");\n    if (/^\\d{3,6}$/.test(mergedCode)) {\n      code = mergedCode;\n      fee = \"\"; // we lost fee info\n      return [code, \"\", _cleanFeeString(fee)];\n    }\n  }\n\n  // If desc contains stray letter + currency e.g. \"G 04.44\" -> merge letter into desc and use fee as 4.44\n  const gMatch = desc.match(/^([A-Za-z])[\\s\\-\\/]*([0-9\\.]+)$/);\n  if (gMatch) {\n    desc = gMatch[1];\n    fee = gMatch[2] || fee;\n    return [code, desc, _cleanFeeString(fee)];\n  }\n\n  // If desc seems to be a small integer '00' and code is 2-3 digits and fee is currency-like -> keep code, normalize fee from feeRaw\n  if (desc === \"00\" && looksLikeWholeDigits(code) && looksLikeCurrency(fee)) {\n    return [code, \"\", _cleanFeeString(fee)];\n  }\n\n  // If code looks like '00' and desc looks like a longer number and fee looks like currency, maybe code is missing; swap\n  if (code === \"00\" && desc && looksLikeCurrency(fee) && looksLikeWholeDigits(desc) && desc.length >= 3) {\n    code = desc;\n    desc = \"\";\n    return [code, desc, _cleanFeeString(fee)];\n  }\n\n  // If fee looks numeric but without dot and long, assume last two digits are cents\n  if (/^\\d{3,}$/.test(fee) && !fee.includes(\".\")) {\n    fee = fee.slice(0, fee.length - 2) + \".\" + fee.slice(-2);\n    return [code, desc, _cleanFeeString(fee)];\n  }\n\n  // Final fallback: clean fee normally and return\n  return [code, desc, _cleanFeeString(fee)];\n}\n\n/* ---------------------\n   Table components\n   --------------------- */\n\nfunction ProcedureTables({ tables }) {\n  const normalizedTables = normalizeTables(tables);\n  if (!normalizedTables || Object.keys(normalizedTables).length === 0) {\n    return <div className=\"empty\">No procedure / billing tables found.</div>;\n  }\n  return (\n    <div className=\"procedures-root\">\n      {Object.entries(normalizedTables).map(([section, rows]) => (\n        <div className=\"table-block\" key={section}>\n          <h4 className=\"table-section-title\">{section}</h4>\n          <table className=\"excel-table\">\n            <thead>\n              <tr>\n                <th>Code</th>\n                <th>Description</th>\n                <th>Fee</th>\n              </tr>\n            </thead>\n            <tbody>\n              {rows && rows.length > 0 ? (\n                normalizeRows(rows).map((r, i) => {\n                  const [code, desc, fee] = normalizeProcRow(r);\n                  return (\n                    <tr key={i}>\n                      <td>{code}</td>\n                      <td>{desc}</td>\n                      <td>{fee}</td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td colSpan={3} style={{ textAlign: \"center\" }}>\n                    No rows\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction DiagnosisTables({ tables, highlightCodes = new Set() }) {\n  const normalizedTables = normalizeTables(tables);\n  if (!normalizedTables || Object.keys(normalizedTables).length === 0) {\n    return <div className=\"empty\">No diagnosis tables found.</div>;\n  }\n  return (\n    <div className=\"diagnosis-root\">\n      {Object.entries(normalizedTables).map(([section, rows]) => (\n        <div className=\"table-block\" key={section}>\n          <h4 className=\"table-section-title\">{section}</h4>\n          <table className=\"excel-table\">\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Code</th>\n                <th>Diagnosis</th>\n              </tr>\n            </thead>\n            <tbody>\n              {normalizeRows(rows).length > 0 ? (\n                normalizeRows(rows).map((r, i) => {\n                  const type = Array.isArray(r) ? r[0] : r.Type ?? r.type ?? r[0] ?? \"ICD-10\";\n                  const code = Array.isArray(r) ? r[1] : r.Code ?? r.code ?? r[1] ?? \"\";\n                  const desc = Array.isArray(r) ? r[2] : r.Diagnosis ?? r.diagnosis ?? r.Description ?? r.description ?? r[2] ?? \"\";\n                  const isMatch = highlightCodes.has(String(code).trim());\n                  return (\n                    <tr key={i} className={isMatch ? \"highlight-row\" : \"\"}>\n                      <td>{type}</td>\n                      <td>{code}</td>\n                      <td>{desc}</td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td colSpan={3} style={{ textAlign: \"center\" }}>\n                    No rows\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n/* ---------------------\n   Patient block - shows metadata + ALL tables (combined)\n   --------------------- */\n\nfunction PatientBlock({ patient, procedureTables = {}, diagnosisTables = {} }) {\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach((v) => {\n    try {\n      const str = String(v || \"\");\n      const m = str.match(icdRegex);\n      if (m) m.forEach((code) => highlightCodes.add(code.trim()));\n    } catch (e) {}\n  });\n\n  const patientProcs = Array.isArray(patient[\"Procedure / Billing (All Tables)\"])\n    ? patient[\"Procedure / Billing (All Tables)\"]\n    : Array.isArray(patient[\"Procedure / Billing\"])\n    ? patient[\"Procedure / Billing\"]\n    : normalizeRows(patient[\"Procedure / Billing (All Tables)\"] || patient[\"Procedure / Billing\"]);\n\n  const patientDiags = Array.isArray(patient[\"Diagnosis (All Tables)\"])\n    ? patient[\"Diagnosis (All Tables)\"]\n    : Array.isArray(patient[\"Diagnosis\"])\n    ? patient[\"Diagnosis\"]\n    : normalizeRows(patient[\"Diagnosis (All Tables)\"] || patient[\"Diagnosis\"]);\n\n  const normalizedProcTables = normalizeTables(procedureTables);\n  const normalizedDiagTables = normalizeTables(diagnosisTables);\n\n  const totalProcsFromPatient = (Array.isArray(patientProcs) ? patientProcs.length : 0);\n  const totalDiagsFromPatient = (Array.isArray(patientDiags) ? patientDiags.length : 0);\n\n  const totalProcsFromGlobal = Object.values(normalizedProcTables || {}).reduce((s, a) => s + ((a && a.length) || 0), 0);\n  const totalDiagsFromGlobal = Object.values(normalizedDiagTables || {}).reduce((s, a) => s + ((a && a.length) || 0), 0);\n\n  const procsTotal = totalProcsFromPatient + totalProcsFromGlobal;\n  const diagsTotal = totalDiagsFromPatient + totalDiagsFromGlobal;\n\n  const combinedProcedureTables = {};\n  if (patientProcs && patientProcs.length) combinedProcedureTables[\"Patient Procedures\"] = patientProcs;\n  Object.entries(normalizedProcTables || {}).forEach(([sec, rows]) => {\n    combinedProcedureTables[sec] = (combinedProcedureTables[sec] || []).concat(rows || []);\n  });\n\n  const combinedDiagnosisTables = {};\n  if (patientDiags && patientDiags.length) combinedDiagnosisTables[\"Patient Diagnosis\"] = patientDiags;\n  Object.entries(normalizedDiagTables || {}).forEach(([sec, rows]) => {\n    combinedDiagnosisTables[sec] = (combinedDiagnosisTables[sec] || []).concat(rows || []);\n  });\n\n  return (\n    <div className=\"patient-block\">\n      <div className=\"patient-header\">\n        <h4>Patient: {patient[\"Patient Name\"] ?? patient[\"Patient\"] ?? \"Unknown\"}</h4>\n        <div className=\"patient-sub\">Preview of patient fields</div>\n      </div>\n\n      <div className=\"patient-meta-grid\">\n        <MetadataVertical meta={patient} combinedCounts={{ procsTotal, diagsTotal }} />\n      </div>\n\n      <div className=\"patient-tables\">\n        <h5 className=\"section-title\">Procedure / Billing (All Tables)</h5>\n        <ProcedureTables tables={combinedProcedureTables} />\n\n        <h5 className=\"section-title\" style={{ marginTop: 12 }}>\n          Diagnosis (All Tables)\n        </h5>\n        <DiagnosisTables tables={combinedDiagnosisTables} highlightCodes={highlightCodes} />\n\n        {highlightCodes.size > 0 && (\n          <div className=\"matched-note\">Highlighted diagnosis codes found in patient fields: {Array.from(highlightCodes).join(\", \")}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/* ---------------------\n   ResultBlock + main component\n   --------------------- */\n\nfunction ResultBlock({ item }) {\n  const patients = Array.isArray(item.patients) ? item.patients : item.patients_list || [];\n\n  const procedureTables =\n    item.procedure_tables || item.procedureTables || item.procedureTables || item.procedure_tables || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosisTables || item.diagnosis_tables || {};\n\n  const procTablesMutable = { ...normalizeTables(procedureTables) };\n  const diagTablesMutable = { ...normalizeTables(diagnosisTables) };\n\n  if (Object.keys(procTablesMutable).length === 0 && Array.isArray(item.medical_billing_codes) && item.medical_billing_codes.length) {\n    procTablesMutable[\"Procedures\"] = item.medical_billing_codes.map((r) =>\n      Array.isArray(r) ? r : [r.Code ?? r.code ?? \"\", r.Description ?? r.description ?? \"\", r.Fee ?? r.fee ?? \"\"]\n    );\n  }\n  if (Object.keys(diagTablesMutable).length === 0 && Array.isArray(item.diagnosis_codes) && item.diagnosis_codes.length) {\n    diagTablesMutable[\"Diagnosis\"] = item.diagnosis_codes.map((d) =>\n      Array.isArray(d) ? d : [d.Type ?? d.type ?? \"ICD-10\", d.Code ?? d.code ?? \"\", d.Diagnosis ?? d.diagnosis ?? d.Description ?? d.description ?? \"\"]\n    );\n  }\n\n  const totalProcRows = Object.values(procTablesMutable).reduce((s, a) => s + ((a && a.length) || 0), 0);\n  const totalDiagRows = Object.values(diagTablesMutable).reduce((s, a) => s + ((a && a.length) || 0), 0);\n\n  return (\n    <div className=\"result-block\">\n      <h2 className=\"file-title\">{item.file_name || item.filename || \"Uploaded file\"}</h2>\n      <div className=\"summary\">\n        {patients.length} patient(s) • {totalProcRows} procedure rows • {totalDiagRows} diagnosis rows\n      </div>\n\n      <section className=\"patients-list\">\n        {patients.length === 0 ? (\n          <div className=\"empty\">No patients found</div>\n        ) : (\n          patients.map((p, idx) => (\n            <PatientBlock key={idx} patient={p} procedureTables={procTablesMutable} diagnosisTables={diagTablesMutable} />\n          ))\n        )}\n      </section>\n\n      <details style={{ marginTop: 12 }}>\n        <summary>Raw response (debug)</summary>\n        <pre style={{ maxHeight: 260, overflow: \"auto\", background: \"#0b1220\", color: \"#cbd5e1\", padding: 8 }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </details>\n    </div>\n  );\n}\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert(\"⚠️ Session expired or access denied. Please log in again.\");\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) {\n      navigate(\"/\", { replace: true });\n    }\n    // eslint-disable-next-line\n  }, [auth, isAdmin, navigate]);\n\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", { username, password });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", { username, password });\n      const { token, username: un, role } = loginRes.data;\n      setAuth({ token, username: un, role });\n      localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n    } catch (err) {\n      setMessage(\"Signup failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", { username, password });\n      if (res.data.token) {\n        const { token, username: un, role } = res.data;\n        setAuth({ token, username: un, role });\n        localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      setMessage(\"Login failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {},\n      };\n    }\n\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {},\n      };\n    }\n\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes)\n          ? resData.medical_billing_codes.map((r) => (Array.isArray(r) ? r : [r.Code ?? r.code ?? \"\", r.Description ?? r.description ?? \"\", r.Fee ?? r.fee ?? \"\"]))\n          : [],\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes)\n          ? resData.diagnosis_codes.map((d) => (Array.isArray(d) ? d : [d.Type ?? d.type ?? \"ICD-10\", d.Code ?? d.code ?? \"\", d.Diagnosis ?? d.diagnosis ?? d.Description ?? d.description ?? \"\"]))\n          : [],\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {},\n      };\n    }\n\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta,\n    };\n  };\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container login-container\">\n        <div className=\"glass-card login-form\">\n          <h2>{isSignup ? \"Signup\" : \"Login\"}</h2>\n          <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"glass-input\" />\n          <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"glass-input\" />\n          {isSignup ? (\n            <button className=\"glass-btn\" onClick={handleSignup}>Signup</button>\n          ) : (\n            <button className=\"glass-btn\" onClick={handleLogin}>Login</button>\n          )}\n          <button className=\"glass-btn\" style={{ marginTop: 8 }} onClick={() => { setIsSignup(!isSignup); setMessage(\"\"); }}>\n            {isSignup ? \"Already have an account? Login\" : \"No account? Signup\"}\n          </button>\n          {message && <p className=\"message\">{message}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">{isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"}</h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\" style={{ marginTop: 8 }}>\n          <button className=\"upload-btn\" onClick={handleUploadAll} disabled={loading}>{loading ? \"Processing...\" : \"Upload All\"}</button>\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">{files.map((file, i) => <li key={i}>📎 {file.name}</li>)}</ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting tables...</p>}\n\n      {results.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Parsed Tables</h3>\n          {results.map((item, idx) => <ResultBlock key={idx} item={item} />)}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}