{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/admin/AdminOCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = ({\n  auth,\n  setAuth\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [allMetadata, setAllMetadata] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n\n  // Axios instance\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n\n  // Add Authorization header automatically\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  // Handle session expiration globally\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert('⚠️ Session expired or access denied. Please log in again.');\n    }\n    return Promise.reject(error);\n  });\n\n  // Redirect if already logged in\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token) {\n      navigate('/', {\n        replace: true\n      });\n    }\n  }, [auth, navigate]);\n\n  // --------------------------\n  // Signup / Login\n  // --------------------------\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      // auto-login after signup\n      const loginRes = await api.post('/auth/login', {\n        username,\n        password\n      });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage('Signup failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', {\n        username,\n        password\n      });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage('Login failed: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n\n  // --------------------------\n  // File Upload Handlers\n  // --------------------------\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setAllMetadata([]);\n    setDownloadReady(false);\n  };\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      // Only Admin attempts to reset server-side accumulator\n      if ((auth === null || auth === void 0 ? void 0 : auth.role) === 'Admin') {\n        try {\n          // accept both POST/GET (backend supports both)\n          await api.post('/api/reset');\n        } catch (resetErr) {\n          var _resetErr$response;\n          // swallow reset errors so non-critical\n          console.warn('Reset skipped:', (resetErr === null || resetErr === void 0 ? void 0 : (_resetErr$response = resetErr.response) === null || _resetErr$response === void 0 ? void 0 : _resetErr$response.status) || (resetErr === null || resetErr === void 0 ? void 0 : resetErr.message));\n        }\n      }\n      const all = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        const meta = res.data.metadata || {};\n        meta['File Name'] = meta['File Name'] || file.name;\n        meta['Patient Signature'] = res.data.patient_signature;\n        meta['Physician Signature'] = res.data.physician_signature;\n        all.push(meta);\n\n        // Save metadata on server for Excel export\n        await api.post('/api/export-excel', {\n          metadata: meta\n        });\n      }\n      setAllMetadata(all);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadExcel = async () => {\n    try {\n      const res = await api.get('/api/export-excel', {\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'metadata_output.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (err) {\n      console.error('Excel download failed:', err);\n      alert('⚠️ Download failed. Please try again.');\n    }\n  };\n\n  // --------------------------\n  // Render\n  // --------------------------\n  if (!(auth !== null && auth !== void 0 && auth.token)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Signup' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage('');\n        },\n        children: isSignup ? 'Already have an account? Login' : 'No account? Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: \"\\uD83D\\uDCC4 File OCR Extraction Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: handleDownloadExcel,\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting metadata...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }, this), allMetadata.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCB Extracted Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), allMetadata.map((meta, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-title\",\n          children: meta['File Name']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"metadata-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(meta).map(([key, value], i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"field-cell\",\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"value-cell\",\n                children: (key === 'Patient Signature' || key === 'Physician Signature') && typeof value === 'string' && value.includes('/signatures/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${API_BASE}${value}`,\n                  alt: key,\n                  className: \"signature-img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 27\n                }, this) : String(value !== null && value !== void 0 ? value : '')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this)]\n      }, fileIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"DpteGkX+2X3rGR/uKe6ByB0hwU4=\", false, function () {\n  return [useNavigate];\n});\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","OCRUpload","auth","setAuth","_s","navigate","files","setFiles","allMetadata","setAllMetadata","loading","setLoading","downloadReady","setDownloadReady","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","replace","handleSignup","res","post","data","loginRes","role","setItem","JSON","stringify","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","e","selected","Array","from","target","length","handleUploadAll","resetErr","_resetErr$response","console","warn","all","file","formData","FormData","append","meta","metadata","name","patient_signature","physician_signature","push","handleDownloadExcel","get","responseType","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","onClick","htmlFor","id","accept","multiple","map","i","fileIndex","Object","entries","key","src","alt","String","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/admin/AdminOCRUpload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\n\nconst OCRUpload = ({ auth, setAuth }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [allMetadata, setAllMetadata] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n\n  // Axios instance\n  const api = axios.create({ baseURL: API_BASE });\n\n  // Add Authorization header automatically\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  // Handle session expiration globally\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert('⚠️ Session expired or access denied. Please log in again.');\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  // Redirect if already logged in\n  useEffect(() => {\n    if (auth?.token) {\n      navigate('/', { replace: true });\n    }\n  }, [auth, navigate]);\n\n  // --------------------------\n  // Signup / Login\n  // --------------------------\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', { username, password });\n      setMessage(res.data.message || 'Signup successful!');\n      // auto-login after signup\n      const loginRes = await api.post('/auth/login', { username, password });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role,\n      });\n      localStorage.setItem(\n        'auth',\n        JSON.stringify({\n          token: loginRes.data.token,\n          username: loginRes.data.username,\n          role: loginRes.data.role,\n        })\n      );\n    } catch (err) {\n      setMessage('Signup failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', { username, password });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role,\n        });\n        localStorage.setItem(\n          'auth',\n          JSON.stringify({\n            token: res.data.token,\n            username: res.data.username,\n            role: res.data.role,\n          })\n        );\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      setMessage('Login failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  // --------------------------\n  // File Upload Handlers\n  // --------------------------\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setAllMetadata([]);\n    setDownloadReady(false);\n  };\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n\n    try {\n      // Only Admin attempts to reset server-side accumulator\n      if (auth?.role === 'Admin') {\n        try {\n          // accept both POST/GET (backend supports both)\n          await api.post('/api/reset');\n        } catch (resetErr) {\n          // swallow reset errors so non-critical\n          console.warn('Reset skipped:', resetErr?.response?.status || resetErr?.message);\n        }\n      }\n\n      const all = [];\n\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const res = await api.post('/api/ocr', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n\n        const meta = res.data.metadata || {};\n        meta['File Name'] = meta['File Name'] || file.name;\n        meta['Patient Signature'] = res.data.patient_signature;\n        meta['Physician Signature'] = res.data.physician_signature;\n\n        all.push(meta);\n\n        // Save metadata on server for Excel export\n        await api.post('/api/export-excel', { metadata: meta });\n      }\n\n      setAllMetadata(all);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownloadExcel = async () => {\n    try {\n      const res = await api.get('/api/export-excel', { responseType: 'blob' });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'metadata_output.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (err) {\n      console.error('Excel download failed:', err);\n      alert('⚠️ Download failed. Please try again.');\n    }\n  };\n\n  // --------------------------\n  // Render\n  // --------------------------\n  if (!auth?.token) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? 'Signup' : 'Login'}</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          className=\"auth-input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"auth-input\"\n        />\n\n        {isSignup ? (\n          <button className=\"auth-btn\" onClick={handleSignup}>\n            Signup\n          </button>\n        ) : (\n          <button className=\"auth-btn\" onClick={handleLogin}>\n            Login\n          </button>\n        )}\n\n        <button\n          className=\"toggle-btn\"\n          onClick={() => {\n            setIsSignup(!isSignup);\n            setMessage('');\n          }}\n        >\n          {isSignup ? 'Already have an account? Login' : 'No account? Signup'}\n        </button>\n\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">📄 File OCR Extraction Tool</h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">\n          Upload up to 10 files:\n        </label>\n        <input\n          type=\"file\"\n          id=\"file-upload\"\n          accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n          multiple\n          onChange={handleFileChange}\n        />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>\n            Upload All\n          </button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={handleDownloadExcel}>\n              ⬇️ Download Excel\n            </button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, i) => (\n              <li key={i}>📎 {file.name}</li>\n            ))}\n          </ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting metadata...</p>}\n\n      {allMetadata.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📋 Extracted Metadata</h3>\n          {allMetadata.map((meta, fileIndex) => (\n            <div key={fileIndex} className=\"table-container\">\n              <h4 className=\"file-title\">{meta['File Name']}</h4>\n              <table className=\"metadata-table\">\n                <thead>\n                  <tr>\n                    <th>Field</th>\n                    <th>Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(meta).map(([key, value], i) => (\n                    <tr key={i}>\n                      <td className=\"field-cell\">{key}</td>\n                      <td className=\"value-cell\">\n                        {(key === 'Patient Signature' || key === 'Physician Signature') &&\n                        typeof value === 'string' &&\n                        value.includes('/signatures/') ? (\n                          <img\n                            src={`${API_BASE}${value}`}\n                            alt={key}\n                            className=\"signature-img\"\n                          />\n                        ) : (\n                          String(value ?? '')\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ))}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}