{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\n// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small UI helpers\n   --------------------- */\n\n/**\n * Render a value that might be:\n * - string / number\n * - array of strings/numbers\n * - array of objects (render nested table)\n * - object (render key/value table)\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderMetaValue({\n  value\n}) {\n  if (value == null) return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"no-data\",\n    children: \"NIL\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 29\n  }, this);\n  if (typeof value === \"string\" && value.startsWith(\"/signatures/\")) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: value,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: value,\n        alt: \"signature\",\n        className: \"signature-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: String(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  if (Array.isArray(value)) {\n    if (value.length === 0) return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"no-data\",\n      children: \"No rows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 36\n    }, this);\n    if (value.every(v => typeof v === \"string\" || typeof v === \"number\" || typeof v === \"boolean\")) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: value.map(v => String(v)).join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    }\n    if (value.every(v => typeof v === \"object\" && v !== null)) {\n      const keys = Array.from(new Set(value.flatMap(v => v ? Object.keys(v) : [])));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid-wrapper\",\n        style: {\n          marginTop: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"excel-grid\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"excel-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: keys.map(k => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: k\n                }, k, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: value.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: keys.map(k => {\n                  var _ref, _row$k;\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"excel-td\",\n                    children: String((_ref = row && ((_row$k = row[k]) !== null && _row$k !== void 0 ? _row$k : row[k.toLowerCase()])) !== null && _ref !== void 0 ? _ref : \"\")\n                  }, k, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: value.map(v => JSON.stringify(v)).join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  if (typeof value === \"object\") {\n    const entries = Object.entries(value);\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"metadata-vertical\",\n      style: {\n        marginTop: 6\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: entries.map(([k, v]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: 160\n            },\n            children: k\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: typeof v === \"string\" && v.startsWith(\"/signatures/\") ? /*#__PURE__*/_jsxDEV(\"a\", {\n              href: v,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: v,\n                alt: k,\n                style: {\n                  maxHeight: 48\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this) : String(v !== null && v !== void 0 ? v : \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, k, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: String(value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 10\n  }, this);\n}\n_c = RenderMetaValue;\nfunction MetadataVertical({\n  meta\n}) {\n  if (!meta || Object.keys(meta).length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty\",\n    children: \"No metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 55\n  }, this);\n  const hideKeys = new Set([\"Procedure / Billing (All Tables)\", \"Diagnosis (All Tables)\", \"Procedure / Billing\", \"Diagnosis\"]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"metadata-vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Object.keys(meta).map(k => {\n        var _meta$k;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"meta-key\",\n            children: k\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"meta-val\",\n            children: hideKeys.has(k) ? Array.isArray(meta[k]) ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [meta[k].length, \" row(s) \\u2014 shown in tables below\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: String((_meta$k = meta[k]) !== null && _meta$k !== void 0 ? _meta$k : \"\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(RenderMetaValue, {\n              value: meta[k]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, k, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n/* Procedure / Diagnosis table helpers */\n_c2 = MetadataVertical;\nfunction normalizeProcRow(r) {\n  var _r$, _r$2, _r$3, _ref2, _ref3, _ref4, _r$Code, _r$Code2, _r$Code2$toString, _r$code, _r$code$toString, _ref5, _ref6, _ref7, _r$Description, _ref8, _ref9, _ref0, _r$Fee;\n  if (!r) return [\"\", \"\", \"\"];\n  if (Array.isArray(r)) return [(_r$ = r[0]) !== null && _r$ !== void 0 ? _r$ : \"\", (_r$2 = r[1]) !== null && _r$2 !== void 0 ? _r$2 : \"\", (_r$3 = r[2]) !== null && _r$3 !== void 0 ? _r$3 : \"\"];\n  const code = (_ref2 = (_ref3 = (_ref4 = (_r$Code = r.Code) !== null && _r$Code !== void 0 ? _r$Code : r.code) !== null && _ref4 !== void 0 ? _ref4 : (_r$Code2 = r.Code) === null || _r$Code2 === void 0 ? void 0 : (_r$Code2$toString = _r$Code2.toString) === null || _r$Code2$toString === void 0 ? void 0 : _r$Code2$toString.call(_r$Code2)) !== null && _ref3 !== void 0 ? _ref3 : (_r$code = r.code) === null || _r$code === void 0 ? void 0 : (_r$code$toString = _r$code.toString) === null || _r$code$toString === void 0 ? void 0 : _r$code$toString.call(_r$code)) !== null && _ref2 !== void 0 ? _ref2 : \"\";\n  const desc = (_ref5 = (_ref6 = (_ref7 = (_r$Description = r.Description) !== null && _r$Description !== void 0 ? _r$Description : r.description) !== null && _ref7 !== void 0 ? _ref7 : r.Desc) !== null && _ref6 !== void 0 ? _ref6 : r.desc) !== null && _ref5 !== void 0 ? _ref5 : \"\";\n  const fee = (_ref8 = (_ref9 = (_ref0 = (_r$Fee = r.Fee) !== null && _r$Fee !== void 0 ? _r$Fee : r.fee) !== null && _ref0 !== void 0 ? _ref0 : r.Amount) !== null && _ref9 !== void 0 ? _ref9 : r.amount) !== null && _ref8 !== void 0 ? _ref8 : \"\";\n  return [String(code).trim(), String(desc).trim(), String(fee).trim()];\n}\nfunction ProcedureTables({\n  tables\n}) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No procedure / billing tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"procedures-root\",\n    children: Object.entries(tables).map(([section, rows]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-block\",\n      style: {\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"table-section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"excel-grid-scroll\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"excel-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: \"Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: \"Fee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: rows && rows.length > 0 ? rows.map((r, i) => {\n                const [code, desc, fee] = normalizeProcRow(r);\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"excel-td\",\n                    children: code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"excel-td\",\n                    children: desc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"excel-td\",\n                    children: fee\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 25\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 3,\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  className: \"excel-td\",\n                  children: \"No rows\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ProcedureTables;\nfunction normalizeDiagRow(r) {\n  var _r$4, _r$5, _r$6, _ref1, _r$Type, _ref10, _r$Code3, _ref11, _ref12, _ref13, _r$Diagnosis;\n  if (!r) return [\"ICD-10\", \"\", \"\"];\n  if (Array.isArray(r)) return [(_r$4 = r[0]) !== null && _r$4 !== void 0 ? _r$4 : \"ICD-10\", (_r$5 = r[1]) !== null && _r$5 !== void 0 ? _r$5 : \"\", (_r$6 = r[2]) !== null && _r$6 !== void 0 ? _r$6 : \"\"];\n  const type = (_ref1 = (_r$Type = r.Type) !== null && _r$Type !== void 0 ? _r$Type : r.type) !== null && _ref1 !== void 0 ? _ref1 : \"ICD-10\";\n  const code = (_ref10 = (_r$Code3 = r.Code) !== null && _r$Code3 !== void 0 ? _r$Code3 : r.code) !== null && _ref10 !== void 0 ? _ref10 : \"\";\n  const desc = (_ref11 = (_ref12 = (_ref13 = (_r$Diagnosis = r.Diagnosis) !== null && _r$Diagnosis !== void 0 ? _r$Diagnosis : r.diagnosis) !== null && _ref13 !== void 0 ? _ref13 : r.Description) !== null && _ref12 !== void 0 ? _ref12 : r.description) !== null && _ref11 !== void 0 ? _ref11 : \"\";\n  return [String(type).trim(), String(code).trim(), String(desc).trim()];\n}\nfunction DiagnosisTables({\n  tables,\n  highlightCodes = new Set()\n}) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No diagnosis tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagnosis-root\",\n    children: Object.entries(tables).map(([section, rows]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-block\",\n      style: {\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"table-section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"excel-grid-scroll\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"excel-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: \"Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: \"Diagnosis\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: rows && rows.length > 0 ? rows.map((r, i) => {\n                const [type, code, desc] = normalizeDiagRow(r);\n                const isMatch = highlightCodes.has(String(code).trim());\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: isMatch ? \"highlight-row\" : \"\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"excel-td\",\n                    children: type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"excel-td\",\n                    children: code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"excel-td\",\n                    children: desc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 25\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 3,\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  className: \"excel-td\",\n                  children: \"No rows\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   PatientBlock + ResultBlock\n   --------------------- */\n_c4 = DiagnosisTables;\nfunction PatientBlock({\n  patient = {},\n  topProcedureTables = {},\n  topDiagnosisTables = {}\n}) {\n  var _ref14, _patient$PatientName;\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach(v => {\n    try {\n      const str = typeof v === \"string\" ? v : JSON.stringify(v);\n      const matches = (str || \"\").match(icdRegex);\n      if (matches) matches.forEach(c => highlightCodes.add(c.trim()));\n    } catch (e) {}\n  });\n  const patientProcRows = patient[\"Procedure / Billing (All Tables)\"] || patient[\"Procedure / Billing\"] || [];\n  const patientDiagRows = patient[\"Diagnosis (All Tables)\"] || patient[\"Diagnosis\"] || [];\n  const combinedProcTables = {};\n  if (patientProcRows && patientProcRows.length) {\n    combinedProcTables[\"Patient Procedures\"] = patientProcRows;\n  }\n  Object.entries(topProcedureTables || {}).forEach(([sec, rows]) => {\n    combinedProcTables[sec] = (combinedProcTables[sec] || []).concat(rows || []);\n  });\n  const combinedDiagTables = {};\n  if (patientDiagRows && patientDiagRows.length) {\n    combinedDiagTables[\"Patient Diagnosis\"] = patientDiagRows;\n  }\n  Object.entries(topDiagnosisTables || {}).forEach(([sec, rows]) => {\n    combinedDiagTables[sec] = (combinedDiagTables[sec] || []).concat(rows || []);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Patient: \", (_ref14 = (_patient$PatientName = patient[\"Patient Name\"]) !== null && _patient$PatientName !== void 0 ? _patient$PatientName : patient[\"Patient\"]) !== null && _ref14 !== void 0 ? _ref14 : \"Unknown\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"rgba(230,238,248,0.66)\",\n          fontSize: 12\n        },\n        children: patient[\"Date of Birth\"] && patient[\"Date of Birth\"] !== \"NIL\" ? patient[\"Date of Birth\"] : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-meta\",\n      children: /*#__PURE__*/_jsxDEV(MetadataVertical, {\n        meta: patient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-tables\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        children: \"Procedure / Billing (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProcedureTables, {\n        tables: Object.keys(combinedProcTables).length ? combinedProcTables : topProcedureTables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        style: {\n          marginTop: 12\n        },\n        children: \"Diagnosis (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiagnosisTables, {\n        tables: Object.keys(combinedDiagTables).length ? combinedDiagTables : topDiagnosisTables,\n        highlightCodes: highlightCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), highlightCodes.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matched-note\",\n        style: {\n          marginTop: 8\n        },\n        children: [\"Highlighted diagnosis codes found in patient fields: \", Array.from(highlightCodes).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n_c5 = PatientBlock;\nfunction ResultBlock({\n  item\n}) {\n  const patients = item.patients || item.patients_list || [];\n  const procedureTables = item.procedure_tables || item.procedureTables || item.medical_billing_codes_grouped || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosis_codes_grouped || {};\n  const procTables = Object.keys(procedureTables || {}).length === 0 && Array.isArray(item.medical_billing_codes) ? {\n    Procedures: item.medical_billing_codes\n  } : procedureTables;\n  const diagTables = Object.keys(diagnosisTables || {}).length === 0 && Array.isArray(item.diagnosis_codes) ? {\n    Diagnosis: item.diagnosis_codes\n  } : diagnosisTables;\n  const procCount = Object.values(procTables).reduce((s, a) => s + (a && a.length || 0), 0);\n  const diagCount = Object.values(diagTables).reduce((s, a) => s + (a && a.length || 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"file-title\",\n      children: item.file_name || item.filename || \"Uploaded file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [patients.length, \" patient(s) \\u2022 \", procCount, \" procedure rows \\u2022 \", diagCount, \" diagnosis rows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"patients-list\",\n      children: patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: \"No patients found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this) : patients.map((p, idx) => /*#__PURE__*/_jsxDEV(PatientBlock, {\n        patient: p,\n        topProcedureTables: procTables,\n        topDiagnosisTables: diagTables\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Raw response (debug)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          maxHeight: 260,\n          overflow: \"auto\",\n          background: \"#0b1220\",\n          color: \"#cbd5e1\",\n          padding: 8\n        },\n        children: JSON.stringify(item, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n}\n_c6 = ResultBlock;\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert(\"⚠️ Session expired or access denied. Please log in again.\");\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) {\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n  }, [auth, isAdmin, navigate]);\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", {\n        username,\n        password\n      });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      const {\n        token,\n        username: un,\n        role\n      } = loginRes.data;\n      setAuth({\n        token,\n        username: un,\n        role\n      });\n      localStorage.setItem(\"auth\", JSON.stringify({\n        token,\n        username: un,\n        role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(\"Signup failed: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      if (res.data.token) {\n        const {\n          token,\n          username: un,\n          role\n        } = res.data;\n        setAuth({\n          token,\n          username: un,\n          role\n        });\n        localStorage.setItem(\"auth\", JSON.stringify({\n          token,\n          username: un,\n          role\n        }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage(\"Login failed: \" + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {}\n      };\n    }\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {},\n        medical_billing_codes: resData.medical_billing_codes || resData.medicalBillingCodes || [],\n        diagnosis_codes: resData.diagnosis_codes || resData.diagnosisCodes || []\n      };\n    }\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes) ? resData.medical_billing_codes.map(r => {\n          var _ref15, _r$Code4, _ref16, _r$Description2, _ref17, _r$Fee2;\n          return Array.isArray(r) ? r : [(_ref15 = (_r$Code4 = r.Code) !== null && _r$Code4 !== void 0 ? _r$Code4 : r.code) !== null && _ref15 !== void 0 ? _ref15 : \"\", (_ref16 = (_r$Description2 = r.Description) !== null && _r$Description2 !== void 0 ? _r$Description2 : r.description) !== null && _ref16 !== void 0 ? _ref16 : \"\", (_ref17 = (_r$Fee2 = r.Fee) !== null && _r$Fee2 !== void 0 ? _r$Fee2 : r.fee) !== null && _ref17 !== void 0 ? _ref17 : \"\"];\n        }) : []\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes) ? resData.diagnosis_codes.map(d => {\n          var _ref18, _d$Type, _ref19, _d$Code, _ref20, _ref21, _ref22, _d$Diagnosis;\n          return Array.isArray(d) ? d : [(_ref18 = (_d$Type = d.Type) !== null && _d$Type !== void 0 ? _d$Type : d.type) !== null && _ref18 !== void 0 ? _ref18 : \"ICD-10\", (_ref19 = (_d$Code = d.Code) !== null && _d$Code !== void 0 ? _d$Code : d.code) !== null && _ref19 !== void 0 ? _ref19 : \"\", (_ref20 = (_ref21 = (_ref22 = (_d$Diagnosis = d.Diagnosis) !== null && _d$Diagnosis !== void 0 ? _d$Diagnosis : d.diagnosis) !== null && _ref22 !== void 0 ? _ref22 : d.Description) !== null && _ref21 !== void 0 ? _ref21 : d.description) !== null && _ref20 !== void 0 ? _ref20 : \"\"];\n        }) : []\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {},\n        medical_billing_codes: resData.medical_billing_codes || [],\n        diagnosis_codes: resData.diagnosis_codes || []\n      };\n    }\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta,\n      medical_billing_codes: [],\n      diagnosis_codes: []\n    };\n  };\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? \"Signup\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage(\"\");\n        },\n        children: isSignup ? \"Already have an account? Login\" : \"No account? Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 61\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting tables...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 19\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Parsed Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this), results.map((item, idx) => /*#__PURE__*/_jsxDEV(ResultBlock, {\n        item: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 529,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"rHWvzCgLol+q0ups8j2Fj9RAf2Q=\", false, function () {\n  return [useNavigate];\n});\n_c7 = OCRUpload;\nexport default OCRUpload;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"RenderMetaValue\");\n$RefreshReg$(_c2, \"MetadataVertical\");\n$RefreshReg$(_c3, \"ProcedureTables\");\n$RefreshReg$(_c4, \"DiagnosisTables\");\n$RefreshReg$(_c5, \"PatientBlock\");\n$RefreshReg$(_c6, \"ResultBlock\");\n$RefreshReg$(_c7, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","RenderMetaValue","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startsWith","href","target","rel","src","alt","String","Array","isArray","length","every","v","map","join","keys","from","Set","flatMap","Object","style","marginTop","k","row","i","_ref","_row$k","toLowerCase","JSON","stringify","entries","width","maxHeight","_c","MetadataVertical","meta","hideKeys","_meta$k","has","_c2","normalizeProcRow","r","_r$","_r$2","_r$3","_ref2","_ref3","_ref4","_r$Code","_r$Code2","_r$Code2$toString","_r$code","_r$code$toString","_ref5","_ref6","_ref7","_r$Description","_ref8","_ref9","_ref0","_r$Fee","code","Code","toString","call","desc","Description","description","Desc","fee","Fee","Amount","amount","trim","ProcedureTables","tables","section","rows","marginBottom","colSpan","textAlign","_c3","normalizeDiagRow","_r$4","_r$5","_r$6","_ref1","_r$Type","_ref10","_r$Code3","_ref11","_ref12","_ref13","_r$Diagnosis","type","Type","Diagnosis","diagnosis","DiagnosisTables","highlightCodes","isMatch","_c4","PatientBlock","patient","topProcedureTables","topDiagnosisTables","_ref14","_patient$PatientName","icdRegex","values","forEach","str","matches","match","c","add","e","patientProcRows","patientDiagRows","combinedProcTables","sec","concat","combinedDiagTables","color","fontSize","size","_c5","ResultBlock","item","patients","patients_list","procedureTables","procedure_tables","medical_billing_codes_grouped","diagnosisTables","diagnosis_tables","diagnosis_codes_grouped","procTables","medical_billing_codes","Procedures","diagTables","diagnosis_codes","procCount","reduce","s","a","diagCount","file_name","filename","p","idx","overflow","background","padding","_c6","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","results","setResults","loading","setLoading","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","replace","handleSignup","res","post","data","loginRes","un","role","setItem","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","selected","buildItemFromResponse","resData","file","name","metadata","medicalBillingCodes","diagnosisCodes","procedures","_ref15","_r$Code4","_ref16","_r$Description2","_ref17","_r$Fee2","diags","d","_ref18","_d$Type","_ref19","_d$Code","_ref20","_ref21","_ref22","_d$Diagnosis","handleUploadAll","out","formData","FormData","append","push","console","placeholder","onChange","onClick","htmlFor","id","accept","multiple","disabled","_c7","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small UI helpers\n   --------------------- */\n\n/**\n * Render a value that might be:\n * - string / number\n * - array of strings/numbers\n * - array of objects (render nested table)\n * - object (render key/value table)\n */\nfunction RenderMetaValue({ value }) {\n  if (value == null) return <span className=\"no-data\">NIL</span>;\n\n  if (typeof value === \"string\" && value.startsWith(\"/signatures/\")) {\n    return (\n      <a href={value} target=\"_blank\" rel=\"noreferrer\">\n        <img src={value} alt=\"signature\" className=\"signature-img\" />\n      </a>\n    );\n  }\n\n  if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n    return <span>{String(value)}</span>;\n  }\n\n  if (Array.isArray(value)) {\n    if (value.length === 0) return <span className=\"no-data\">No rows</span>;\n\n    if (value.every((v) => typeof v === \"string\" || typeof v === \"number\" || typeof v === \"boolean\")) {\n      return <span>{value.map((v) => String(v)).join(\", \")}</span>;\n    }\n\n    if (value.every((v) => typeof v === \"object\" && v !== null)) {\n      const keys = Array.from(new Set(value.flatMap((v) => (v ? Object.keys(v) : []))));\n      return (\n        <div className=\"excel-grid-wrapper\" style={{ marginTop: 6 }}>\n          <div className=\"excel-grid\">\n            <table className=\"excel-table\">\n              <thead>\n                <tr>\n                  {keys.map((k) => (\n                    <th key={k} className=\"excel-th\">{k}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {value.map((row, i) => (\n                  <tr key={i}>\n                    {keys.map((k) => (\n                      <td key={k} className=\"excel-td\">{String((row && (row[k] ?? row[k.toLowerCase()])) ?? \"\")}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      );\n    }\n\n    return <span>{value.map((v) => JSON.stringify(v)).join(\", \")}</span>;\n  }\n\n  if (typeof value === \"object\") {\n    const entries = Object.entries(value);\n    return (\n      <table className=\"metadata-vertical\" style={{ marginTop: 6 }}>\n        <tbody>\n          {entries.map(([k, v]) => (\n            <tr key={k}>\n              <th style={{ width: 160 }}>{k}</th>\n              <td>{typeof v === \"string\" && v.startsWith(\"/signatures/\") ? (\n                <a href={v} target=\"_blank\" rel=\"noreferrer\">\n                  <img src={v} alt={k} style={{ maxHeight: 48 }} />\n                </a>\n              ) : (\n                String(v ?? \"\")\n              )}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  return <span>{String(value)}</span>;\n}\n\nfunction MetadataVertical({ meta }) {\n  if (!meta || Object.keys(meta).length === 0) return <div className=\"empty\">No metadata</div>;\n  const hideKeys = new Set([\n    \"Procedure / Billing (All Tables)\",\n    \"Diagnosis (All Tables)\",\n    \"Procedure / Billing\",\n    \"Diagnosis\",\n  ]);\n\n  return (\n    <table className=\"metadata-vertical\">\n      <tbody>\n        {Object.keys(meta).map((k) => (\n          <tr key={k}>\n            <th className=\"meta-key\">{k}</th>\n            <td className=\"meta-val\">\n              {hideKeys.has(k) ? (\n                Array.isArray(meta[k]) ? (\n                  <span>{meta[k].length} row(s) — shown in tables below</span>\n                ) : (\n                  <span>{String(meta[k] ?? \"\")}</span>\n                )\n              ) : (\n                <RenderMetaValue value={meta[k]} />\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\n/* Procedure / Diagnosis table helpers */\n\nfunction normalizeProcRow(r) {\n  if (!r) return [\"\", \"\", \"\"];\n  if (Array.isArray(r)) return [r[0] ?? \"\", r[1] ?? \"\", r[2] ?? \"\"];\n  const code = r.Code ?? r.code ?? r.Code?.toString?.() ?? r.code?.toString?.() ?? \"\";\n  const desc = r.Description ?? r.description ?? r.Desc ?? r.desc ?? \"\";\n  const fee = r.Fee ?? r.fee ?? r.Amount ?? r.amount ?? \"\";\n  return [String(code).trim(), String(desc).trim(), String(fee).trim()];\n}\n\nfunction ProcedureTables({ tables }) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return <div className=\"empty\">No procedure / billing tables found.</div>;\n  }\n  return (\n    <div className=\"procedures-root\">\n      {Object.entries(tables).map(([section, rows]) => (\n        <div className=\"table-block\" key={section} style={{ marginBottom: 12 }}>\n          <h4 className=\"table-section-title\">{section}</h4>\n          <div className=\"excel-grid\">\n            <div className=\"excel-grid-scroll\">\n              <table className=\"excel-table\">\n                <thead>\n                  <tr>\n                    <th className=\"excel-th\">Code</th>\n                    <th className=\"excel-th\">Description</th>\n                    <th className=\"excel-th\">Fee</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {rows && rows.length > 0 ? (\n                    rows.map((r, i) => {\n                      const [code, desc, fee] = normalizeProcRow(r);\n                      return (\n                        <tr key={i}>\n                          <td className=\"excel-td\">{code}</td>\n                          <td className=\"excel-td\">{desc}</td>\n                          <td className=\"excel-td\">{fee}</td>\n                        </tr>\n                      );\n                    })\n                  ) : (\n                    <tr>\n                      <td colSpan={3} style={{ textAlign: \"center\" }} className=\"excel-td\">\n                        No rows\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction normalizeDiagRow(r) {\n  if (!r) return [\"ICD-10\", \"\", \"\"];\n  if (Array.isArray(r)) return [r[0] ?? \"ICD-10\", r[1] ?? \"\", r[2] ?? \"\"];\n  const type = r.Type ?? r.type ?? \"ICD-10\";\n  const code = r.Code ?? r.code ?? \"\";\n  const desc = r.Diagnosis ?? r.diagnosis ?? r.Description ?? r.description ?? \"\";\n  return [String(type).trim(), String(code).trim(), String(desc).trim()];\n}\n\nfunction DiagnosisTables({ tables, highlightCodes = new Set() }) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return <div className=\"empty\">No diagnosis tables found.</div>;\n  }\n  return (\n    <div className=\"diagnosis-root\">\n      {Object.entries(tables).map(([section, rows]) => (\n        <div className=\"table-block\" key={section} style={{ marginBottom: 12 }}>\n          <h4 className=\"table-section-title\">{section}</h4>\n          <div className=\"excel-grid\">\n            <div className=\"excel-grid-scroll\">\n              <table className=\"excel-table\">\n                <thead>\n                  <tr>\n                    <th className=\"excel-th\">Type</th>\n                    <th className=\"excel-th\">Code</th>\n                    <th className=\"excel-th\">Diagnosis</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {rows && rows.length > 0 ? (\n                    rows.map((r, i) => {\n                      const [type, code, desc] = normalizeDiagRow(r);\n                      const isMatch = highlightCodes.has(String(code).trim());\n                      return (\n                        <tr key={i} className={isMatch ? \"highlight-row\" : \"\"}>\n                          <td className=\"excel-td\">{type}</td>\n                          <td className=\"excel-td\">{code}</td>\n                          <td className=\"excel-td\">{desc}</td>\n                        </tr>\n                      );\n                    })\n                  ) : (\n                    <tr>\n                      <td colSpan={3} style={{ textAlign: \"center\" }} className=\"excel-td\">\n                        No rows\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n/* ---------------------\n   PatientBlock + ResultBlock\n   --------------------- */\n\nfunction PatientBlock({ patient = {}, topProcedureTables = {}, topDiagnosisTables = {} }) {\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach((v) => {\n    try {\n      const str = typeof v === \"string\" ? v : JSON.stringify(v);\n      const matches = (str || \"\").match(icdRegex);\n      if (matches) matches.forEach((c) => highlightCodes.add(c.trim()));\n    } catch (e) {}\n  });\n\n  const patientProcRows = patient[\"Procedure / Billing (All Tables)\"] || patient[\"Procedure / Billing\"] || [];\n  const patientDiagRows = patient[\"Diagnosis (All Tables)\"] || patient[\"Diagnosis\"] || [];\n\n  const combinedProcTables = {};\n  if (patientProcRows && patientProcRows.length) {\n    combinedProcTables[\"Patient Procedures\"] = patientProcRows;\n  }\n  Object.entries(topProcedureTables || {}).forEach(([sec, rows]) => {\n    combinedProcTables[sec] = (combinedProcTables[sec] || []).concat(rows || []);\n  });\n\n  const combinedDiagTables = {};\n  if (patientDiagRows && patientDiagRows.length) {\n    combinedDiagTables[\"Patient Diagnosis\"] = patientDiagRows;\n  }\n  Object.entries(topDiagnosisTables || {}).forEach(([sec, rows]) => {\n    combinedDiagTables[sec] = (combinedDiagTables[sec] || []).concat(rows || []);\n  });\n\n  return (\n    <div className=\"patient-block\">\n      <div className=\"patient-header\">\n        <h4>Patient: {patient[\"Patient Name\"] ?? patient[\"Patient\"] ?? \"Unknown\"}</h4>\n        <div style={{ color: \"rgba(230,238,248,0.66)\", fontSize: 12 }}>\n          {patient[\"Date of Birth\"] && patient[\"Date of Birth\"] !== \"NIL\" ? patient[\"Date of Birth\"] : \"\"}\n        </div>\n      </div>\n\n      <div className=\"patient-meta\">\n        <MetadataVertical meta={patient} />\n      </div>\n\n      <div className=\"patient-tables\">\n        <h5 className=\"section-title\">Procedure / Billing (All Tables)</h5>\n        <ProcedureTables tables={Object.keys(combinedProcTables).length ? combinedProcTables : topProcedureTables} />\n\n        <h5 className=\"section-title\" style={{ marginTop: 12 }}>\n          Diagnosis (All Tables)\n        </h5>\n        <DiagnosisTables tables={Object.keys(combinedDiagTables).length ? combinedDiagTables : topDiagnosisTables} highlightCodes={highlightCodes} />\n\n        {highlightCodes.size > 0 && (\n          <div className=\"matched-note\" style={{ marginTop: 8 }}>\n            Highlighted diagnosis codes found in patient fields: {Array.from(highlightCodes).join(\", \")}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ResultBlock({ item }) {\n  const patients = item.patients || item.patients_list || [];\n  const procedureTables =\n    item.procedure_tables || item.procedureTables || item.medical_billing_codes_grouped || {} ;\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosis_codes_grouped || {} ;\n\n  const procTables = (Object.keys(procedureTables || {}).length === 0 && Array.isArray(item.medical_billing_codes))\n    ? { Procedures: item.medical_billing_codes }\n    : procedureTables;\n\n  const diagTables = (Object.keys(diagnosisTables || {}).length === 0 && Array.isArray(item.diagnosis_codes))\n    ? { Diagnosis: item.diagnosis_codes }\n    : diagnosisTables;\n\n  const procCount = Object.values(procTables).reduce((s, a) => s + ((a && a.length) || 0), 0);\n  const diagCount = Object.values(diagTables).reduce((s, a) => s + ((a && a.length) || 0), 0);\n\n  return (\n    <div className=\"result-block\">\n      <h2 className=\"file-title\">{item.file_name || item.filename || \"Uploaded file\"}</h2>\n      <div className=\"summary\">\n        {patients.length} patient(s) • {procCount} procedure rows • {diagCount} diagnosis rows\n      </div>\n\n      <section className=\"patients-list\">\n        {patients.length === 0 ? (\n          <div className=\"empty\">No patients found</div>\n        ) : (\n          patients.map((p, idx) => (\n            <PatientBlock\n              key={idx}\n              patient={p}\n              topProcedureTables={procTables}\n              topDiagnosisTables={diagTables}\n            />\n          ))\n        )}\n      </section>\n\n      <details style={{ marginTop: 12 }}>\n        <summary>Raw response (debug)</summary>\n        <pre style={{ maxHeight: 260, overflow: \"auto\", background: \"#0b1220\", color: \"#cbd5e1\", padding: 8 }}>{JSON.stringify(item, null, 2)}</pre>\n      </details>\n    </div>\n  );\n}\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert(\"⚠️ Session expired or access denied. Please log in again.\");\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) {\n      navigate(\"/\", { replace: true });\n    }\n  }, [auth, isAdmin, navigate]);\n\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", { username, password });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", { username, password });\n      const { token, username: un, role } = loginRes.data;\n      setAuth({ token, username: un, role });\n      localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n    } catch (err) {\n      setMessage(\"Signup failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", { username, password });\n      if (res.data.token) {\n        const { token, username: un, role } = res.data;\n        setAuth({ token, username: un, role });\n        localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      setMessage(\"Login failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {},\n      };\n    }\n\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {},\n        medical_billing_codes: resData.medical_billing_codes || resData.medicalBillingCodes || [],\n        diagnosis_codes: resData.diagnosis_codes || resData.diagnosisCodes || [],\n      };\n    }\n\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes)\n          ? resData.medical_billing_codes.map((r) => (Array.isArray(r) ? r : [r.Code ?? r.code ?? \"\", r.Description ?? r.description ?? \"\", r.Fee ?? r.fee ?? \"\"]))\n          : [],\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes)\n          ? resData.diagnosis_codes.map((d) => (Array.isArray(d) ? d : [d.Type ?? d.type ?? \"ICD-10\", d.Code ?? d.code ?? \"\", d.Diagnosis ?? d.diagnosis ?? d.Description ?? d.description ?? \"\"]))\n          : [],\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {},\n        medical_billing_codes: resData.medical_billing_codes || [],\n        diagnosis_codes: resData.diagnosis_codes || [],\n      };\n    }\n\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta,\n      medical_billing_codes: [],\n      diagnosis_codes: [],\n    };\n  };\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? \"Signup\" : \"Login\"}</h2>\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"auth-input\" />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"auth-input\" />\n        {isSignup ? <button className=\"auth-btn\" onClick={handleSignup}>Signup</button> : <button className=\"auth-btn\" onClick={handleLogin}>Login</button>}\n        <button className=\"toggle-btn\" onClick={() => { setIsSignup(!isSignup); setMessage(\"\"); }}>{isSignup ? \"Already have an account? Login\" : \"No account? Signup\"}</button>\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">{isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"}</h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll} disabled={loading}>{loading ? \"Processing...\" : \"Upload All\"}</button>\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">{files.map((file, i) => <li key={i}>📎 {file.name}</li>)}</ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting tables...</p>}\n\n      {results.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Parsed Tables</h3>\n          {results.map((item, idx) => <ResultBlock key={idx} item={item} />)}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}