{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]); // [{columns, rows, sections}]\n  const [rawTexts, setRawTexts] = useState([]); // plain text per file for fallback parse\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert('⚠️ Session expired or access denied. Please log in again.');\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) navigate('/', {\n      replace: true\n    });\n  }, [auth, isAdmin, navigate]);\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', {\n        username,\n        password\n      });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage('Signup failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', {\n        username,\n        password\n      });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage('Login failed: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setRawTexts([]);\n    setDownloadReady(false);\n  };\n\n  // Fallback parser for plain text to rows, using known columns\n  function parsePlainTextToRows(text, expectedColumns) {\n    if (!text || !(expectedColumns !== null && expectedColumns !== void 0 && expectedColumns.length)) return [];\n    const lines = text.split(/\\r?\\n/).map(l => l.trimRight());\n\n    // Prefer markdown-like sections first\n    const headerLineIdx = lines.findIndex(ln => ln.includes('|') && expectedColumns.every(c => ln.toLowerCase().includes(c.split(' ').toLowerCase())));\n    if (headerLineIdx !== -1) {\n      // Skip next separator if present\n      let start = headerLineIdx + 1;\n      if (lines[start] && setOf(lines[start].replace(/\\|/g, '').trim()) <= setOf('-: ')) start++;\n      const out = [];\n      for (let i = start; i < lines.length; i++) {\n        const ln = lines[i].trim();\n        if (!ln) continue;\n        if (/^Billing Type Totals:/i.test(ln) || /<GRAND TOTALS>/i.test(ln)) break;\n        if (!ln.includes('|')) break;\n        let parts = ln.split('|').map(s => s.trim());\n        parts = stripEmptyEdges(parts);\n        if (parts.length > expectedColumns.length) parts = parts.slice(0, expectedColumns.length);\n        if (parts.length < expectedColumns.length) parts = parts.concat(Array(expectedColumns.length - parts.length).fill(''));\n        const row = {};\n        expectedColumns.forEach((c, idx) => {\n          var _parts$idx;\n          return row[c] = (_parts$idx = parts[idx]) !== null && _parts$idx !== void 0 ? _parts$idx : '';\n        });\n        if (Object.values(row).some(v => v)) out.push(row);\n      }\n      return out;\n    }\n\n    // Monospace fallback\n    const out = [];\n    for (const raw of lines) {\n      const ln = raw.trim();\n      if (!ln || /^Billing Type Totals:/i.test(ln) || /<GRAND TOTALS>/i.test(ln)) continue;\n      if (/^[-:| ]+$/.test(ln)) continue;\n      let parts = ln.includes('|') ? ln.split('|').map(s => s.trim()) : ln.split(/\\s{2,}/).map(s => s.trim());\n      parts = parts.filter(Boolean);\n      if (parts.length < 3) continue;\n      if (parts.length > expectedColumns.length) parts = parts.slice(0, expectedColumns.length);\n      if (parts.length < expectedColumns.length) parts = parts.concat(Array(expectedColumns.length - parts.length).fill(''));\n      const row = {};\n      expectedColumns.forEach((c, idx) => {\n        var _parts$idx2;\n        return row[c] = (_parts$idx2 = parts[idx]) !== null && _parts$idx2 !== void 0 ? _parts$idx2 : '';\n      });\n      if (row['Type'] || row['Member I.D. Number'] || row['Patient Identification'] || row['Total Due']) {\n        out.push(row);\n      }\n    }\n    return out;\n  }\n  function stripEmptyEdges(parts) {\n    const arr = parts.slice();\n    while (arr.length && arr === '') arr.shift();\n    while (arr.length && arr[arr.length - 1] === '') arr.pop();\n    return arr;\n  }\n  function setOf(s) {\n    return new Set(s.split(''));\n  }\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      var _auth$role;\n      if ((auth === null || auth === void 0 ? void 0 : (_auth$role = auth.role) === null || _auth$role === void 0 ? void 0 : _auth$role.toLowerCase()) === 'admin') {\n        try {\n          await api.post('/api/reset');\n        } catch {}\n      }\n      const outTables = [];\n      const texts = [];\n      for (const [idx, file] of files.entries()) {\n        var _res$data$metadata, _res$data$metadata2, _res$data$metadata3;\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${auth === null || auth === void 0 ? void 0 : auth.token}`\n          }\n        });\n        const report = res.data.report || ((_res$data$metadata = res.data.metadata) === null || _res$data$metadata === void 0 ? void 0 : _res$data$metadata.report) || null;\n        const fallbackText = res.data.report_text || res.data.text || ((_res$data$metadata2 = res.data.metadata) === null || _res$data$metadata2 === void 0 ? void 0 : _res$data$metadata2.report_text) || ((_res$data$metadata3 = res.data.metadata) === null || _res$data$metadata3 === void 0 ? void 0 : _res$data$metadata3.full_text) || '';\n        outTables[idx] = report && report.columns && Array.isArray(report.rows) ? report : {\n          columns: [],\n          rows: [],\n          sections: []\n        };\n        texts[idx] = typeof fallbackText === 'string' ? fallbackText : '';\n\n        // Optional server export\n        try {\n          await api.post('/api/export-excel', {\n            metadata: {}\n          }, {\n            headers: {\n              Authorization: `Bearer ${auth === null || auth === void 0 ? void 0 : auth.token}`\n            }\n          });\n        } catch {}\n      }\n      setTables(outTables);\n      setRawTexts(texts);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Signup' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage('');\n        },\n        children: isSignup ? 'Already have an account? Login' : 'No account? Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: () => alert('Server export kept for compatibility.'),\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting table...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }, this), tables.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Aging Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), files.map((file, idx) => {\n        var _tables$idx, _tables$idx2;\n        let columns = ((_tables$idx = tables[idx]) === null || _tables$idx === void 0 ? void 0 : _tables$idx.columns) || [];\n        let rows = ((_tables$idx2 = tables[idx]) === null || _tables$idx2 === void 0 ? void 0 : _tables$idx2.rows) || [];\n        // Fallback: if rows empty, build from raw text\n        if ((!rows || rows.length === 0) && columns && columns.length) {\n          rows = parsePlainTextToRows(rawTexts[idx] || '', columns);\n        }\n        const hasData = columns.length > 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"excel-grid-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"excel-grid-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"file-title\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), !hasData ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-data\",\n            children: \"No headers detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"excel-grid compact\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"excel-grid-scroll\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"excel-table\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"excel-th\",\n                      children: col\n                    }, col, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: !rows || rows.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"excel-td\",\n                      colSpan: columns.length,\n                      style: {\n                        textAlign: 'center'\n                      },\n                      children: \"No rows\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 29\n                  }, this) : rows.map((r, i) => {\n                    var _r$row_id;\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: columns.map(col => {\n                        var _r$col;\n                        return /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"excel-td\",\n                          children: (_r$col = r === null || r === void 0 ? void 0 : r[col]) !== null && _r$col !== void 0 ? _r$col : ''\n                        }, col, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 35\n                        }, this);\n                      })\n                    }, (_r$row_id = r === null || r === void 0 ? void 0 : r.row_id) !== null && _r$row_id !== void 0 ? _r$row_id : i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 19\n          }, this)]\n        }, `grid-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"zvRb6cMrjz4h1THRyuZCoFCjYG0=\", false, function () {\n  return [useNavigate];\n});\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","tables","setTables","rawTexts","setRawTexts","loading","setLoading","downloadReady","setDownloadReady","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","replace","handleSignup","res","post","data","loginRes","role","setItem","JSON","stringify","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","e","selected","Array","from","target","length","parsePlainTextToRows","text","expectedColumns","lines","split","map","l","trimRight","headerLineIdx","findIndex","ln","every","c","toLowerCase","start","setOf","trim","out","i","test","parts","s","stripEmptyEdges","slice","concat","fill","row","forEach","idx","_parts$idx","Object","values","some","v","push","raw","filter","Boolean","_parts$idx2","arr","shift","pop","Set","handleUploadAll","_auth$role","outTables","texts","file","entries","_res$data$metadata","_res$data$metadata2","_res$data$metadata3","formData","FormData","append","report","metadata","fallbackText","report_text","full_text","columns","isArray","rows","sections","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","onClick","htmlFor","id","accept","multiple","name","_tables$idx","_tables$idx2","hasData","col","colSpan","style","textAlign","r","_r$row_id","_r$col","row_id","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]);     // [{columns, rows, sections}]\n  const [rawTexts, setRawTexts] = useState([]); // plain text per file for fallback parse\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert('⚠️ Session expired or access denied. Please log in again.');\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) navigate('/', { replace: true });\n  }, [auth, isAdmin, navigate]);\n\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', { username, password });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', { username, password });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role,\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role,\n      }));\n    } catch (err) {\n      setMessage('Signup failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', { username, password });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role,\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role,\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      setMessage('Login failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setRawTexts([]);\n    setDownloadReady(false);\n  };\n\n  // Fallback parser for plain text to rows, using known columns\n  function parsePlainTextToRows(text, expectedColumns) {\n    if (!text || !expectedColumns?.length) return [];\n    const lines = text.split(/\\r?\\n/).map(l => l.trimRight());\n\n    // Prefer markdown-like sections first\n    const headerLineIdx = lines.findIndex(\n      ln => ln.includes('|') && expectedColumns.every(c => ln.toLowerCase().includes(c.split(' ').toLowerCase()))\n    );\n\n    if (headerLineIdx !== -1) {\n      // Skip next separator if present\n      let start = headerLineIdx + 1;\n      if (lines[start] && setOf(lines[start].replace(/\\|/g, '').trim()) <= setOf('-: ')) start++;\n      const out = [];\n      for (let i = start; i < lines.length; i++) {\n        const ln = lines[i].trim();\n        if (!ln) continue;\n        if (/^Billing Type Totals:/i.test(ln) || /<GRAND TOTALS>/i.test(ln)) break;\n        if (!ln.includes('|')) break;\n        let parts = ln.split('|').map(s => s.trim());\n        parts = stripEmptyEdges(parts);\n        if (parts.length > expectedColumns.length) parts = parts.slice(0, expectedColumns.length);\n        if (parts.length < expectedColumns.length) parts = parts.concat(Array(expectedColumns.length - parts.length).fill(''));\n        const row = {};\n        expectedColumns.forEach((c, idx) => row[c] = parts[idx] ?? '');\n        if (Object.values(row).some(v => v)) out.push(row);\n      }\n      return out;\n    }\n\n    // Monospace fallback\n    const out = [];\n    for (const raw of lines) {\n      const ln = raw.trim();\n      if (!ln || /^Billing Type Totals:/i.test(ln) || /<GRAND TOTALS>/i.test(ln)) continue;\n      if (/^[-:| ]+$/.test(ln)) continue;\n      let parts = ln.includes('|') ? ln.split('|').map(s => s.trim()) : ln.split(/\\s{2,}/).map(s => s.trim());\n      parts = parts.filter(Boolean);\n      if (parts.length < 3) continue;\n      if (parts.length > expectedColumns.length) parts = parts.slice(0, expectedColumns.length);\n      if (parts.length < expectedColumns.length) parts = parts.concat(Array(expectedColumns.length - parts.length).fill(''));\n      const row = {};\n      expectedColumns.forEach((c, idx) => row[c] = parts[idx] ?? '');\n      if (row['Type'] || row['Member I.D. Number'] || row['Patient Identification'] || row['Total Due']) {\n        out.push(row);\n      }\n    }\n    return out;\n  }\n\n  function stripEmptyEdges(parts) {\n    const arr = parts.slice();\n    while (arr.length && arr === '') arr.shift();\n    while (arr.length && arr[arr.length - 1] === '') arr.pop();\n    return arr;\n  }\n  function setOf(s) {\n    return new Set(s.split(''));\n  }\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      if (auth?.role?.toLowerCase() === 'admin') {\n        try { await api.post('/api/reset'); } catch {}\n      }\n      const outTables = [];\n      const texts = [];\n\n      for (const [idx, file] of files.entries()) {\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${auth?.token}`,\n          },\n        });\n\n        const report = res.data.report || res.data.metadata?.report || null;\n        const fallbackText =\n          res.data.report_text ||\n          res.data.text ||\n          res.data.metadata?.report_text ||\n          res.data.metadata?.full_text ||\n          '';\n\n        outTables[idx] = (report && report.columns && Array.isArray(report.rows))\n          ? report\n          : { columns: [], rows: [], sections: [] };\n\n        texts[idx] = typeof fallbackText === 'string' ? fallbackText : '';\n\n        // Optional server export\n        try {\n          await api.post('/api/export-excel', { metadata: {} }, { headers: { Authorization: `Bearer ${auth?.token}` } });\n        } catch {}\n      }\n\n      setTables(outTables);\n      setRawTexts(texts);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? 'Signup' : 'Login'}</h2>\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"auth-input\" />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"auth-input\" />\n        {isSignup ? (\n          <button className=\"auth-btn\" onClick={handleSignup}>Signup</button>\n        ) : (\n          <button className=\"auth-btn\" onClick={handleLogin}>Login</button>\n        )}\n        <button className=\"toggle-btn\" onClick={() => { setIsSignup(!isSignup); setMessage(''); }}>\n          {isSignup ? 'Already have an account? Login' : 'No account? Signup'}\n        </button>\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">\n          {isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'}\n        </h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>Upload All</button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={() => alert('Server export kept for compatibility.')}>⬇️ Download Excel</button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, i) => (<li key={i}>📎 {file.name}</li>))}\n          </ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting table...</p>}\n\n      {/* Only render the table (no FieldValue/columns/rows/sections metadata) */}\n      {tables.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Aging Report</h3>\n          {files.map((file, idx) => {\n            let columns = tables[idx]?.columns || [];\n            let rows = tables[idx]?.rows || [];\n            // Fallback: if rows empty, build from raw text\n            if ((!rows || rows.length === 0) && columns && columns.length) {\n              rows = parsePlainTextToRows(rawTexts[idx] || '', columns);\n            }\n            const hasData = columns.length > 0;\n            return (\n              <div className=\"excel-grid-wrapper\" key={`grid-${idx}`}>\n                <div className=\"excel-grid-header\">\n                  <h4 className=\"file-title\">{file.name}</h4>\n                </div>\n                {!hasData ? (\n                  <div className=\"no-data\">No headers detected</div>\n                ) : (\n                  <div className=\"excel-grid compact\">\n                    <div className=\"excel-grid-scroll\">\n                      <table className=\"excel-table\">\n                        <thead>\n                          <tr>\n                            {columns.map((col) => (\n                              <th key={col} className=\"excel-th\">{col}</th>\n                            ))}\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {(!rows || rows.length === 0) ? (\n                            <tr>\n                              <td className=\"excel-td\" colSpan={columns.length} style={{ textAlign: 'center' }}>\n                                No rows\n                              </td>\n                            </tr>\n                          ) : (\n                            rows.map((r, i) => (\n                              <tr key={r?.row_id ?? i}>\n                                {columns.map((col) => (\n                                  <td key={col} className=\"excel-td\">{r?.[col] ?? ''}</td>\n                                ))}\n                              </tr>\n                            ))\n                          )}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}