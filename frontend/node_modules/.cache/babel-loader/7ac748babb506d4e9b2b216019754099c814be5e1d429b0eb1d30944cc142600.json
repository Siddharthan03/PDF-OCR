{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]); // [{columns, rows, sections}]\n  const [rawTexts, setRawTexts] = useState([]); // plain text per file for fallback parse\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n\n  // Attach token\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  // Handle 401/403\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert('⚠️ Session expired or access denied. Please log in again.');\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) {\n      navigate('/', {\n        replace: true\n      });\n    }\n  }, [auth, isAdmin, navigate]);\n\n  // Auth flows (unchanged)\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', {\n        username,\n        password\n      });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage('Signup failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', {\n        username,\n        password\n      });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage('Login failed: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n\n  // File selection\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setRawTexts([]);\n    setDownloadReady(false);\n  };\n\n  // Utilities for client-side fallback parsing\n  function stripEmptyEdges(parts) {\n    const arr = parts.slice();\n    while (arr.length && arr === '') arr.shift();\n    while (arr.length && arr[arr.length - 1] === '') arr.pop();\n    return arr;\n  }\n  function setOf(s) {\n    return new Set(s.split(''));\n  }\n  function inferColumnsFromText(text) {\n    if (!text) return [];\n    const lines = text.split(/\\r?\\n/).map(l => l.trimRight());\n    // Try markdown-like header with pipes\n    const mdIdx = lines.findIndex(ln => ln.includes('|') && /Type/i.test(ln) && /Total Due/i.test(ln));\n    if (mdIdx !== -1) {\n      let parts = lines[mdIdx].split('|').map(s => s.trim());\n      parts = parts.filter(Boolean);\n      return parts;\n    }\n    // Try compact concatenated labels\n    const compactIdx = lines.findIndex(ln => /Type/i.test(ln) && /Billing Date/i.test(ln) && /Member/i.test(ln) && /Total Due/i.test(ln));\n    if (compactIdx !== -1) {\n      return [\"Type\", \"Billing Date Of Service\", \"Member I.D. Number\", \"Date of Birth\", \"Patient Identification\", \"Provider Name\", \"Last Paid Date\", \"Last Paid Amount\", \"Current\", \"30 Days\", \"60 Days\", \"90 Days\", \"120 Days\", \"Total Due\"];\n    }\n    // Final fallback: known Aging Report headers\n    return [\"Type\", \"Billing Date Of Service\", \"Member I.D. Number\", \"Date of Birth\", \"Patient Identification\", \"Provider Name\", \"Last Paid Date\", \"Last Paid Amount\", \"Current\", \"30 Days\", \"60 Days\", \"90 Days\", \"120 Days\", \"Total Due\"];\n  }\n  function parsePlainTextToRows(text, expectedColumns) {\n    if (!text || !(expectedColumns !== null && expectedColumns !== void 0 && expectedColumns.length)) return [];\n    const lines = text.split(/\\r?\\n/).map(l => l.trimRight());\n\n    // Try markdown-like rows first\n    const headerIdx = lines.findIndex(ln => ln.includes('|') && expectedColumns.every(c => ln.toLowerCase().includes(c.split(' ').toLowerCase())));\n    if (headerIdx !== -1) {\n      let start = headerIdx + 1;\n      // Skip separator like ---|---\n      if (lines[start] && setOf(lines[start].replace(/\\|/g, '').trim()) <= setOf('-: ')) start++;\n      const out = [];\n      for (let i = start; i < lines.length; i++) {\n        const ln = lines[i].trim();\n        if (!ln) continue;\n        if (/^Billing Type Totals:/i.test(ln) || /<GRAND TOTALS>/i.test(ln)) break;\n        if (!ln.includes('|')) break;\n        let parts = ln.split('|').map(s => s.trim());\n        parts = stripEmptyEdges(parts);\n        if (parts.length > expectedColumns.length) parts = parts.slice(0, expectedColumns.length);\n        if (parts.length < expectedColumns.length) parts = parts.concat(Array(expectedColumns.length - parts.length).fill(''));\n        const row = {};\n        expectedColumns.forEach((c, idx) => {\n          var _parts$idx;\n          return row[c] = (_parts$idx = parts[idx]) !== null && _parts$idx !== void 0 ? _parts$idx : '';\n        });\n        if (Object.values(row).some(v => v)) out.push(row);\n      }\n      return out;\n    }\n\n    // Monospace-like fallback\n    const out = [];\n    for (const raw of lines) {\n      const ln = raw.trim();\n      if (!ln || /^Billing Type Totals:/i.test(ln) || /<GRAND TOTALS>/i.test(ln)) continue;\n      if (/^[-:| ]+$/.test(ln)) continue;\n      let parts = ln.includes('|') ? ln.split('|').map(s => s.trim()) : ln.split(/\\s{2,}/).map(s => s.trim());\n      parts = parts.filter(Boolean);\n      if (parts.length < 3) continue;\n      if (parts.length > expectedColumns.length) parts = parts.slice(0, expectedColumns.length);\n      if (parts.length < expectedColumns.length) parts = parts.concat(Array(expectedColumns.length - parts.length).fill(''));\n      const row = {};\n      expectedColumns.forEach((c, idx) => {\n        var _parts$idx2;\n        return row[c] = (_parts$idx2 = parts[idx]) !== null && _parts$idx2 !== void 0 ? _parts$idx2 : '';\n      });\n      if (row['Type'] || row['Member I.D. Number'] || row['Patient Identification'] || row['Total Due']) {\n        out.push(row);\n      }\n    }\n    return out;\n  }\n\n  // Upload and parse with logs\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      var _auth$role;\n      if ((auth === null || auth === void 0 ? void 0 : (_auth$role = auth.role) === null || _auth$role === void 0 ? void 0 : _auth$role.toLowerCase()) === 'admin') {\n        try {\n          await api.post('/api/reset');\n        } catch {}\n      }\n      const outTables = [];\n      const texts = [];\n      for (const [idx, file] of files.entries()) {\n        var _res$data$metadata, _res$data$metadata2, _res$data$metadata3;\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${auth === null || auth === void 0 ? void 0 : auth.token}`\n          }\n        });\n\n        // Debug OCR payload\n        console.log('OCR response for', file.name, {\n          report: res.data.report,\n          report_text_head: (res.data.report_text || '').slice(0, 400)\n        });\n        const report = res.data.report || ((_res$data$metadata = res.data.metadata) === null || _res$data$metadata === void 0 ? void 0 : _res$data$metadata.report) || null;\n        const fallbackText = res.data.report_text || res.data.text || ((_res$data$metadata2 = res.data.metadata) === null || _res$data$metadata2 === void 0 ? void 0 : _res$data$metadata2.report_text) || ((_res$data$metadata3 = res.data.metadata) === null || _res$data$metadata3 === void 0 ? void 0 : _res$data$metadata3.full_text) || '';\n        outTables[idx] = report && report.columns && Array.isArray(report.rows) ? report : {\n          columns: [],\n          rows: [],\n          sections: []\n        };\n        texts[idx] = typeof fallbackText === 'string' ? fallbackText : '';\n      }\n\n      // Log what will be stored\n      console.log('Built table shell for', files.map(f => f.name), outTables);\n      console.log('Raw text heads', texts.map(t => (t || '').slice(0, 200)));\n      setTables(outTables);\n      setRawTexts(texts);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Excel-like grid renderer\n  const ExcelGrid = ({\n    title,\n    columns,\n    rows\n  }) => {\n    const hasHeaders = Array.isArray(columns) && columns.length > 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), !hasHeaders ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: \"No headers detected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid compact\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"excel-grid-scroll\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"excel-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"excel-th\",\n                  children: col\n                }, col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: !rows || rows.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"excel-td\",\n                  colSpan: columns.length,\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: \"No rows\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this) : rows.map((r, i) => {\n                var _r$row_id;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: columns.map(col => {\n                    var _r$col;\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"excel-td\",\n                      children: (_r$col = r === null || r === void 0 ? void 0 : r[col]) !== null && _r$col !== void 0 ? _r$col : ''\n                    }, col, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, (_r$row_id = r === null || r === void 0 ? void 0 : r.row_id) !== null && _r$row_id !== void 0 ? _r$row_id : i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Login gate\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Signup' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage('');\n        },\n        children: isSignup ? 'Already have an account? Login' : 'No account? Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: () => alert('Excel export handled on server.'),\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting table...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }, this), tables.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Aging Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), files.map((file, idx) => {\n        var _tables$idx, _tables$idx2;\n        // Preferred: backend-provided headers/rows\n        let columns = ((_tables$idx = tables[idx]) === null || _tables$idx === void 0 ? void 0 : _tables$idx.columns) || [];\n        let rows = ((_tables$idx2 = tables[idx]) === null || _tables$idx2 === void 0 ? void 0 : _tables$idx2.rows) || [];\n\n        // Fallback: infer headers from text if missing\n        if (!columns || columns.length === 0) {\n          columns = inferColumnsFromText(rawTexts[idx] || '');\n        }\n\n        // Fallback: parse rows from raw text if missing\n        if ((!rows || rows.length === 0) && columns && columns.length) {\n          const parsed = parsePlainTextToRows(rawTexts[idx] || '', columns);\n          // Debug parsing result\n          const firstLines = (rawTexts[idx] || '').split(/\\r?\\n/).slice(0, 10);\n          console.log('First raw lines for', file.name, firstLines);\n          console.log('Final inferred columns for', file.name, columns);\n          console.log('Parsed rows sample for', file.name, parsed.slice(0, 3));\n          rows = parsed;\n        } else {\n          var _rows;\n          console.log('Using backend rows for', file.name, {\n            columns,\n            rows_count: ((_rows = rows) === null || _rows === void 0 ? void 0 : _rows.length) || 0,\n            sample: (rows || []).slice(0, 3)\n          });\n        }\n        return /*#__PURE__*/_jsxDEV(ExcelGrid, {\n          title: file.name,\n          columns: columns,\n          rows: rows\n        }, `grid-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"zvRb6cMrjz4h1THRyuZCoFCjYG0=\", false, function () {\n  return [useNavigate];\n});\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","tables","setTables","rawTexts","setRawTexts","loading","setLoading","downloadReady","setDownloadReady","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","replace","handleSignup","res","post","data","loginRes","role","setItem","JSON","stringify","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","e","selected","Array","from","target","length","stripEmptyEdges","parts","arr","slice","shift","pop","setOf","s","Set","split","inferColumnsFromText","text","lines","map","l","trimRight","mdIdx","findIndex","ln","test","trim","filter","Boolean","compactIdx","parsePlainTextToRows","expectedColumns","headerIdx","every","c","toLowerCase","start","out","i","concat","fill","row","forEach","idx","_parts$idx","Object","values","some","v","push","raw","_parts$idx2","handleUploadAll","_auth$role","outTables","texts","file","entries","_res$data$metadata","_res$data$metadata2","_res$data$metadata3","formData","FormData","append","console","log","name","report","report_text_head","report_text","metadata","fallbackText","full_text","columns","isArray","rows","sections","f","t","ExcelGrid","title","hasHeaders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","col","colSpan","style","textAlign","r","_r$row_id","_r$col","row_id","type","placeholder","value","onChange","onClick","htmlFor","id","accept","multiple","_tables$idx","_tables$idx2","parsed","firstLines","_rows","rows_count","sample","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]);     // [{columns, rows, sections}]\n  const [rawTexts, setRawTexts] = useState([]); // plain text per file for fallback parse\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({ baseURL: API_BASE });\n\n  // Attach token\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  // Handle 401/403\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert('⚠️ Session expired or access denied. Please log in again.');\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) {\n      navigate('/', { replace: true });\n    }\n  }, [auth, isAdmin, navigate]);\n\n  // Auth flows (unchanged)\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', { username, password });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', { username, password });\n      setAuth({\n        token: loginRes.data.token,\n        username: loginRes.data.username,\n        role: loginRes.data.role,\n      });\n      localStorage.setItem(\n        'auth',\n        JSON.stringify({\n          token: loginRes.data.token,\n          username: loginRes.data.username,\n          role: loginRes.data.role,\n        })\n      );\n    } catch (err) {\n      setMessage('Signup failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', { username, password });\n      if (res.data.token) {\n        setAuth({\n          token: res.data.token,\n          username: res.data.username,\n          role: res.data.role,\n        });\n        localStorage.setItem(\n          'auth',\n          JSON.stringify({\n            token: res.data.token,\n            username: res.data.username,\n            role: res.data.role,\n          })\n        );\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      setMessage('Login failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  // File selection\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setRawTexts([]);\n    setDownloadReady(false);\n  };\n\n  // Utilities for client-side fallback parsing\n  function stripEmptyEdges(parts) {\n    const arr = parts.slice();\n    while (arr.length && arr === '') arr.shift();\n    while (arr.length && arr[arr.length - 1] === '') arr.pop();\n    return arr;\n  }\n  function setOf(s) {\n    return new Set(s.split(''));\n  }\n  function inferColumnsFromText(text) {\n    if (!text) return [];\n    const lines = text.split(/\\r?\\n/).map(l => l.trimRight());\n    // Try markdown-like header with pipes\n    const mdIdx = lines.findIndex(ln => ln.includes('|') && /Type/i.test(ln) && /Total Due/i.test(ln));\n    if (mdIdx !== -1) {\n      let parts = lines[mdIdx].split('|').map(s => s.trim());\n      parts = parts.filter(Boolean);\n      return parts;\n    }\n    // Try compact concatenated labels\n    const compactIdx = lines.findIndex(ln =>\n      /Type/i.test(ln) && /Billing Date/i.test(ln) && /Member/i.test(ln) && /Total Due/i.test(ln)\n    );\n    if (compactIdx !== -1) {\n      return [\n        \"Type\",\"Billing Date Of Service\",\"Member I.D. Number\",\"Date of Birth\",\"Patient Identification\",\n        \"Provider Name\",\"Last Paid Date\",\"Last Paid Amount\",\"Current\",\"30 Days\",\"60 Days\",\"90 Days\",\"120 Days\",\"Total Due\"\n      ];\n    }\n    // Final fallback: known Aging Report headers\n    return [\n      \"Type\",\"Billing Date Of Service\",\"Member I.D. Number\",\"Date of Birth\",\"Patient Identification\",\n      \"Provider Name\",\"Last Paid Date\",\"Last Paid Amount\",\"Current\",\"30 Days\",\"60 Days\",\"90 Days\",\"120 Days\",\"Total Due\"\n    ];\n  }\n  function parsePlainTextToRows(text, expectedColumns) {\n    if (!text || !expectedColumns?.length) return [];\n    const lines = text.split(/\\r?\\n/).map(l => l.trimRight());\n\n    // Try markdown-like rows first\n    const headerIdx = lines.findIndex(\n      ln => ln.includes('|') && expectedColumns.every(c => ln.toLowerCase().includes(c.split(' ').toLowerCase()))\n    );\n    if (headerIdx !== -1) {\n      let start = headerIdx + 1;\n      // Skip separator like ---|---\n      if (lines[start] && setOf(lines[start].replace(/\\|/g, '').trim()) <= setOf('-: ')) start++;\n      const out = [];\n      for (let i = start; i < lines.length; i++) {\n        const ln = lines[i].trim();\n        if (!ln) continue;\n        if (/^Billing Type Totals:/i.test(ln) || /<GRAND TOTALS>/i.test(ln)) break;\n        if (!ln.includes('|')) break;\n        let parts = ln.split('|').map(s => s.trim());\n        parts = stripEmptyEdges(parts);\n        if (parts.length > expectedColumns.length) parts = parts.slice(0, expectedColumns.length);\n        if (parts.length < expectedColumns.length) parts = parts.concat(Array(expectedColumns.length - parts.length).fill(''));\n        const row = {};\n        expectedColumns.forEach((c, idx) => row[c] = parts[idx] ?? '');\n        if (Object.values(row).some(v => v)) out.push(row);\n      }\n      return out;\n    }\n\n    // Monospace-like fallback\n    const out = [];\n    for (const raw of lines) {\n      const ln = raw.trim();\n      if (!ln || /^Billing Type Totals:/i.test(ln) || /<GRAND TOTALS>/i.test(ln)) continue;\n      if (/^[-:| ]+$/.test(ln)) continue;\n      let parts = ln.includes('|') ? ln.split('|').map(s => s.trim()) : ln.split(/\\s{2,}/).map(s => s.trim());\n      parts = parts.filter(Boolean);\n      if (parts.length < 3) continue;\n      if (parts.length > expectedColumns.length) parts = parts.slice(0, expectedColumns.length);\n      if (parts.length < expectedColumns.length) parts = parts.concat(Array(expectedColumns.length - parts.length).fill(''));\n      const row = {};\n      expectedColumns.forEach((c, idx) => row[c] = parts[idx] ?? '');\n      if (row['Type'] || row['Member I.D. Number'] || row['Patient Identification'] || row['Total Due']) {\n        out.push(row);\n      }\n    }\n    return out;\n  }\n\n  // Upload and parse with logs\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n\n    try {\n      if (auth?.role?.toLowerCase() === 'admin') {\n        try { await api.post('/api/reset'); } catch {}\n      }\n\n      const outTables = [];\n      const texts = [];\n\n      for (const [idx, file] of files.entries()) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${auth?.token}`,\n          },\n        });\n\n        // Debug OCR payload\n        console.log('OCR response for', file.name, {\n          report: res.data.report,\n          report_text_head: (res.data.report_text || '').slice(0, 400)\n        });\n\n        const report = res.data.report || res.data.metadata?.report || null;\n        const fallbackText =\n          res.data.report_text ||\n          res.data.text ||\n          res.data.metadata?.report_text ||\n          res.data.metadata?.full_text ||\n          '';\n\n        outTables[idx] = (report && report.columns && Array.isArray(report.rows))\n          ? report\n          : { columns: [], rows: [], sections: [] };\n\n        texts[idx] = typeof fallbackText === 'string' ? fallbackText : '';\n      }\n\n      // Log what will be stored\n      console.log('Built table shell for', files.map(f => f.name), outTables);\n      console.log('Raw text heads', texts.map(t => (t || '').slice(0, 200)));\n\n      setTables(outTables);\n      setRawTexts(texts);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Excel-like grid renderer\n  const ExcelGrid = ({ title, columns, rows }) => {\n    const hasHeaders = Array.isArray(columns) && columns.length > 0;\n    return (\n      <div className=\"excel-grid-wrapper\">\n        <div className=\"excel-grid-header\">\n          <h4 className=\"file-title\">{title}</h4>\n        </div>\n        {!hasHeaders ? (\n          <div className=\"no-data\">No headers detected</div>\n        ) : (\n          <div className=\"excel-grid compact\">\n            <div className=\"excel-grid-scroll\">\n              <table className=\"excel-table\">\n                <thead>\n                  <tr>\n                    {columns.map((col) => (\n                      <th key={col} className=\"excel-th\">{col}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {!rows || rows.length === 0 ? (\n                    <tr>\n                      <td className=\"excel-td\" colSpan={columns.length} style={{ textAlign: 'center' }}>\n                        No rows\n                      </td>\n                    </tr>\n                  ) : (\n                    rows.map((r, i) => (\n                      <tr key={r?.row_id ?? i}>\n                        {columns.map((col) => (\n                          <td key={col} className=\"excel-td\">{r?.[col] ?? ''}</td>\n                        ))}\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Login gate\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? 'Signup' : 'Login'}</h2>\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"auth-input\" />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"auth-input\" />\n        {isSignup ? (\n          <button className=\"auth-btn\" onClick={handleSignup}>Signup</button>\n        ) : (\n          <button className=\"auth-btn\" onClick={handleLogin}>Login</button>\n        )}\n        <button className=\"toggle-btn\" onClick={() => { setIsSignup(!isSignup); setMessage(''); }}>\n          {isSignup ? 'Already have an account? Login' : 'No account? Signup'}\n        </button>\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">\n          {isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'}\n        </h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>Upload All</button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={() => alert('Excel export handled on server.')}>\n              ⬇️ Download Excel\n            </button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, i) => (<li key={i}>📎 {file.name}</li>))}\n          </ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting table...</p>}\n\n      {/* Only the table view (metadata removed) */}\n      {tables.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Aging Report</h3>\n          {files.map((file, idx) => {\n            // Preferred: backend-provided headers/rows\n            let columns = tables[idx]?.columns || [];\n            let rows = tables[idx]?.rows || [];\n\n            // Fallback: infer headers from text if missing\n            if (!columns || columns.length === 0) {\n              columns = inferColumnsFromText(rawTexts[idx] || '');\n            }\n\n            // Fallback: parse rows from raw text if missing\n            if ((!rows || rows.length === 0) && columns && columns.length) {\n              const parsed = parsePlainTextToRows(rawTexts[idx] || '', columns);\n              // Debug parsing result\n              const firstLines = (rawTexts[idx] || '').split(/\\r?\\n/).slice(0, 10);\n              console.log('First raw lines for', file.name, firstLines);\n              console.log('Final inferred columns for', file.name, columns);\n              console.log('Parsed rows sample for', file.name, parsed.slice(0, 3));\n              rows = parsed;\n            } else {\n              console.log('Using backend rows for', file.name, {\n                columns,\n                rows_count: rows?.length || 0,\n                sample: (rows || []).slice(0, 3)\n              });\n            }\n\n            return (\n              <ExcelGrid\n                key={`grid-${idx}`}\n                title={file.name}\n                columns={columns}\n                rows={rows}\n              />\n            );\n          })}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}