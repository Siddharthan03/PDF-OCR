{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\n// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small helpers / normalizers\n   --------------------- */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderMetaValue({\n  value\n}) {\n  if (Array.isArray(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value.join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  if (typeof value === \"object\" && value !== null) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        whiteSpace: \"pre-wrap\",\n        margin: 0\n      },\n      children: JSON.stringify(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: String(value !== null && value !== void 0 ? value : \"\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n\n/* Show metadata vertically; optionally display combined counts for tables */\n_c = RenderMetaValue;\nfunction MetadataVertical({\n  meta,\n  combinedCounts = {}\n}) {\n  if (!meta || Object.keys(meta).length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty\",\n    children: \"No metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 55\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"metadata-vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Object.keys(meta).map(k => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"meta-key\",\n          children: k\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"meta-val\",\n          children: (k === \"Procedure / Billing (All Tables)\" || k === \"Procedure / Billing\") && combinedCounts.procsTotal !== undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [combinedCounts.procsTotal, \" row(s) \\u2014 shown in tables below\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this) : (k === \"Diagnosis (All Tables)\" || k === \"Diagnosis\") && combinedCounts.diagsTotal !== undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [combinedCounts.diagsTotal, \" row(s) \\u2014 shown in tables below\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(RenderMetaValue, {\n            value: meta[k]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, k, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n/* Clean up common fee OCR artifacts into reasonable currency-looking strings */\n_c2 = MetadataVertical;\nfunction _cleanFeeString(s) {\n  if (s === undefined || s === null) return \"\";\n  let raw = String(s).trim();\n  if (!raw) return \"\";\n  raw = raw.replace(/\\s+/g, \" \");\n  raw = raw.replace(/^[\\|\\[\\(]+/, \"\");\n  // patterns like \"2 00.00\" -> \"200.00\"\n  raw = raw.replace(/(\\d)\\s+(\\d{2}\\.\\d{2})$/, \"$1$2\");\n  // \"000.00\" -> \"0.00\"\n  raw = raw.replace(/^0+(\\.\\d{2})$/, \"0$1\");\n  // digits without decimal (and len>2) -> assume last two digits are decimals\n  if (/^\\d+$/.test(raw) && raw.length > 2) {\n    raw = raw.slice(0, raw.length - 2) + \".\" + raw.slice(-2);\n  }\n  // ensure two decimals\n  if (/^\\d+(\\.\\d+)?$/.test(raw) && !/\\.\\d{2}$/.test(raw)) {\n    const parts = raw.split(\".\");\n    if (parts.length === 1) raw = raw + \".00\";else if (parts[1].length === 1) raw = raw + \"0\";\n  }\n  return raw;\n}\n\n/* Try to coerce various row shapes into [code,desc,fee] */\nfunction normalizeProcRow(r) {\n  var _ref, _ref2, _ref3, _r$Code, _ref4, _ref5, _ref6, _ref7, _r$Description, _ref8, _ref9, _ref0, _ref1, _ref10, _ref11, _r$Fee;\n  if (!r) return [\"\", \"\", \"\"];\n  if (Array.isArray(r)) {\n    var _r$, _r$2, _r$3;\n    const code = (_r$ = r[0]) !== null && _r$ !== void 0 ? _r$ : \"\";\n    let desc = (_r$2 = r[1]) !== null && _r$2 !== void 0 ? _r$2 : \"\";\n    let fee = (_r$3 = r[2]) !== null && _r$3 !== void 0 ? _r$3 : \"\";\n    // if desc is obviously numeric artifact and fee is suspicious, try to swap/clean minimally\n    if (/^[\\d\\s\\|\\-.,\\/]{1,}$/.test(String(desc)) && String(fee).trim()) {\n      // keep desc (OCR may have captured fragmented strings). We'll rely on cleaning.\n    }\n    return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n  }\n  // object shape\n  const code = (_ref = (_ref2 = (_ref3 = (_r$Code = r.Code) !== null && _r$Code !== void 0 ? _r$Code : r.code) !== null && _ref3 !== void 0 ? _ref3 : r.code_value) !== null && _ref2 !== void 0 ? _ref2 : r[0]) !== null && _ref !== void 0 ? _ref : \"\";\n  let desc = (_ref4 = (_ref5 = (_ref6 = (_ref7 = (_r$Description = r.Description) !== null && _r$Description !== void 0 ? _r$Description : r.description) !== null && _ref7 !== void 0 ? _ref7 : r.Desc) !== null && _ref6 !== void 0 ? _ref6 : r.desc) !== null && _ref5 !== void 0 ? _ref5 : r[1]) !== null && _ref4 !== void 0 ? _ref4 : \"\";\n  let fee = (_ref8 = (_ref9 = (_ref0 = (_ref1 = (_ref10 = (_ref11 = (_r$Fee = r.Fee) !== null && _r$Fee !== void 0 ? _r$Fee : r.fee) !== null && _ref11 !== void 0 ? _ref11 : r.Amount) !== null && _ref10 !== void 0 ? _ref10 : r.amount) !== null && _ref1 !== void 0 ? _ref1 : r.Price) !== null && _ref0 !== void 0 ? _ref0 : r.price) !== null && _ref9 !== void 0 ? _ref9 : r[2]) !== null && _ref8 !== void 0 ? _ref8 : \"\";\n  return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n}\n\n/* Normalize diagnosis row into [type, code, diagnosis] */\nfunction normalizeDiagRow(r) {\n  var _ref12, _ref13, _r$Type, _ref14, _ref15, _r$Code2, _ref16, _ref17, _ref18, _ref19, _r$Diagnosis;\n  if (!r) return [\"ICD-10\", \"\", \"\"];\n  if (Array.isArray(r)) {\n    var _r$4, _r$5, _r$6;\n    return [(_r$4 = r[0]) !== null && _r$4 !== void 0 ? _r$4 : \"ICD-10\", (_r$5 = r[1]) !== null && _r$5 !== void 0 ? _r$5 : \"\", (_r$6 = r[2]) !== null && _r$6 !== void 0 ? _r$6 : \"\"];\n  }\n  const typ = (_ref12 = (_ref13 = (_r$Type = r.Type) !== null && _r$Type !== void 0 ? _r$Type : r.type) !== null && _ref13 !== void 0 ? _ref13 : r[0]) !== null && _ref12 !== void 0 ? _ref12 : \"ICD-10\";\n  const code = (_ref14 = (_ref15 = (_r$Code2 = r.Code) !== null && _r$Code2 !== void 0 ? _r$Code2 : r.code) !== null && _ref15 !== void 0 ? _ref15 : r[1]) !== null && _ref14 !== void 0 ? _ref14 : \"\";\n  const diag = (_ref16 = (_ref17 = (_ref18 = (_ref19 = (_r$Diagnosis = r.Diagnosis) !== null && _r$Diagnosis !== void 0 ? _r$Diagnosis : r.diagnosis) !== null && _ref19 !== void 0 ? _ref19 : r.Description) !== null && _ref18 !== void 0 ? _ref18 : r.description) !== null && _ref17 !== void 0 ? _ref17 : r[2]) !== null && _ref16 !== void 0 ? _ref16 : \"\";\n  return [typ, String(code).trim(), String(diag).trim()];\n}\n\n/* Ensure a \"tables\" object is normalized: { section: rows[] } and rows is always an array */\nfunction normalizeTables(tables) {\n  const out = {};\n  if (!tables) return out;\n  // If tables is an array -> treat as a single unnamed section\n  if (Array.isArray(tables)) {\n    out[\"Procedures\"] = tables;\n    return out;\n  }\n  // If tables is an object whose values are not arrays, try to coerce\n  Object.entries(tables).forEach(([sec, rows]) => {\n    if (rows === null || rows === undefined) {\n      out[sec] = [];\n      return;\n    }\n    if (Array.isArray(rows)) {\n      out[sec] = rows;\n      return;\n    }\n    // sometimes rows can be single object, or an object keyed by index\n    if (typeof rows === \"object\") {\n      // if it's a keyed object like {0: {Code:...}, 1: {...}} -> convert to array\n      const maybeArray = Object.keys(rows).sort((a, b) => {\n        const na = Number(a);\n        const nb = Number(b);\n        if (!isNaN(na) && !isNaN(nb)) return na - nb;\n        return a.localeCompare(b);\n      }).map(k => rows[k]);\n      out[sec] = maybeArray;\n      return;\n    }\n    // otherwise wrap single primitive into an array\n    out[sec] = [rows];\n  });\n  return out;\n}\n\n/* ---------------------\n   Procedure / Diagnosis components\n   --------------------- */\n\nfunction ProcedureTables({\n  tables\n}) {\n  const normalized = normalizeTables(tables);\n  if (!normalized || Object.keys(normalized).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No procedure / billing tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"procedures-root\",\n    children: Object.entries(normalized).map(([section, rows]) => {\n      const safeRows = Array.isArray(rows) ? rows : [];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"table-section-title\",\n          children: section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"excel-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Fee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: safeRows && safeRows.length > 0 ? safeRows.map((r, i) => {\n              const [code, desc, fee] = normalizeProcRow(r);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: desc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: fee\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 23\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 3,\n                style: {\n                  textAlign: \"center\"\n                },\n                children: \"No rows\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, section, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ProcedureTables;\nfunction DiagnosisTables({\n  tables,\n  highlightCodes = new Set()\n}) {\n  // normalize shape similar to procedures\n  const normalized = normalizeTables(tables);\n  if (!normalized || Object.keys(normalized).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No diagnosis tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagnosis-root\",\n    children: Object.entries(normalized).map(([section, rows]) => {\n      const safeRows = Array.isArray(rows) ? rows : [];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"table-section-title\",\n          children: section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"excel-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Diagnosis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: safeRows && safeRows.length > 0 ? safeRows.map((r, i) => {\n              const [type, code, desc] = normalizeDiagRow(r);\n              const isMatch = highlightCodes.has(String(code).trim());\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: isMatch ? \"highlight-row\" : \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: desc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 23\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 3,\n                style: {\n                  textAlign: \"center\"\n                },\n                children: \"No rows\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, section, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   Patient block (dedupe + combined view)\n   --------------------- */\n_c4 = DiagnosisTables;\nfunction PatientBlock({\n  patient,\n  procedureTables = {},\n  diagnosisTables = {}\n}) {\n  var _ref20, _patient$PatientName;\n  // collect ICD-like tokens from patient fields for highlighting\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach(v => {\n    try {\n      const str = String(v || \"\");\n      const m = str.match(icdRegex);\n      if (m) m.forEach(code => highlightCodes.add(code.trim()));\n    } catch (e) {\n      // ignore\n    }\n  });\n\n  // patient-specific mapped arrays (extractor may have attached these)\n  const patientProcs = Array.isArray(patient[\"Procedure / Billing (All Tables)\"]) ? patient[\"Procedure / Billing (All Tables)\"] : Array.isArray(patient[\"Procedure / Billing\"]) ? patient[\"Procedure / Billing\"] : [];\n  const patientDiags = Array.isArray(patient[\"Diagnosis (All Tables)\"]) ? patient[\"Diagnosis (All Tables)\"] : Array.isArray(patient[\"Diagnosis\"]) ? patient[\"Diagnosis\"] : [];\n\n  // combined counts\n  const totalProcsFromPatient = patientProcs.length;\n  const totalDiagsFromPatient = patientDiags.length;\n  const totalProcsFromGlobal = Object.values(normalizeTables(procedureTables)).reduce((s, a) => s + (a && a.length || 0), 0);\n  const totalDiagsFromGlobal = Object.values(normalizeTables(diagnosisTables)).reduce((s, a) => s + (a && a.length || 0), 0);\n  const procsTotal = totalProcsFromPatient + totalProcsFromGlobal;\n  const diagsTotal = totalDiagsFromPatient + totalDiagsFromGlobal;\n\n  // compose combined tables for display (patient-specific first)\n  const combinedProcedureTables = {};\n  if (patientProcs && patientProcs.length) combinedProcedureTables[\"Patient Procedures\"] = patientProcs;\n  Object.entries(normalizeTables(procedureTables)).forEach(([sec, rows]) => {\n    combinedProcedureTables[sec] = (combinedProcedureTables[sec] || []).concat(rows || []);\n  });\n  const combinedDiagnosisTables = {};\n  if (patientDiags && patientDiags.length) combinedDiagnosisTables[\"Patient Diagnosis\"] = patientDiags;\n  Object.entries(normalizeTables(diagnosisTables)).forEach(([sec, rows]) => {\n    combinedDiagnosisTables[sec] = (combinedDiagnosisTables[sec] || []).concat(rows || []);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Patient: \", (_ref20 = (_patient$PatientName = patient[\"Patient Name\"]) !== null && _patient$PatientName !== void 0 ? _patient$PatientName : patient[\"Patient\"]) !== null && _ref20 !== void 0 ? _ref20 : \"Unknown\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient-sub\",\n        children: \"Preview of patient fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-meta-grid\",\n      children: /*#__PURE__*/_jsxDEV(MetadataVertical, {\n        meta: patient,\n        combinedCounts: {\n          procsTotal,\n          diagsTotal\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-tables\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        children: \"Procedure / Billing (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProcedureTables, {\n        tables: combinedProcedureTables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        style: {\n          marginTop: 12\n        },\n        children: \"Diagnosis (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiagnosisTables, {\n        tables: combinedDiagnosisTables,\n        highlightCodes: highlightCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), highlightCodes.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matched-note\",\n        children: [\"Highlighted diagnosis codes found in patient fields: \", Array.from(highlightCodes).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   ResultBlock + main component\n   --------------------- */\n\n/* helper to dedupe/merge patient records from backend (prevents many NIL duplicates) */\n_c5 = PatientBlock;\nfunction dedupeAndMergePatients(patients) {\n  if (!Array.isArray(patients)) return [];\n  const map = new Map();\n  for (const p of patients) {\n    // build a key that groups by meaningful identity\n    const name = (p[\"Patient Name\"] || p[\"Patient\"] || \"\").toString().trim();\n    const sub = (p[\"Subscriber ID\"] || p[\"SubscriberId\"] || p[\"Subscriber\"] || \"\").toString().trim();\n    const key = name || sub || JSON.stringify(p).slice(0, 80); // fallback to short fingerprint\n\n    if (!map.has(key)) {\n      // shallow clone to avoid mutating source\n      const clone = {\n        ...p\n      };\n      // ensure arrays exist for any pre-attached rows\n      if (clone[\"Procedure / Billing (All Tables)\"] && !Array.isArray(clone[\"Procedure / Billing (All Tables)\"])) {\n        clone[\"Procedure / Billing (All Tables)\"] = [clone[\"Procedure / Billing (All Tables)\"]];\n      }\n      if (clone[\"Diagnosis (All Tables)\"] && !Array.isArray(clone[\"Diagnosis (All Tables)\"])) {\n        clone[\"Diagnosis (All Tables)\"] = [clone[\"Diagnosis (All Tables)\"]];\n      }\n      map.set(key, clone);\n    } else {\n      // merge into existing record: prefer non-empty fields, concatenate arrays\n      const existing = map.get(key);\n      for (const k of Object.keys(p)) {\n        const val = p[k];\n        if ((existing[k] === undefined || existing[k] === null || existing[k] === \"NIL\" || existing[k] === \"\") && val) {\n          existing[k] = val;\n        } else if (Array.isArray(existing[k]) && Array.isArray(val)) {\n          existing[k] = existing[k].concat(val);\n        } else if (Array.isArray(existing[k]) && val && !Array.isArray(val)) {\n          existing[k] = existing[k].concat([val]);\n        } else if (!Array.isArray(existing[k]) && Array.isArray(val)) {\n          existing[k] = (existing[k] ? [existing[k]] : []).concat(val);\n        }\n      }\n    }\n  }\n  return Array.from(map.values());\n}\nfunction ResultBlock({\n  item\n}) {\n  // canonical shapes\n  const rawPatients = Array.isArray(item.patients) ? item.patients : Array.isArray(item.patients_list) ? item.patients_list : [];\n  const procedureTables = item.procedure_tables || item.procedureTables || item.medical_billing_codes || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosis_codes || {};\n\n  // normalize legacy arrays into tables handled later\n  let procTablesMutable = normalizeTables(procedureTables);\n  let diagTablesMutable = normalizeTables(diagnosisTables);\n\n  // if backend returned flat arrays (medical_billing_codes / diagnosis_codes)\n  if (Object.keys(procTablesMutable).length === 0 && Array.isArray(item.medical_billing_codes) && item.medical_billing_codes.length) {\n    procTablesMutable = {\n      Procedures: item.medical_billing_codes\n    };\n  }\n  if (Object.keys(diagTablesMutable).length === 0 && Array.isArray(item.diagnosis_codes) && item.diagnosis_codes.length) {\n    diagTablesMutable = {\n      Diagnosis: item.diagnosis_codes\n    };\n  }\n\n  // dedupe/merge patients to reduce duplicates shown in UI\n  const patients = dedupeAndMergePatients(rawPatients);\n  const totalProcRows = Object.values(procTablesMutable).reduce((s, a) => s + (a && a.length || 0), 0);\n  const totalDiagRows = Object.values(diagTablesMutable).reduce((s, a) => s + (a && a.length || 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"file-title\",\n      children: item.file_name || item.filename || \"Uploaded file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [patients.length, \" patient(s) \\u2022 \", totalProcRows, \" procedure rows \\u2022 \", totalDiagRows, \" diagnosis rows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"patients-list\",\n      children: patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: \"No patients found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this) : patients.map((p, idx) => /*#__PURE__*/_jsxDEV(PatientBlock, {\n        patient: p,\n        procedureTables: procTablesMutable,\n        diagnosisTables: diagTablesMutable\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Raw response (debug)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          maxHeight: 260,\n          overflow: \"auto\",\n          background: \"#0b1220\",\n          color: \"#cbd5e1\",\n          padding: 8\n        },\n        children: JSON.stringify(item, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   Main component (upload / auth)\n   --------------------- */\n_c6 = ResultBlock;\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert(\"⚠️ Session expired or access denied. Please log in again.\");\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) {\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n    // eslint-disable-next-line\n  }, [auth, isAdmin, navigate]);\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", {\n        username,\n        password\n      });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      const {\n        token,\n        username: un,\n        role\n      } = loginRes.data;\n      setAuth({\n        token,\n        username: un,\n        role\n      });\n      localStorage.setItem(\"auth\", JSON.stringify({\n        token,\n        username: un,\n        role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(\"Signup failed: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      if (res.data.token) {\n        const {\n          token,\n          username: un,\n          role\n        } = res.data;\n        setAuth({\n          token,\n          username: un,\n          role\n        });\n        localStorage.setItem(\"auth\", JSON.stringify({\n          token,\n          username: un,\n          role\n        }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage(\"Login failed: \" + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {}\n      };\n    }\n\n    // canonical shape\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {}\n      };\n    }\n\n    // older shapes (flattened arrays)\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes) ? resData.medical_billing_codes.map(r => {\n          var _ref21, _r$Code3, _ref22, _r$Description2, _ref23, _r$Fee2;\n          return Array.isArray(r) ? r : [(_ref21 = (_r$Code3 = r.Code) !== null && _r$Code3 !== void 0 ? _r$Code3 : r.code) !== null && _ref21 !== void 0 ? _ref21 : \"\", (_ref22 = (_r$Description2 = r.Description) !== null && _r$Description2 !== void 0 ? _r$Description2 : r.description) !== null && _ref22 !== void 0 ? _ref22 : \"\", (_ref23 = (_r$Fee2 = r.Fee) !== null && _r$Fee2 !== void 0 ? _r$Fee2 : r.fee) !== null && _ref23 !== void 0 ? _ref23 : \"\"];\n        }) : []\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes) ? resData.diagnosis_codes.map(d => {\n          var _ref24, _d$Type, _ref25, _d$Code, _ref26, _ref27, _ref28, _d$Diagnosis;\n          return Array.isArray(d) ? d : [(_ref24 = (_d$Type = d.Type) !== null && _d$Type !== void 0 ? _d$Type : d.type) !== null && _ref24 !== void 0 ? _ref24 : \"ICD-10\", (_ref25 = (_d$Code = d.Code) !== null && _d$Code !== void 0 ? _d$Code : d.code) !== null && _ref25 !== void 0 ? _ref25 : \"\", (_ref26 = (_ref27 = (_ref28 = (_d$Diagnosis = d.Diagnosis) !== null && _d$Diagnosis !== void 0 ? _d$Diagnosis : d.diagnosis) !== null && _ref28 !== void 0 ? _ref28 : d.Description) !== null && _ref27 !== void 0 ? _ref27 : d.description) !== null && _ref26 !== void 0 ? _ref26 : \"\"];\n        }) : []\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {}\n      };\n    }\n\n    // fallback\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta\n    };\n  };\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isSignup ? \"Signup\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"glass-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"glass-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          onClick: handleSignup,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          style: {\n            marginTop: 8\n          },\n          onClick: () => {\n            setIsSignup(!isSignup);\n            setMessage(\"\");\n          },\n          children: isSignup ? \"Already have an account? Login\" : \"No account? Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        style: {\n          marginTop: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 61\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting tables...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 19\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Parsed Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this), results.map((item, idx) => /*#__PURE__*/_jsxDEV(ResultBlock, {\n        item: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 593,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"rHWvzCgLol+q0ups8j2Fj9RAf2Q=\", false, function () {\n  return [useNavigate];\n});\n_c7 = OCRUpload;\nexport default OCRUpload;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"RenderMetaValue\");\n$RefreshReg$(_c2, \"MetadataVertical\");\n$RefreshReg$(_c3, \"ProcedureTables\");\n$RefreshReg$(_c4, \"DiagnosisTables\");\n$RefreshReg$(_c5, \"PatientBlock\");\n$RefreshReg$(_c6, \"ResultBlock\");\n$RefreshReg$(_c7, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","RenderMetaValue","value","Array","isArray","children","join","fileName","_jsxFileName","lineNumber","columnNumber","style","whiteSpace","margin","JSON","stringify","String","_c","MetadataVertical","meta","combinedCounts","Object","keys","length","className","map","k","procsTotal","undefined","diagsTotal","_c2","_cleanFeeString","s","raw","trim","replace","test","slice","parts","split","normalizeProcRow","r","_ref","_ref2","_ref3","_r$Code","_ref4","_ref5","_ref6","_ref7","_r$Description","_ref8","_ref9","_ref0","_ref1","_ref10","_ref11","_r$Fee","_r$","_r$2","_r$3","code","desc","fee","Code","code_value","Description","description","Desc","Fee","Amount","amount","Price","price","normalizeDiagRow","_ref12","_ref13","_r$Type","_ref14","_ref15","_r$Code2","_ref16","_ref17","_ref18","_ref19","_r$Diagnosis","_r$4","_r$5","_r$6","typ","Type","type","diag","Diagnosis","diagnosis","normalizeTables","tables","out","entries","forEach","sec","rows","maybeArray","sort","a","b","na","Number","nb","isNaN","localeCompare","ProcedureTables","normalized","section","safeRows","i","colSpan","textAlign","_c3","DiagnosisTables","highlightCodes","Set","isMatch","has","_c4","PatientBlock","patient","procedureTables","diagnosisTables","_ref20","_patient$PatientName","icdRegex","values","v","str","m","match","add","e","patientProcs","patientDiags","totalProcsFromPatient","totalDiagsFromPatient","totalProcsFromGlobal","reduce","totalDiagsFromGlobal","combinedProcedureTables","concat","combinedDiagnosisTables","marginTop","size","from","_c5","dedupeAndMergePatients","patients","Map","p","name","toString","sub","key","clone","set","existing","get","val","ResultBlock","item","rawPatients","patients_list","procedure_tables","medical_billing_codes","diagnosis_tables","diagnosis_codes","procTablesMutable","diagTablesMutable","Procedures","totalProcRows","totalDiagRows","file_name","filename","idx","maxHeight","overflow","background","color","padding","_c6","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","results","setResults","loading","setLoading","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","handleSignup","res","post","data","loginRes","un","role","setItem","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","selected","target","buildItemFromResponse","resData","file","metadata","procedures","_ref21","_r$Code3","_ref22","_r$Description2","_ref23","_r$Fee2","diags","d","_ref24","_d$Type","_ref25","_d$Code","_ref26","_ref27","_ref28","_d$Diagnosis","handleUploadAll","formData","FormData","append","push","console","placeholder","onChange","onClick","htmlFor","id","accept","multiple","disabled","_c7","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small helpers / normalizers\n   --------------------- */\n\nfunction RenderMetaValue({ value }) {\n  if (Array.isArray(value)) {\n    return <div>{value.join(\", \")}</div>;\n  }\n  if (typeof value === \"object\" && value !== null) {\n    return <pre style={{ whiteSpace: \"pre-wrap\", margin: 0 }}>{JSON.stringify(value)}</pre>;\n  }\n  return <span>{String(value ?? \"\")}</span>;\n}\n\n/* Show metadata vertically; optionally display combined counts for tables */\nfunction MetadataVertical({ meta, combinedCounts = {} }) {\n  if (!meta || Object.keys(meta).length === 0) return <div className=\"empty\">No metadata</div>;\n  return (\n    <table className=\"metadata-vertical\">\n      <tbody>\n        {Object.keys(meta).map((k) => (\n          <tr key={k}>\n            <th className=\"meta-key\">{k}</th>\n            <td className=\"meta-val\">\n              {(k === \"Procedure / Billing (All Tables)\" || k === \"Procedure / Billing\") &&\n              combinedCounts.procsTotal !== undefined ? (\n                <span>{combinedCounts.procsTotal} row(s) — shown in tables below</span>\n              ) : (k === \"Diagnosis (All Tables)\" || k === \"Diagnosis\") &&\n                combinedCounts.diagsTotal !== undefined ? (\n                <span>{combinedCounts.diagsTotal} row(s) — shown in tables below</span>\n              ) : (\n                <RenderMetaValue value={meta[k]} />\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\n/* Clean up common fee OCR artifacts into reasonable currency-looking strings */\nfunction _cleanFeeString(s) {\n  if (s === undefined || s === null) return \"\";\n  let raw = String(s).trim();\n  if (!raw) return \"\";\n  raw = raw.replace(/\\s+/g, \" \");\n  raw = raw.replace(/^[\\|\\[\\(]+/, \"\");\n  // patterns like \"2 00.00\" -> \"200.00\"\n  raw = raw.replace(/(\\d)\\s+(\\d{2}\\.\\d{2})$/, \"$1$2\");\n  // \"000.00\" -> \"0.00\"\n  raw = raw.replace(/^0+(\\.\\d{2})$/, \"0$1\");\n  // digits without decimal (and len>2) -> assume last two digits are decimals\n  if (/^\\d+$/.test(raw) && raw.length > 2) {\n    raw = raw.slice(0, raw.length - 2) + \".\" + raw.slice(-2);\n  }\n  // ensure two decimals\n  if (/^\\d+(\\.\\d+)?$/.test(raw) && !/\\.\\d{2}$/.test(raw)) {\n    const parts = raw.split(\".\");\n    if (parts.length === 1) raw = raw + \".00\";\n    else if (parts[1].length === 1) raw = raw + \"0\";\n  }\n  return raw;\n}\n\n/* Try to coerce various row shapes into [code,desc,fee] */\nfunction normalizeProcRow(r) {\n  if (!r) return [\"\", \"\", \"\"];\n  if (Array.isArray(r)) {\n    const code = r[0] ?? \"\";\n    let desc = r[1] ?? \"\";\n    let fee = r[2] ?? \"\";\n    // if desc is obviously numeric artifact and fee is suspicious, try to swap/clean minimally\n    if (/^[\\d\\s\\|\\-.,\\/]{1,}$/.test(String(desc)) && String(fee).trim()) {\n      // keep desc (OCR may have captured fragmented strings). We'll rely on cleaning.\n    }\n    return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n  }\n  // object shape\n  const code = r.Code ?? r.code ?? r.code_value ?? r[0] ?? \"\";\n  let desc = r.Description ?? r.description ?? r.Desc ?? r.desc ?? r[1] ?? \"\";\n  let fee = r.Fee ?? r.fee ?? r.Amount ?? r.amount ?? r.Price ?? r.price ?? r[2] ?? \"\";\n  return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n}\n\n/* Normalize diagnosis row into [type, code, diagnosis] */\nfunction normalizeDiagRow(r) {\n  if (!r) return [\"ICD-10\", \"\", \"\"];\n  if (Array.isArray(r)) {\n    return [r[0] ?? \"ICD-10\", r[1] ?? \"\", r[2] ?? \"\"];\n  }\n  const typ = r.Type ?? r.type ?? r[0] ?? \"ICD-10\";\n  const code = r.Code ?? r.code ?? r[1] ?? \"\";\n  const diag = r.Diagnosis ?? r.diagnosis ?? r.Description ?? r.description ?? r[2] ?? \"\";\n  return [typ, String(code).trim(), String(diag).trim()];\n}\n\n/* Ensure a \"tables\" object is normalized: { section: rows[] } and rows is always an array */\nfunction normalizeTables(tables) {\n  const out = {};\n  if (!tables) return out;\n  // If tables is an array -> treat as a single unnamed section\n  if (Array.isArray(tables)) {\n    out[\"Procedures\"] = tables;\n    return out;\n  }\n  // If tables is an object whose values are not arrays, try to coerce\n  Object.entries(tables).forEach(([sec, rows]) => {\n    if (rows === null || rows === undefined) {\n      out[sec] = [];\n      return;\n    }\n    if (Array.isArray(rows)) {\n      out[sec] = rows;\n      return;\n    }\n    // sometimes rows can be single object, or an object keyed by index\n    if (typeof rows === \"object\") {\n      // if it's a keyed object like {0: {Code:...}, 1: {...}} -> convert to array\n      const maybeArray = Object.keys(rows)\n        .sort((a, b) => {\n          const na = Number(a);\n          const nb = Number(b);\n          if (!isNaN(na) && !isNaN(nb)) return na - nb;\n          return a.localeCompare(b);\n        })\n        .map((k) => rows[k]);\n      out[sec] = maybeArray;\n      return;\n    }\n    // otherwise wrap single primitive into an array\n    out[sec] = [rows];\n  });\n  return out;\n}\n\n/* ---------------------\n   Procedure / Diagnosis components\n   --------------------- */\n\nfunction ProcedureTables({ tables }) {\n  const normalized = normalizeTables(tables);\n  if (!normalized || Object.keys(normalized).length === 0) {\n    return <div className=\"empty\">No procedure / billing tables found.</div>;\n  }\n  return (\n    <div className=\"procedures-root\">\n      {Object.entries(normalized).map(([section, rows]) => {\n        const safeRows = Array.isArray(rows) ? rows : [];\n        return (\n          <div className=\"table-block\" key={section}>\n            <h4 className=\"table-section-title\">{section}</h4>\n            <table className=\"excel-table\">\n              <thead>\n                <tr>\n                  <th>Code</th>\n                  <th>Description</th>\n                  <th>Fee</th>\n                </tr>\n              </thead>\n              <tbody>\n                {safeRows && safeRows.length > 0 ? (\n                  safeRows.map((r, i) => {\n                    const [code, desc, fee] = normalizeProcRow(r);\n                    return (\n                      <tr key={i}>\n                        <td>{code}</td>\n                        <td>{desc}</td>\n                        <td>{fee}</td>\n                      </tr>\n                    );\n                  })\n                ) : (\n                  <tr>\n                    <td colSpan={3} style={{ textAlign: \"center\" }}>\n                      No rows\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction DiagnosisTables({ tables, highlightCodes = new Set() }) {\n  // normalize shape similar to procedures\n  const normalized = normalizeTables(tables);\n  if (!normalized || Object.keys(normalized).length === 0) {\n    return <div className=\"empty\">No diagnosis tables found.</div>;\n  }\n  return (\n    <div className=\"diagnosis-root\">\n      {Object.entries(normalized).map(([section, rows]) => {\n        const safeRows = Array.isArray(rows) ? rows : [];\n        return (\n          <div className=\"table-block\" key={section}>\n            <h4 className=\"table-section-title\">{section}</h4>\n            <table className=\"excel-table\">\n              <thead>\n                <tr>\n                  <th>Type</th>\n                  <th>Code</th>\n                  <th>Diagnosis</th>\n                </tr>\n              </thead>\n              <tbody>\n                {safeRows && safeRows.length > 0 ? (\n                  safeRows.map((r, i) => {\n                    const [type, code, desc] = normalizeDiagRow(r);\n                    const isMatch = highlightCodes.has(String(code).trim());\n                    return (\n                      <tr key={i} className={isMatch ? \"highlight-row\" : \"\"}>\n                        <td>{type}</td>\n                        <td>{code}</td>\n                        <td>{desc}</td>\n                      </tr>\n                    );\n                  })\n                ) : (\n                  <tr>\n                    <td colSpan={3} style={{ textAlign: \"center\" }}>\n                      No rows\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n/* ---------------------\n   Patient block (dedupe + combined view)\n   --------------------- */\n\nfunction PatientBlock({ patient, procedureTables = {}, diagnosisTables = {} }) {\n  // collect ICD-like tokens from patient fields for highlighting\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach((v) => {\n    try {\n      const str = String(v || \"\");\n      const m = str.match(icdRegex);\n      if (m) m.forEach((code) => highlightCodes.add(code.trim()));\n    } catch (e) {\n      // ignore\n    }\n  });\n\n  // patient-specific mapped arrays (extractor may have attached these)\n  const patientProcs = Array.isArray(patient[\"Procedure / Billing (All Tables)\"]) ? patient[\"Procedure / Billing (All Tables)\"] : Array.isArray(patient[\"Procedure / Billing\"]) ? patient[\"Procedure / Billing\"] : [];\n  const patientDiags = Array.isArray(patient[\"Diagnosis (All Tables)\"]) ? patient[\"Diagnosis (All Tables)\"] : Array.isArray(patient[\"Diagnosis\"]) ? patient[\"Diagnosis\"] : [];\n\n  // combined counts\n  const totalProcsFromPatient = patientProcs.length;\n  const totalDiagsFromPatient = patientDiags.length;\n  const totalProcsFromGlobal = Object.values(normalizeTables(procedureTables)).reduce((s, a) => s + ((a && a.length) || 0), 0);\n  const totalDiagsFromGlobal = Object.values(normalizeTables(diagnosisTables)).reduce((s, a) => s + ((a && a.length) || 0), 0);\n  const procsTotal = totalProcsFromPatient + totalProcsFromGlobal;\n  const diagsTotal = totalDiagsFromPatient + totalDiagsFromGlobal;\n\n  // compose combined tables for display (patient-specific first)\n  const combinedProcedureTables = {};\n  if (patientProcs && patientProcs.length) combinedProcedureTables[\"Patient Procedures\"] = patientProcs;\n  Object.entries(normalizeTables(procedureTables)).forEach(([sec, rows]) => {\n    combinedProcedureTables[sec] = (combinedProcedureTables[sec] || []).concat(rows || []);\n  });\n\n  const combinedDiagnosisTables = {};\n  if (patientDiags && patientDiags.length) combinedDiagnosisTables[\"Patient Diagnosis\"] = patientDiags;\n  Object.entries(normalizeTables(diagnosisTables)).forEach(([sec, rows]) => {\n    combinedDiagnosisTables[sec] = (combinedDiagnosisTables[sec] || []).concat(rows || []);\n  });\n\n  return (\n    <div className=\"patient-block\">\n      <div className=\"patient-header\">\n        <h4>Patient: {patient[\"Patient Name\"] ?? patient[\"Patient\"] ?? \"Unknown\"}</h4>\n        <div className=\"patient-sub\">Preview of patient fields</div>\n      </div>\n\n      <div className=\"patient-meta-grid\">\n        <MetadataVertical meta={patient} combinedCounts={{ procsTotal, diagsTotal }} />\n      </div>\n\n      <div className=\"patient-tables\">\n        <h5 className=\"section-title\">Procedure / Billing (All Tables)</h5>\n        <ProcedureTables tables={combinedProcedureTables} />\n\n        <h5 className=\"section-title\" style={{ marginTop: 12 }}>\n          Diagnosis (All Tables)\n        </h5>\n        <DiagnosisTables tables={combinedDiagnosisTables} highlightCodes={highlightCodes} />\n\n        {highlightCodes.size > 0 && (\n          <div className=\"matched-note\">Highlighted diagnosis codes found in patient fields: {Array.from(highlightCodes).join(\", \")}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/* ---------------------\n   ResultBlock + main component\n   --------------------- */\n\n/* helper to dedupe/merge patient records from backend (prevents many NIL duplicates) */\nfunction dedupeAndMergePatients(patients) {\n  if (!Array.isArray(patients)) return [];\n  const map = new Map();\n  for (const p of patients) {\n    // build a key that groups by meaningful identity\n    const name = (p[\"Patient Name\"] || p[\"Patient\"] || \"\").toString().trim();\n    const sub = (p[\"Subscriber ID\"] || p[\"SubscriberId\"] || p[\"Subscriber\"] || \"\").toString().trim();\n    const key = name || sub || JSON.stringify(p).slice(0, 80); // fallback to short fingerprint\n\n    if (!map.has(key)) {\n      // shallow clone to avoid mutating source\n      const clone = { ...p };\n      // ensure arrays exist for any pre-attached rows\n      if (clone[\"Procedure / Billing (All Tables)\"] && !Array.isArray(clone[\"Procedure / Billing (All Tables)\"])) {\n        clone[\"Procedure / Billing (All Tables)\"] = [clone[\"Procedure / Billing (All Tables)\"]];\n      }\n      if (clone[\"Diagnosis (All Tables)\"] && !Array.isArray(clone[\"Diagnosis (All Tables)\"])) {\n        clone[\"Diagnosis (All Tables)\"] = [clone[\"Diagnosis (All Tables)\"]];\n      }\n      map.set(key, clone);\n    } else {\n      // merge into existing record: prefer non-empty fields, concatenate arrays\n      const existing = map.get(key);\n      for (const k of Object.keys(p)) {\n        const val = p[k];\n        if ((existing[k] === undefined || existing[k] === null || existing[k] === \"NIL\" || existing[k] === \"\") && val) {\n          existing[k] = val;\n        } else if (Array.isArray(existing[k]) && Array.isArray(val)) {\n          existing[k] = existing[k].concat(val);\n        } else if (Array.isArray(existing[k]) && val && !Array.isArray(val)) {\n          existing[k] = existing[k].concat([val]);\n        } else if (!Array.isArray(existing[k]) && Array.isArray(val)) {\n          existing[k] = (existing[k] ? [existing[k]] : []).concat(val);\n        }\n      }\n    }\n  }\n  return Array.from(map.values());\n}\n\nfunction ResultBlock({ item }) {\n  // canonical shapes\n  const rawPatients = Array.isArray(item.patients) ? item.patients : Array.isArray(item.patients_list) ? item.patients_list : [];\n  const procedureTables =\n    item.procedure_tables || item.procedureTables || item.medical_billing_codes || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosis_codes || {};\n\n  // normalize legacy arrays into tables handled later\n  let procTablesMutable = normalizeTables(procedureTables);\n  let diagTablesMutable = normalizeTables(diagnosisTables);\n\n  // if backend returned flat arrays (medical_billing_codes / diagnosis_codes)\n  if (Object.keys(procTablesMutable).length === 0 && Array.isArray(item.medical_billing_codes) && item.medical_billing_codes.length) {\n    procTablesMutable = { Procedures: item.medical_billing_codes };\n  }\n  if (Object.keys(diagTablesMutable).length === 0 && Array.isArray(item.diagnosis_codes) && item.diagnosis_codes.length) {\n    diagTablesMutable = { Diagnosis: item.diagnosis_codes };\n  }\n\n  // dedupe/merge patients to reduce duplicates shown in UI\n  const patients = dedupeAndMergePatients(rawPatients);\n\n  const totalProcRows = Object.values(procTablesMutable).reduce((s, a) => s + ((a && a.length) || 0), 0);\n  const totalDiagRows = Object.values(diagTablesMutable).reduce((s, a) => s + ((a && a.length) || 0), 0);\n\n  return (\n    <div className=\"result-block\">\n      <h2 className=\"file-title\">{item.file_name || item.filename || \"Uploaded file\"}</h2>\n      <div className=\"summary\">\n        {patients.length} patient(s) • {totalProcRows} procedure rows • {totalDiagRows} diagnosis rows\n      </div>\n\n      <section className=\"patients-list\">\n        {patients.length === 0 ? (\n          <div className=\"empty\">No patients found</div>\n        ) : (\n          patients.map((p, idx) => (\n            <PatientBlock key={idx} patient={p} procedureTables={procTablesMutable} diagnosisTables={diagTablesMutable} />\n          ))\n        )}\n      </section>\n\n      <details style={{ marginTop: 12 }}>\n        <summary>Raw response (debug)</summary>\n        <pre style={{ maxHeight: 260, overflow: \"auto\", background: \"#0b1220\", color: \"#cbd5e1\", padding: 8 }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </details>\n    </div>\n  );\n}\n\n/* ---------------------\n   Main component (upload / auth)\n   --------------------- */\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert(\"⚠️ Session expired or access denied. Please log in again.\");\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) {\n      navigate(\"/\", { replace: true });\n    }\n    // eslint-disable-next-line\n  }, [auth, isAdmin, navigate]);\n\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", { username, password });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", { username, password });\n      const { token, username: un, role } = loginRes.data;\n      setAuth({ token, username: un, role });\n      localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n    } catch (err) {\n      setMessage(\"Signup failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", { username, password });\n      if (res.data.token) {\n        const { token, username: un, role } = res.data;\n        setAuth({ token, username: un, role });\n        localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      setMessage(\"Login failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {},\n      };\n    }\n\n    // canonical shape\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {},\n      };\n    }\n\n    // older shapes (flattened arrays)\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes)\n          ? resData.medical_billing_codes.map((r) => (Array.isArray(r) ? r : [r.Code ?? r.code ?? \"\", r.Description ?? r.description ?? \"\", r.Fee ?? r.fee ?? \"\"]))\n          : [],\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes)\n          ? resData.diagnosis_codes.map((d) => (Array.isArray(d) ? d : [d.Type ?? d.type ?? \"ICD-10\", d.Code ?? d.code ?? \"\", d.Diagnosis ?? d.diagnosis ?? d.Description ?? d.description ?? \"\"]))\n          : [],\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {},\n      };\n    }\n\n    // fallback\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta,\n    };\n  };\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container login-container\">\n        <div className=\"glass-card login-form\">\n          <h2>{isSignup ? \"Signup\" : \"Login\"}</h2>\n          <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"glass-input\" />\n          <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"glass-input\" />\n          {isSignup ? (\n            <button className=\"glass-btn\" onClick={handleSignup}>Signup</button>\n          ) : (\n            <button className=\"glass-btn\" onClick={handleLogin}>Login</button>\n          )}\n          <button className=\"glass-btn\" style={{ marginTop: 8 }} onClick={() => { setIsSignup(!isSignup); setMessage(\"\"); }}>\n            {isSignup ? \"Already have an account? Login\" : \"No account? Signup\"}\n          </button>\n          {message && <p className=\"message\">{message}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">{isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"}</h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\" style={{ marginTop: 8 }}>\n          <button className=\"upload-btn\" onClick={handleUploadAll} disabled={loading}>{loading ? \"Processing...\" : \"Upload All\"}</button>\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">{files.map((file, i) => <li key={i}>📎 {file.name}</li>)}</ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting tables...</p>}\n\n      {results.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Parsed Tables</h3>\n          {results.map((item, idx) => <ResultBlock key={idx} item={item} />)}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}