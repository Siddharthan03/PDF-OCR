{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [metadataOnly, setMetadataOnly] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [structuredData, setStructuredData] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setMetadataOnly([]);\n    setDownloadReady(false);\n    setStructuredData(null);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/api/ocr', formData);\n      const data = res.data.structured_data;\n      setStructuredData(data);\n      setMetadataOnly(data[\"Metadata\"] || []);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Error uploading file:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadPDF = async () => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/export-pdf', {\n        structured_data: structuredData\n      }, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'ocr_output.pdf');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      console.error('Error downloading PDF:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCC4 PDF OCR Metadata Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginLeft: '1rem'\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'orange',\n        marginTop: '1rem'\n      },\n      children: \"\\u23F3 Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), metadataOnly.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCB Extracted Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: '#f0f0f0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: metadataOnly.map((line, i) => {\n            const [key, ...rest] = line.split(\":\");\n            const value = rest.join(\":\").trim();\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: key.trim()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value || '[Not provided]'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), !loading && structuredData && metadataOnly.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '1rem',\n        color: 'gray'\n      },\n      children: \"No metadata found in this file.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadPDF,\n      style: {\n        marginTop: '2rem'\n      },\n      children: \"\\u2B07\\uFE0F Download PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"fwQmoZXq4Qmz3RZ/swwZCudpWn0=\");\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OCRUpload","_s","file","setFile","metadataOnly","setMetadataOnly","loading","setLoading","downloadReady","setDownloadReady","structuredData","setStructuredData","handleFileChange","e","target","files","handleUpload","formData","FormData","append","res","post","data","structured_data","err","console","error","handleDownloadPDF","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","marginLeft","color","marginTop","length","border","cellPadding","width","borderCollapse","backgroundColor","map","line","i","key","rest","split","value","join","trim","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst OCRUpload = () => {\n  const [file, setFile] = useState(null);\n  const [metadataOnly, setMetadataOnly] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [structuredData, setStructuredData] = useState(null);\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setMetadataOnly([]);\n    setDownloadReady(false);\n    setStructuredData(null);\n  };\n\n  const handleUpload = async () => {\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/api/ocr', formData);\n      const data = res.data.structured_data;\n      setStructuredData(data);\n      setMetadataOnly(data[\"Metadata\"] || []);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Error uploading file:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownloadPDF = async () => {\n    try {\n      const res = await axios.post(\n        'http://localhost:5000/api/export-pdf',\n        { structured_data: structuredData },\n        { responseType: 'blob' }\n      );\n\n      const url = window.URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'ocr_output.pdf');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      console.error('Error downloading PDF:', err);\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'sans-serif' }}>\n      <h2>📄 PDF OCR Metadata Extractor</h2>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload} style={{ marginLeft: '1rem' }}>\n        Upload\n      </button>\n\n      {loading && (\n        <p style={{ color: 'orange', marginTop: '1rem' }}>⏳ Processing...</p>\n      )}\n\n      {metadataOnly.length > 0 && (\n        <div style={{ marginTop: '2rem' }}>\n          <h3>📋 Extracted Metadata</h3>\n          <table border=\"1\" cellPadding=\"10\" style={{ width: '100%', borderCollapse: 'collapse' }}>\n            <thead>\n              <tr style={{ backgroundColor: '#f0f0f0' }}>\n                <th>Field</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {metadataOnly.map((line, i) => {\n                const [key, ...rest] = line.split(\":\");\n                const value = rest.join(\":\").trim();\n                return (\n                  <tr key={i}>\n                    <td><strong>{key.trim()}</strong></td>\n                    <td>{value || '[Not provided]'}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {!loading && structuredData && metadataOnly.length === 0 && (\n        <p style={{ marginTop: '1rem', color: 'gray' }}>No metadata found in this file.</p>\n      )}\n\n      {downloadReady && (\n        <button onClick={handleDownloadPDF} style={{ marginTop: '2rem' }}>\n          ⬇️ Download PDF\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}