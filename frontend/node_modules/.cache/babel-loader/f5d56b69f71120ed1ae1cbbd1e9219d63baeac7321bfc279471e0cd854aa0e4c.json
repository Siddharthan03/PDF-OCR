{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [allMetadata, setAllMetadata] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    setFiles(Array.from(e.target.files));\n    setAllMetadata([]);\n  };\n  const handleUpload = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    const results = [];\n    for (const file of files) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const res = await axios.post(\"http://localhost:5000/api/ocr\", formData);\n        const metadata = res.data.metadata || {};\n        results.push(metadata);\n\n        // Send metadata to Excel backend\n        await axios.post(\"http://localhost:5000/api/export-excel\", {\n          metadata\n        });\n      } catch (err) {\n        console.error(`Error processing ${file.name}`, err);\n      }\n    }\n    setAllMetadata(results);\n    setLoading(false);\n  };\n  const handleDownloadExcel = async () => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/export-excel\", {}, {\n        responseType: \"blob\"\n      });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"metadata_output.xlsx\");\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      console.error(\"Excel download failed\", err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCC4 Upload Multiple PDFs to Extract Metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      accept: \".pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginLeft: \"1rem\"\n      },\n      children: \"Upload All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u23F3 Extracting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), !loading && allMetadata.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83E\\uDDFE Extracted Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), allMetadata.map((metadata, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"2rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"\\uD83D\\uDCCC File \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"10\",\n          style: {\n            borderCollapse: \"collapse\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(metadata).map(([key, value], i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadExcel,\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: \"\\u2B07\\uFE0F Download All as Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"WiWzXhuXsoUfbKf16NYj0ESpKQs=\");\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OCRUpload","_s","files","setFiles","allMetadata","setAllMetadata","loading","setLoading","handleFileChange","e","Array","from","target","handleUpload","length","results","file","formData","FormData","append","res","post","metadata","data","push","err","console","error","name","handleDownloadExcel","responseType","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","message","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","accept","onChange","onClick","marginLeft","marginTop","map","index","marginBottom","border","cellPadding","borderCollapse","width","Object","entries","key","value","i","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst OCRUpload = () => {\n  const [files, setFiles] = useState([]);\n  const [allMetadata, setAllMetadata] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (e) => {\n    setFiles(Array.from(e.target.files));\n    setAllMetadata([]);\n  };\n\n  const handleUpload = async () => {\n    if (!files.length) return;\n\n    setLoading(true);\n    const results = [];\n\n    for (const file of files) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      try {\n        const res = await axios.post(\"http://localhost:5000/api/ocr\", formData);\n        const metadata = res.data.metadata || {};\n        results.push(metadata);\n\n        // Send metadata to Excel backend\n        await axios.post(\"http://localhost:5000/api/export-excel\", { metadata });\n      } catch (err) {\n        console.error(`Error processing ${file.name}`, err);\n      }\n    }\n\n    setAllMetadata(results);\n    setLoading(false);\n  };\n\n  const handleDownloadExcel = async () => {\n    try {\n      const res = await axios.post(\n        \"http://localhost:5000/api/export-excel\",\n        {},\n        { responseType: \"blob\" }\n      );\n      const url = URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"metadata_output.xlsx\");\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      console.error(\"Excel download failed\", err.message);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"Arial, sans-serif\" }}>\n      <h2>📄 Upload Multiple PDFs to Extract Metadata</h2>\n      <input type=\"file\" multiple accept=\".pdf\" onChange={handleFileChange} />\n      <button onClick={handleUpload} style={{ marginLeft: \"1rem\" }}>\n        Upload All\n      </button>\n\n      {loading && <p>⏳ Extracting...</p>}\n\n      {!loading && allMetadata.length > 0 && (\n        <div style={{ marginTop: \"2rem\" }}>\n          <h3>🧾 Extracted Metadata</h3>\n          {allMetadata.map((metadata, index) => (\n            <div key={index} style={{ marginBottom: \"2rem\" }}>\n              <h4>📌 File {index + 1}</h4>\n              <table border=\"1\" cellPadding=\"10\" style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                <thead>\n                  <tr>\n                    <th>Field</th>\n                    <th>Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(metadata).map(([key, value], i) => (\n                    <tr key={i}>\n                      <td><strong>{key}</strong></td>\n                      <td>{value}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ))}\n          <button onClick={handleDownloadExcel} style={{ marginTop: \"1rem\" }}>\n            ⬇️ Download All as Excel\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,gBAAgB,GAAIC,CAAC,IAAK;IAC9BN,QAAQ,CAACO,KAAK,CAACC,IAAI,CAACF,CAAC,CAACG,MAAM,CAACV,KAAK,CAAC,CAAC;IACpCG,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACX,KAAK,CAACY,MAAM,EAAE;IAEnBP,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMQ,OAAO,GAAG,EAAE;IAElB,KAAK,MAAMC,IAAI,IAAId,KAAK,EAAE;MACxB,MAAMe,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;MAE7B,IAAI;QACF,MAAMI,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,+BAA+B,EAAEJ,QAAQ,CAAC;QACvE,MAAMK,QAAQ,GAAGF,GAAG,CAACG,IAAI,CAACD,QAAQ,IAAI,CAAC,CAAC;QACxCP,OAAO,CAACS,IAAI,CAACF,QAAQ,CAAC;;QAEtB;QACA,MAAMzB,KAAK,CAACwB,IAAI,CAAC,wCAAwC,EAAE;UAAEC;QAAS,CAAC,CAAC;MAC1E,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,oBAAoBX,IAAI,CAACY,IAAI,EAAE,EAAEH,GAAG,CAAC;MACrD;IACF;IAEApB,cAAc,CAACU,OAAO,CAAC;IACvBR,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMsB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMT,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAC1B,wCAAwC,EACxC,CAAC,CAAC,EACF;QAAES,YAAY,EAAE;MAAO,CACzB,CAAC;MACD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACd,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC;MACrD,MAAMY,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;MACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,sBAAsB,CAAC;MACrDH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACd,CAAC,CAAC,OAAOjB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAACkB,OAAO,CAAC;IACrD;EACF,CAAC;EAED,oBACE5C,OAAA;IAAK6C,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAoB,CAAE;IAAAC,QAAA,gBAC/DhD,OAAA;MAAAgD,QAAA,EAAI;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDpD,OAAA;MAAOqD,IAAI,EAAC,MAAM;MAACC,QAAQ;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAE/C;IAAiB;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxEpD,OAAA;MAAQyD,OAAO,EAAE3C,YAAa;MAAC+B,KAAK,EAAE;QAAEa,UAAU,EAAE;MAAO,CAAE;MAAAV,QAAA,EAAC;IAE9D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAER7C,OAAO,iBAAIP,OAAA;MAAAgD,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEjC,CAAC7C,OAAO,IAAIF,WAAW,CAACU,MAAM,GAAG,CAAC,iBACjCf,OAAA;MAAK6C,KAAK,EAAE;QAAEc,SAAS,EAAE;MAAO,CAAE;MAAAX,QAAA,gBAChChD,OAAA;QAAAgD,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7B/C,WAAW,CAACuD,GAAG,CAAC,CAACrC,QAAQ,EAAEsC,KAAK,kBAC/B7D,OAAA;QAAiB6C,KAAK,EAAE;UAAEiB,YAAY,EAAE;QAAO,CAAE;QAAAd,QAAA,gBAC/ChD,OAAA;UAAAgD,QAAA,GAAI,oBAAQ,EAACa,KAAK,GAAG,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5BpD,OAAA;UAAO+D,MAAM,EAAC,GAAG;UAACC,WAAW,EAAC,IAAI;UAACnB,KAAK,EAAE;YAAEoB,cAAc,EAAE,UAAU;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAlB,QAAA,gBACtFhD,OAAA;YAAAgD,QAAA,eACEhD,OAAA;cAAAgD,QAAA,gBACEhD,OAAA;gBAAAgD,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdpD,OAAA;gBAAAgD,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRpD,OAAA;YAAAgD,QAAA,EACGmB,MAAM,CAACC,OAAO,CAAC7C,QAAQ,CAAC,CAACqC,GAAG,CAAC,CAAC,CAACS,GAAG,EAAEC,KAAK,CAAC,EAAEC,CAAC,kBAC5CvE,OAAA;cAAAgD,QAAA,gBACEhD,OAAA;gBAAAgD,QAAA,eAAIhD,OAAA;kBAAAgD,QAAA,EAASqB;gBAAG;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC/BpD,OAAA;gBAAAgD,QAAA,EAAKsB;cAAK;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAFTmB,CAAC;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGN,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAjBAS,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBV,CACN,CAAC,eACFpD,OAAA;QAAQyD,OAAO,EAAE3B,mBAAoB;QAACe,KAAK,EAAE;UAAEc,SAAS,EAAE;QAAO,CAAE;QAAAX,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClD,EAAA,CA/FID,SAAS;AAAAuE,EAAA,GAATvE,SAAS;AAiGf,eAAeA,SAAS;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}