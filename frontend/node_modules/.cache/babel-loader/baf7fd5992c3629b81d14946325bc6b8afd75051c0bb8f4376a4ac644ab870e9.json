{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\n// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small UI helpers\n   --------------------- */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MetadataVertical({\n  meta\n}) {\n  if (!meta || Object.keys(meta).length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty\",\n    children: \"No metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 55\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"metadata-vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Object.keys(meta).map(k => {\n        var _meta$k;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"meta-key\",\n            children: k\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"meta-val\",\n            children: typeof meta[k] === \"string\" && meta[k].startsWith(\"/signatures/\") ? /*#__PURE__*/_jsxDEV(\"a\", {\n              href: meta[k],\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: meta[k],\n                alt: k,\n                style: {\n                  maxHeight: 60,\n                  display: \"inline-block\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this) : String((_meta$k = meta[k]) !== null && _meta$k !== void 0 ? _meta$k : \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, k, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = MetadataVertical;\nfunction ProcedureTables({\n  tables\n}) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No procedure / billing tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"procedures-root\",\n    children: Object.entries(tables).map(([section, rows]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"table-section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"excel-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows && rows.length > 0 ? rows.map((r, i) => {\n            var _ref, _r$Code, _ref2, _r$Description, _ref3, _r$Fee;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: Array.isArray(r) ? r[0] : (_ref = (_r$Code = r.Code) !== null && _r$Code !== void 0 ? _r$Code : r.code) !== null && _ref !== void 0 ? _ref : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: Array.isArray(r) ? r[1] : (_ref2 = (_r$Description = r.Description) !== null && _r$Description !== void 0 ? _r$Description : r.description) !== null && _ref2 !== void 0 ? _ref2 : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: Array.isArray(r) ? r[2] : (_ref3 = (_r$Fee = r.Fee) !== null && _r$Fee !== void 0 ? _r$Fee : r.fee) !== null && _ref3 !== void 0 ? _ref3 : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 3,\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"No rows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ProcedureTables;\nfunction DiagnosisTables({\n  tables,\n  highlightCodes = new Set()\n}) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No diagnosis tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagnosis-root\",\n    children: Object.entries(tables).map(([section, rows]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"table-section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"excel-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Diagnosis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows && rows.length > 0 ? rows.map((r, i) => {\n            var _ref4, _r$Type, _ref5, _r$Code2, _ref6, _ref7, _ref8, _r$Diagnosis;\n            // r may be array [Type, Code, Diagnosis] or object\n            const type = Array.isArray(r) ? r[0] : (_ref4 = (_r$Type = r.Type) !== null && _r$Type !== void 0 ? _r$Type : r.type) !== null && _ref4 !== void 0 ? _ref4 : \"ICD-10\";\n            const code = Array.isArray(r) ? r[1] : (_ref5 = (_r$Code2 = r.Code) !== null && _r$Code2 !== void 0 ? _r$Code2 : r.code) !== null && _ref5 !== void 0 ? _ref5 : \"\";\n            const desc = Array.isArray(r) ? r[2] : (_ref6 = (_ref7 = (_ref8 = (_r$Diagnosis = r.Diagnosis) !== null && _r$Diagnosis !== void 0 ? _r$Diagnosis : r.diagnosis) !== null && _ref8 !== void 0 ? _ref8 : r.Description) !== null && _ref7 !== void 0 ? _ref7 : r.description) !== null && _ref6 !== void 0 ? _ref6 : \"\";\n            const isMatch = highlightCodes.has(String(code).trim());\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: isMatch ? \"highlight-row\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 3,\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"No rows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   Patient block - shows metadata + ALL tables\n   --------------------- */\n_c3 = DiagnosisTables;\nfunction PatientBlock({\n  patient,\n  procedureTables,\n  diagnosisTables\n}) {\n  var _ref9, _patient$PatientName;\n  // Collect ICD-like tokens from patient fields (to highlight matching diagnosis rows)\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach(v => {\n    try {\n      const str = String(v || \"\");\n      const m = str.match(icdRegex);\n      if (m) m.forEach(code => highlightCodes.add(code.trim()));\n    } catch (e) {\n      // ignore\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Patient: \", (_ref9 = (_patient$PatientName = patient[\"Patient Name\"]) !== null && _patient$PatientName !== void 0 ? _patient$PatientName : patient[\"Patient\"]) !== null && _ref9 !== void 0 ? _ref9 : \"Unknown\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-meta\",\n      children: /*#__PURE__*/_jsxDEV(MetadataVertical, {\n        meta: patient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-tables\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        children: \"Procedure / Billing (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProcedureTables, {\n        tables: procedureTables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        style: {\n          marginTop: 12\n        },\n        children: \"Diagnosis (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiagnosisTables, {\n        tables: diagnosisTables,\n        highlightCodes: highlightCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), highlightCodes.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matched-note\",\n        children: [\"Highlighted diagnosis codes found in patient fields: \", Array.from(highlightCodes).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   ResultBlock + main component\n   --------------------- */\n_c4 = PatientBlock;\nfunction ResultBlock({\n  item\n}) {\n  // normalize possible shapes\n  const patients = item.patients || item.patients_list || [];\n  const procedureTables = item.procedure_tables || item.procedureTables || item.procedureTables || item.procedure_tables || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosisTables || item.diagnosis_tables || {};\n\n  // Fallback: if backend returned older medical_billing_codes / diagnosis_codes arrays, wrap them into single sections\n  if (Object.keys(procedureTables).length === 0 && Array.isArray(item.medical_billing_codes) && item.medical_billing_codes.length) {\n    procedureTables[\"Procedures\"] = item.medical_billing_codes.map(r => {\n      var _ref0, _r$Code3, _ref1, _r$Description2, _ref10, _r$Fee2;\n      // normalize to arrays [code, desc, fee]\n      if (Array.isArray(r)) return r;\n      return [(_ref0 = (_r$Code3 = r.Code) !== null && _r$Code3 !== void 0 ? _r$Code3 : r.code) !== null && _ref0 !== void 0 ? _ref0 : \"\", (_ref1 = (_r$Description2 = r.Description) !== null && _r$Description2 !== void 0 ? _r$Description2 : r.description) !== null && _ref1 !== void 0 ? _ref1 : \"\", (_ref10 = (_r$Fee2 = r.Fee) !== null && _r$Fee2 !== void 0 ? _r$Fee2 : r.fee) !== null && _ref10 !== void 0 ? _ref10 : \"\"];\n    });\n  }\n  if (Object.keys(diagnosisTables).length === 0 && Array.isArray(item.diagnosis_codes) && item.diagnosis_codes.length) {\n    diagnosisTables[\"Diagnosis\"] = item.diagnosis_codes.map(d => {\n      var _ref11, _d$Type, _ref12, _d$Code, _ref13, _ref14, _ref15, _d$Diagnosis;\n      if (Array.isArray(d)) return d;\n      return [(_ref11 = (_d$Type = d.Type) !== null && _d$Type !== void 0 ? _d$Type : d.type) !== null && _ref11 !== void 0 ? _ref11 : \"ICD-10\", (_ref12 = (_d$Code = d.Code) !== null && _d$Code !== void 0 ? _d$Code : d.code) !== null && _ref12 !== void 0 ? _ref12 : \"\", (_ref13 = (_ref14 = (_ref15 = (_d$Diagnosis = d.Diagnosis) !== null && _d$Diagnosis !== void 0 ? _d$Diagnosis : d.diagnosis) !== null && _ref15 !== void 0 ? _ref15 : d.Description) !== null && _ref14 !== void 0 ? _ref14 : d.description) !== null && _ref13 !== void 0 ? _ref13 : \"\"];\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"file-title\",\n      children: item.file_name || item.filename || \"Uploaded file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [patients.length, \" patient(s) \\u2022 \", Object.values(procedureTables).reduce((s, a) => s + (a && a.length || 0), 0), \" procedure rows \\u2022\", \" \", Object.values(diagnosisTables).reduce((s, a) => s + (a && a.length || 0), 0), \" diagnosis rows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"patients-list\",\n      children: patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: \"No patients found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 34\n      }, this) : patients.map((p, idx) => /*#__PURE__*/_jsxDEV(PatientBlock, {\n        patient: p,\n        procedureTables: procedureTables,\n        diagnosisTables: diagnosisTables\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 108\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Raw response (debug)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          maxHeight: 260,\n          overflow: \"auto\",\n          background: \"#0b1220\",\n          color: \"#cbd5e1\",\n          padding: 8\n        },\n        children: JSON.stringify(item, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_c5 = ResultBlock;\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert(\"⚠️ Session expired or access denied. Please log in again.\");\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) {\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n  }, [auth, isAdmin, navigate]);\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", {\n        username,\n        password\n      });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      const {\n        token,\n        username: un,\n        role\n      } = loginRes.data;\n      setAuth({\n        token,\n        username: un,\n        role\n      });\n      localStorage.setItem(\"auth\", JSON.stringify({\n        token,\n        username: un,\n        role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(\"Signup failed: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      if (res.data.token) {\n        const {\n          token,\n          username: un,\n          role\n        } = res.data;\n        setAuth({\n          token,\n          username: un,\n          role\n        });\n        localStorage.setItem(\"auth\", JSON.stringify({\n          token,\n          username: un,\n          role\n        }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage(\"Login failed: \" + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {}\n      };\n    }\n\n    // canonical shape: patients, procedure_tables, diagnosis_tables\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {}\n      };\n    }\n\n    // older shapes\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes) ? resData.medical_billing_codes.map(r => {\n          var _ref16, _r$Code4, _ref17, _r$Description3, _ref18, _r$Fee3;\n          return Array.isArray(r) ? r : [(_ref16 = (_r$Code4 = r.Code) !== null && _r$Code4 !== void 0 ? _r$Code4 : r.code) !== null && _ref16 !== void 0 ? _ref16 : \"\", (_ref17 = (_r$Description3 = r.Description) !== null && _r$Description3 !== void 0 ? _r$Description3 : r.description) !== null && _ref17 !== void 0 ? _ref17 : \"\", (_ref18 = (_r$Fee3 = r.Fee) !== null && _r$Fee3 !== void 0 ? _r$Fee3 : r.fee) !== null && _ref18 !== void 0 ? _ref18 : \"\"];\n        }) : []\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes) ? resData.diagnosis_codes.map(d => {\n          var _ref19, _d$Type2, _ref20, _d$Code2, _ref21, _ref22, _ref23, _d$Diagnosis2;\n          return Array.isArray(d) ? d : [(_ref19 = (_d$Type2 = d.Type) !== null && _d$Type2 !== void 0 ? _d$Type2 : d.type) !== null && _ref19 !== void 0 ? _ref19 : \"ICD-10\", (_ref20 = (_d$Code2 = d.Code) !== null && _d$Code2 !== void 0 ? _d$Code2 : d.code) !== null && _ref20 !== void 0 ? _ref20 : \"\", (_ref21 = (_ref22 = (_ref23 = (_d$Diagnosis2 = d.Diagnosis) !== null && _d$Diagnosis2 !== void 0 ? _d$Diagnosis2 : d.diagnosis) !== null && _ref23 !== void 0 ? _ref23 : d.Description) !== null && _ref22 !== void 0 ? _ref22 : d.description) !== null && _ref21 !== void 0 ? _ref21 : \"\"];\n        }) : []\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {}\n      };\n    }\n\n    // fallback: if metadata present\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta\n    };\n  };\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? \"Signup\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage(\"\");\n        },\n        children: isSignup ? \"Already have an account? Login\" : \"No account? Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 61\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting tables...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 19\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Parsed Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), results.map((item, idx) => /*#__PURE__*/_jsxDEV(ResultBlock, {\n        item: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"rHWvzCgLol+q0ups8j2Fj9RAf2Q=\", false, function () {\n  return [useNavigate];\n});\n_c6 = OCRUpload;\nexport default OCRUpload;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"MetadataVertical\");\n$RefreshReg$(_c2, \"ProcedureTables\");\n$RefreshReg$(_c3, \"DiagnosisTables\");\n$RefreshReg$(_c4, \"PatientBlock\");\n$RefreshReg$(_c5, \"ResultBlock\");\n$RefreshReg$(_c6, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","MetadataVertical","meta","Object","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","k","_meta$k","startsWith","href","target","rel","src","alt","style","maxHeight","display","String","_c","ProcedureTables","tables","entries","section","rows","r","i","_ref","_r$Code","_ref2","_r$Description","_ref3","_r$Fee","Array","isArray","Code","code","Description","description","Fee","fee","colSpan","textAlign","_c2","DiagnosisTables","highlightCodes","Set","_ref4","_r$Type","_ref5","_r$Code2","_ref6","_ref7","_ref8","_r$Diagnosis","type","Type","desc","Diagnosis","diagnosis","isMatch","has","trim","_c3","PatientBlock","patient","procedureTables","diagnosisTables","_ref9","_patient$PatientName","icdRegex","values","forEach","v","str","m","match","add","e","marginTop","size","from","join","_c4","ResultBlock","item","patients","patients_list","procedure_tables","diagnosis_tables","medical_billing_codes","_ref0","_r$Code3","_ref1","_r$Description2","_ref10","_r$Fee2","diagnosis_codes","d","_ref11","_d$Type","_ref12","_d$Code","_ref13","_ref14","_ref15","_d$Diagnosis","file_name","filename","reduce","s","a","p","idx","overflow","background","color","padding","JSON","stringify","_c5","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","results","setResults","loading","setLoading","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","replace","handleSignup","res","post","data","loginRes","un","role","setItem","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","selected","buildItemFromResponse","resData","file","name","metadata","procedures","Procedures","_ref16","_r$Code4","_ref17","_r$Description3","_ref18","_r$Fee3","diags","_ref19","_d$Type2","_ref20","_d$Code2","_ref21","_ref22","_ref23","_d$Diagnosis2","handleUploadAll","out","formData","FormData","append","push","console","placeholder","value","onChange","onClick","htmlFor","id","accept","multiple","disabled","_c6","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small UI helpers\n   --------------------- */\n\nfunction MetadataVertical({ meta }) {\n  if (!meta || Object.keys(meta).length === 0) return <div className=\"empty\">No metadata</div>;\n  return (\n    <table className=\"metadata-vertical\">\n      <tbody>\n        {Object.keys(meta).map((k) => (\n          <tr key={k}>\n            <th className=\"meta-key\">{k}</th>\n            <td className=\"meta-val\">\n              {/* Show signature images inline as thumbnails if value looks like /signatures/... */}\n              {typeof meta[k] === \"string\" && meta[k].startsWith(\"/signatures/\") ? (\n                <a href={meta[k]} target=\"_blank\" rel=\"noreferrer\">\n                  <img src={meta[k]} alt={k} style={{ maxHeight: 60, display: \"inline-block\" }} />\n                </a>\n              ) : (\n                String(meta[k] ?? \"\")\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ProcedureTables({ tables }) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return <div className=\"empty\">No procedure / billing tables found.</div>;\n  }\n  return (\n    <div className=\"procedures-root\">\n      {Object.entries(tables).map(([section, rows]) => (\n        <div className=\"table-block\" key={section}>\n          <h4 className=\"table-section-title\">{section}</h4>\n          <table className=\"excel-table\">\n            <thead>\n              <tr>\n                <th>Code</th>\n                <th>Description</th>\n                <th>Fee</th>\n              </tr>\n            </thead>\n            <tbody>\n              {rows && rows.length > 0 ? (\n                rows.map((r, i) => (\n                  <tr key={i}>\n                    <td>{Array.isArray(r) ? r[0] : r.Code ?? r.code ?? \"\"}</td>\n                    <td>{Array.isArray(r) ? r[1] : r.Description ?? r.description ?? \"\"}</td>\n                    <td>{Array.isArray(r) ? r[2] : r.Fee ?? r.fee ?? \"\"}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan={3} style={{ textAlign: \"center\" }}>\n                    No rows\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction DiagnosisTables({ tables, highlightCodes = new Set() }) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return <div className=\"empty\">No diagnosis tables found.</div>;\n  }\n  return (\n    <div className=\"diagnosis-root\">\n      {Object.entries(tables).map(([section, rows]) => (\n        <div className=\"table-block\" key={section}>\n          <h4 className=\"table-section-title\">{section}</h4>\n          <table className=\"excel-table\">\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Code</th>\n                <th>Diagnosis</th>\n              </tr>\n            </thead>\n            <tbody>\n              {rows && rows.length > 0 ? (\n                rows.map((r, i) => {\n                  // r may be array [Type, Code, Diagnosis] or object\n                  const type = Array.isArray(r) ? r[0] : r.Type ?? r.type ?? \"ICD-10\";\n                  const code = Array.isArray(r) ? r[1] : r.Code ?? r.code ?? \"\";\n                  const desc =\n                    Array.isArray(r) ? r[2] : r.Diagnosis ?? r.diagnosis ?? r.Description ?? r.description ?? \"\";\n                  const isMatch = highlightCodes.has(String(code).trim());\n                  return (\n                    <tr key={i} className={isMatch ? \"highlight-row\" : \"\"}>\n                      <td>{type}</td>\n                      <td>{code}</td>\n                      <td>{desc}</td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td colSpan={3} style={{ textAlign: \"center\" }}>\n                    No rows\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n/* ---------------------\n   Patient block - shows metadata + ALL tables\n   --------------------- */\n\nfunction PatientBlock({ patient, procedureTables, diagnosisTables }) {\n  // Collect ICD-like tokens from patient fields (to highlight matching diagnosis rows)\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach((v) => {\n    try {\n      const str = String(v || \"\");\n      const m = str.match(icdRegex);\n      if (m) m.forEach((code) => highlightCodes.add(code.trim()));\n    } catch (e) {\n      // ignore\n    }\n  });\n\n  return (\n    <div className=\"patient-block\">\n      <div className=\"patient-header\">\n        <h4>Patient: {patient[\"Patient Name\"] ?? patient[\"Patient\"] ?? \"Unknown\"}</h4>\n      </div>\n\n      <div className=\"patient-meta\">\n        <MetadataVertical meta={patient} />\n      </div>\n\n      <div className=\"patient-tables\">\n        <h5 className=\"section-title\">Procedure / Billing (All Tables)</h5>\n        <ProcedureTables tables={procedureTables} />\n\n        <h5 className=\"section-title\" style={{ marginTop: 12 }}>\n          Diagnosis (All Tables)\n        </h5>\n        <DiagnosisTables tables={diagnosisTables} highlightCodes={highlightCodes} />\n\n        {highlightCodes.size > 0 && (\n          <div className=\"matched-note\">Highlighted diagnosis codes found in patient fields: {Array.from(highlightCodes).join(\", \")}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/* ---------------------\n   ResultBlock + main component\n   --------------------- */\n\nfunction ResultBlock({ item }) {\n  // normalize possible shapes\n  const patients = item.patients || item.patients_list || [];\n  const procedureTables =\n    item.procedure_tables || item.procedureTables || item.procedureTables || item.procedure_tables || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosisTables || item.diagnosis_tables || {};\n\n  // Fallback: if backend returned older medical_billing_codes / diagnosis_codes arrays, wrap them into single sections\n  if (Object.keys(procedureTables).length === 0 && Array.isArray(item.medical_billing_codes) && item.medical_billing_codes.length) {\n    procedureTables[\"Procedures\"] = item.medical_billing_codes.map((r) => {\n      // normalize to arrays [code, desc, fee]\n      if (Array.isArray(r)) return r;\n      return [r.Code ?? r.code ?? \"\", r.Description ?? r.description ?? \"\", r.Fee ?? r.fee ?? \"\"];\n    });\n  }\n  if (Object.keys(diagnosisTables).length === 0 && Array.isArray(item.diagnosis_codes) && item.diagnosis_codes.length) {\n    diagnosisTables[\"Diagnosis\"] = item.diagnosis_codes.map((d) => {\n      if (Array.isArray(d)) return d;\n      return [d.Type ?? d.type ?? \"ICD-10\", d.Code ?? d.code ?? \"\", d.Diagnosis ?? d.diagnosis ?? d.Description ?? d.description ?? \"\"];\n    });\n  }\n\n  return (\n    <div className=\"result-block\">\n      <h2 className=\"file-title\">{item.file_name || item.filename || \"Uploaded file\"}</h2>\n      <div className=\"summary\">\n        {patients.length} patient(s) • {Object.values(procedureTables).reduce((s, a) => s + ((a && a.length) || 0), 0)} procedure rows •{\" \"}\n        {Object.values(diagnosisTables).reduce((s, a) => s + ((a && a.length) || 0), 0)} diagnosis rows\n      </div>\n\n      <section className=\"patients-list\">\n        {patients.length === 0 ? <div className=\"empty\">No patients found</div> : patients.map((p, idx) => <PatientBlock key={idx} patient={p} procedureTables={procedureTables} diagnosisTables={diagnosisTables} />)}\n      </section>\n\n      <details style={{ marginTop: 12 }}>\n        <summary>Raw response (debug)</summary>\n        <pre style={{ maxHeight: 260, overflow: \"auto\", background: \"#0b1220\", color: \"#cbd5e1\", padding: 8 }}>{JSON.stringify(item, null, 2)}</pre>\n      </details>\n    </div>\n  );\n}\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert(\"⚠️ Session expired or access denied. Please log in again.\");\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) {\n      navigate(\"/\", { replace: true });\n    }\n  }, [auth, isAdmin, navigate]);\n\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", { username, password });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", { username, password });\n      const { token, username: un, role } = loginRes.data;\n      setAuth({ token, username: un, role });\n      localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n    } catch (err) {\n      setMessage(\"Signup failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", { username, password });\n      if (res.data.token) {\n        const { token, username: un, role } = res.data;\n        setAuth({ token, username: un, role });\n        localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      setMessage(\"Login failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {},\n      };\n    }\n\n    // canonical shape: patients, procedure_tables, diagnosis_tables\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {},\n      };\n    }\n\n    // older shapes\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes)\n          ? resData.medical_billing_codes.map((r) => (Array.isArray(r) ? r : [r.Code ?? r.code ?? \"\", r.Description ?? r.description ?? \"\", r.Fee ?? r.fee ?? \"\"]))\n          : [],\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes)\n          ? resData.diagnosis_codes.map((d) => (Array.isArray(d) ? d : [d.Type ?? d.type ?? \"ICD-10\", d.Code ?? d.code ?? \"\", d.Diagnosis ?? d.diagnosis ?? d.Description ?? d.description ?? \"\"]))\n          : [],\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {},\n      };\n    }\n\n    // fallback: if metadata present\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta,\n    };\n  };\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? \"Signup\" : \"Login\"}</h2>\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"auth-input\" />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"auth-input\" />\n        {isSignup ? <button className=\"auth-btn\" onClick={handleSignup}>Signup</button> : <button className=\"auth-btn\" onClick={handleLogin}>Login</button>}\n        <button className=\"toggle-btn\" onClick={() => { setIsSignup(!isSignup); setMessage(\"\"); }}>{isSignup ? \"Already have an account? Login\" : \"No account? Signup\"}</button>\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">{isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"}</h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll} disabled={loading}>{loading ? \"Processing...\" : \"Upload All\"}</button>\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">{files.map((file, i) => <li key={i}>📎 {file.name}</li>)}</ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting tables...</p>}\n\n      {results.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Parsed Tables</h3>\n          {results.map((item, idx) => <ResultBlock key={idx} item={item} />)}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;;AAEnB;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,gBAAgBA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAClC,IAAI,CAACA,IAAI,IAAIC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE,oBAAOL,OAAA;IAAKM,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC5F,oBACEX,OAAA;IAAOM,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAClCP,OAAA;MAAAO,QAAA,EACGJ,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACU,GAAG,CAAEC,CAAC;QAAA,IAAAC,OAAA;QAAA,oBACvBd,OAAA;UAAAO,QAAA,gBACEP,OAAA;YAAIM,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAEM;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjCX,OAAA;YAAIM,SAAS,EAAC,UAAU;YAAAC,QAAA,EAErB,OAAOL,IAAI,CAACW,CAAC,CAAC,KAAK,QAAQ,IAAIX,IAAI,CAACW,CAAC,CAAC,CAACE,UAAU,CAAC,cAAc,CAAC,gBAChEf,OAAA;cAAGgB,IAAI,EAAEd,IAAI,CAACW,CAAC,CAAE;cAACI,MAAM,EAAC,QAAQ;cAACC,GAAG,EAAC,YAAY;cAAAX,QAAA,eAChDP,OAAA;gBAAKmB,GAAG,EAAEjB,IAAI,CAACW,CAAC,CAAE;gBAACO,GAAG,EAAEP,CAAE;gBAACQ,KAAK,EAAE;kBAAEC,SAAS,EAAE,EAAE;kBAAEC,OAAO,EAAE;gBAAe;cAAE;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/E,CAAC,GAEJa,MAAM,EAAAV,OAAA,GAACZ,IAAI,CAACW,CAAC,CAAC,cAAAC,OAAA,cAAAA,OAAA,GAAI,EAAE;UACrB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAXEE,CAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYN,CAAC;MAAA,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACc,EAAA,GAvBQxB,gBAAgB;AAyBzB,SAASyB,eAAeA,CAAC;EAAEC;AAAO,CAAC,EAAE;EACnC,IAAI,CAACA,MAAM,IAAIxB,MAAM,CAACC,IAAI,CAACuB,MAAM,CAAC,CAACtB,MAAM,KAAK,CAAC,EAAE;IAC/C,oBAAOL,OAAA;MAAKM,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1E;EACA,oBACEX,OAAA;IAAKM,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BJ,MAAM,CAACyB,OAAO,CAACD,MAAM,CAAC,CAACf,GAAG,CAAC,CAAC,CAACiB,OAAO,EAAEC,IAAI,CAAC,kBAC1C9B,OAAA;MAAKM,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BP,OAAA;QAAIM,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEsB;MAAO;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClDX,OAAA;QAAOM,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC5BP,OAAA;UAAAO,QAAA,eACEP,OAAA;YAAAO,QAAA,gBACEP,OAAA;cAAAO,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbX,OAAA;cAAAO,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBX,OAAA;cAAAO,QAAA,EAAI;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRX,OAAA;UAAAO,QAAA,EACGuB,IAAI,IAAIA,IAAI,CAACzB,MAAM,GAAG,CAAC,GACtByB,IAAI,CAAClB,GAAG,CAAC,CAACmB,CAAC,EAAEC,CAAC;YAAA,IAAAC,IAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,cAAA,EAAAC,KAAA,EAAAC,MAAA;YAAA,oBACZtC,OAAA;cAAAO,QAAA,gBACEP,OAAA;gBAAAO,QAAA,EAAKgC,KAAK,CAACC,OAAO,CAACT,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAAE,IAAA,IAAAC,OAAA,GAAGH,CAAC,CAACU,IAAI,cAAAP,OAAA,cAAAA,OAAA,GAAIH,CAAC,CAACW,IAAI,cAAAT,IAAA,cAAAA,IAAA,GAAI;cAAE;gBAAAzB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3DX,OAAA;gBAAAO,QAAA,EAAKgC,KAAK,CAACC,OAAO,CAACT,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAAI,KAAA,IAAAC,cAAA,GAAGL,CAAC,CAACY,WAAW,cAAAP,cAAA,cAAAA,cAAA,GAAIL,CAAC,CAACa,WAAW,cAAAT,KAAA,cAAAA,KAAA,GAAI;cAAE;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzEX,OAAA;gBAAAO,QAAA,EAAKgC,KAAK,CAACC,OAAO,CAACT,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAAM,KAAA,IAAAC,MAAA,GAAGP,CAAC,CAACc,GAAG,cAAAP,MAAA,cAAAA,MAAA,GAAIP,CAAC,CAACe,GAAG,cAAAT,KAAA,cAAAA,KAAA,GAAI;cAAE;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAHlDqB,CAAC;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIN,CAAC;UAAA,CACN,CAAC,gBAEFX,OAAA;YAAAO,QAAA,eACEP,OAAA;cAAI+C,OAAO,EAAE,CAAE;cAAC1B,KAAK,EAAE;gBAAE2B,SAAS,EAAE;cAAS,CAAE;cAAAzC,QAAA,EAAC;YAEhD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QACL;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,GA3BwBkB,OAAO;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA4BpC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACsC,GAAA,GAvCQvB,eAAe;AAyCxB,SAASwB,eAAeA,CAAC;EAAEvB,MAAM;EAAEwB,cAAc,GAAG,IAAIC,GAAG,CAAC;AAAE,CAAC,EAAE;EAC/D,IAAI,CAACzB,MAAM,IAAIxB,MAAM,CAACC,IAAI,CAACuB,MAAM,CAAC,CAACtB,MAAM,KAAK,CAAC,EAAE;IAC/C,oBAAOL,OAAA;MAAKM,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChE;EACA,oBACEX,OAAA;IAAKM,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BJ,MAAM,CAACyB,OAAO,CAACD,MAAM,CAAC,CAACf,GAAG,CAAC,CAAC,CAACiB,OAAO,EAAEC,IAAI,CAAC,kBAC1C9B,OAAA;MAAKM,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BP,OAAA;QAAIM,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEsB;MAAO;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClDX,OAAA;QAAOM,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC5BP,OAAA;UAAAO,QAAA,eACEP,OAAA;YAAAO,QAAA,gBACEP,OAAA;cAAAO,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbX,OAAA;cAAAO,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbX,OAAA;cAAAO,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRX,OAAA;UAAAO,QAAA,EACGuB,IAAI,IAAIA,IAAI,CAACzB,MAAM,GAAG,CAAC,GACtByB,IAAI,CAAClB,GAAG,CAAC,CAACmB,CAAC,EAAEC,CAAC,KAAK;YAAA,IAAAqB,KAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,YAAA;YACjB;YACA,MAAMC,IAAI,GAAGtB,KAAK,CAACC,OAAO,CAACT,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAAsB,KAAA,IAAAC,OAAA,GAAGvB,CAAC,CAAC+B,IAAI,cAAAR,OAAA,cAAAA,OAAA,GAAIvB,CAAC,CAAC8B,IAAI,cAAAR,KAAA,cAAAA,KAAA,GAAI,QAAQ;YACnE,MAAMX,IAAI,GAAGH,KAAK,CAACC,OAAO,CAACT,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAAwB,KAAA,IAAAC,QAAA,GAAGzB,CAAC,CAACU,IAAI,cAAAe,QAAA,cAAAA,QAAA,GAAIzB,CAAC,CAACW,IAAI,cAAAa,KAAA,cAAAA,KAAA,GAAI,EAAE;YAC7D,MAAMQ,IAAI,GACRxB,KAAK,CAACC,OAAO,CAACT,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAA0B,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,YAAA,GAAG7B,CAAC,CAACiC,SAAS,cAAAJ,YAAA,cAAAA,YAAA,GAAI7B,CAAC,CAACkC,SAAS,cAAAN,KAAA,cAAAA,KAAA,GAAI5B,CAAC,CAACY,WAAW,cAAAe,KAAA,cAAAA,KAAA,GAAI3B,CAAC,CAACa,WAAW,cAAAa,KAAA,cAAAA,KAAA,GAAI,EAAE;YAC9F,MAAMS,OAAO,GAAGf,cAAc,CAACgB,GAAG,CAAC3C,MAAM,CAACkB,IAAI,CAAC,CAAC0B,IAAI,CAAC,CAAC,CAAC;YACvD,oBACEpE,OAAA;cAAYM,SAAS,EAAE4D,OAAO,GAAG,eAAe,GAAG,EAAG;cAAA3D,QAAA,gBACpDP,OAAA;gBAAAO,QAAA,EAAKsD;cAAI;gBAAArD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACfX,OAAA;gBAAAO,QAAA,EAAKmC;cAAI;gBAAAlC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACfX,OAAA;gBAAAO,QAAA,EAAKwD;cAAI;gBAAAvD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAHRqB,CAAC;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIN,CAAC;UAET,CAAC,CAAC,gBAEFX,OAAA;YAAAO,QAAA,eACEP,OAAA;cAAI+C,OAAO,EAAE,CAAE;cAAC1B,KAAK,EAAE;gBAAE2B,SAAS,EAAE;cAAS,CAAE;cAAAzC,QAAA,EAAC;YAEhD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QACL;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,GAnCwBkB,OAAO;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoCpC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;;AAEA;AACA;AACA;AAFA0D,GAAA,GAjDSnB,eAAe;AAqDxB,SAASoB,YAAYA,CAAC;EAAEC,OAAO;EAAEC,eAAe;EAAEC;AAAgB,CAAC,EAAE;EAAA,IAAAC,KAAA,EAAAC,oBAAA;EACnE;EACA,MAAMC,QAAQ,GAAG,sCAAsC;EACvD,MAAMzB,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;EAChCjD,MAAM,CAAC0E,MAAM,CAACN,OAAO,IAAI,CAAC,CAAC,CAAC,CAACO,OAAO,CAAEC,CAAC,IAAK;IAC1C,IAAI;MACF,MAAMC,GAAG,GAAGxD,MAAM,CAACuD,CAAC,IAAI,EAAE,CAAC;MAC3B,MAAME,CAAC,GAAGD,GAAG,CAACE,KAAK,CAACN,QAAQ,CAAC;MAC7B,IAAIK,CAAC,EAAEA,CAAC,CAACH,OAAO,CAAEpC,IAAI,IAAKS,cAAc,CAACgC,GAAG,CAACzC,IAAI,CAAC0B,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAOgB,CAAC,EAAE;MACV;IAAA;EAEJ,CAAC,CAAC;EAEF,oBACEpF,OAAA;IAAKM,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BP,OAAA;MAAKM,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BP,OAAA;QAAAO,QAAA,GAAI,WAAS,GAAAmE,KAAA,IAAAC,oBAAA,GAACJ,OAAO,CAAC,cAAc,CAAC,cAAAI,oBAAA,cAAAA,oBAAA,GAAIJ,OAAO,CAAC,SAAS,CAAC,cAAAG,KAAA,cAAAA,KAAA,GAAI,SAAS;MAAA;QAAAlE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eAENX,OAAA;MAAKM,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BP,OAAA,CAACC,gBAAgB;QAACC,IAAI,EAAEqE;MAAQ;QAAA/D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAENX,OAAA;MAAKM,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BP,OAAA;QAAIM,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEX,OAAA,CAAC0B,eAAe;QAACC,MAAM,EAAE6C;MAAgB;QAAAhE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE5CX,OAAA;QAAIM,SAAS,EAAC,eAAe;QAACe,KAAK,EAAE;UAAEgE,SAAS,EAAE;QAAG,CAAE;QAAA9E,QAAA,EAAC;MAExD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLX,OAAA,CAACkD,eAAe;QAACvB,MAAM,EAAE8C,eAAgB;QAACtB,cAAc,EAAEA;MAAe;QAAA3C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE3EwC,cAAc,CAACmC,IAAI,GAAG,CAAC,iBACtBtF,OAAA;QAAKM,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,uDAAqD,EAACgC,KAAK,CAACgD,IAAI,CAACpC,cAAc,CAAC,CAACqC,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAhF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAChI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AACA;AACA;AAFA8E,GAAA,GAzCSnB,YAAY;AA6CrB,SAASoB,WAAWA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC7B;EACA,MAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACE,aAAa,IAAI,EAAE;EAC1D,MAAMrB,eAAe,GACnBmB,IAAI,CAACG,gBAAgB,IAAIH,IAAI,CAACnB,eAAe,IAAImB,IAAI,CAACnB,eAAe,IAAImB,IAAI,CAACG,gBAAgB,IAAI,CAAC,CAAC;EACtG,MAAMrB,eAAe,GAAGkB,IAAI,CAACI,gBAAgB,IAAIJ,IAAI,CAAClB,eAAe,IAAIkB,IAAI,CAAClB,eAAe,IAAIkB,IAAI,CAACI,gBAAgB,IAAI,CAAC,CAAC;;EAE5H;EACA,IAAI5F,MAAM,CAACC,IAAI,CAACoE,eAAe,CAAC,CAACnE,MAAM,KAAK,CAAC,IAAIkC,KAAK,CAACC,OAAO,CAACmD,IAAI,CAACK,qBAAqB,CAAC,IAAIL,IAAI,CAACK,qBAAqB,CAAC3F,MAAM,EAAE;IAC/HmE,eAAe,CAAC,YAAY,CAAC,GAAGmB,IAAI,CAACK,qBAAqB,CAACpF,GAAG,CAAEmB,CAAC,IAAK;MAAA,IAAAkE,KAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,eAAA,EAAAC,MAAA,EAAAC,OAAA;MACpE;MACA,IAAI/D,KAAK,CAACC,OAAO,CAACT,CAAC,CAAC,EAAE,OAAOA,CAAC;MAC9B,OAAO,EAAAkE,KAAA,IAAAC,QAAA,GAACnE,CAAC,CAACU,IAAI,cAAAyD,QAAA,cAAAA,QAAA,GAAInE,CAAC,CAACW,IAAI,cAAAuD,KAAA,cAAAA,KAAA,GAAI,EAAE,GAAAE,KAAA,IAAAC,eAAA,GAAErE,CAAC,CAACY,WAAW,cAAAyD,eAAA,cAAAA,eAAA,GAAIrE,CAAC,CAACa,WAAW,cAAAuD,KAAA,cAAAA,KAAA,GAAI,EAAE,GAAAE,MAAA,IAAAC,OAAA,GAAEvE,CAAC,CAACc,GAAG,cAAAyD,OAAA,cAAAA,OAAA,GAAIvE,CAAC,CAACe,GAAG,cAAAuD,MAAA,cAAAA,MAAA,GAAI,EAAE,CAAC;IAC7F,CAAC,CAAC;EACJ;EACA,IAAIlG,MAAM,CAACC,IAAI,CAACqE,eAAe,CAAC,CAACpE,MAAM,KAAK,CAAC,IAAIkC,KAAK,CAACC,OAAO,CAACmD,IAAI,CAACY,eAAe,CAAC,IAAIZ,IAAI,CAACY,eAAe,CAAClG,MAAM,EAAE;IACnHoE,eAAe,CAAC,WAAW,CAAC,GAAGkB,IAAI,CAACY,eAAe,CAAC3F,GAAG,CAAE4F,CAAC,IAAK;MAAA,IAAAC,MAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,YAAA;MAC7D,IAAIzE,KAAK,CAACC,OAAO,CAACgE,CAAC,CAAC,EAAE,OAAOA,CAAC;MAC9B,OAAO,EAAAC,MAAA,IAAAC,OAAA,GAACF,CAAC,CAAC1C,IAAI,cAAA4C,OAAA,cAAAA,OAAA,GAAIF,CAAC,CAAC3C,IAAI,cAAA4C,MAAA,cAAAA,MAAA,GAAI,QAAQ,GAAAE,MAAA,IAAAC,OAAA,GAAEJ,CAAC,CAAC/D,IAAI,cAAAmE,OAAA,cAAAA,OAAA,GAAIJ,CAAC,CAAC9D,IAAI,cAAAiE,MAAA,cAAAA,MAAA,GAAI,EAAE,GAAAE,MAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAC,YAAA,GAAER,CAAC,CAACxC,SAAS,cAAAgD,YAAA,cAAAA,YAAA,GAAIR,CAAC,CAACvC,SAAS,cAAA8C,MAAA,cAAAA,MAAA,GAAIP,CAAC,CAAC7D,WAAW,cAAAmE,MAAA,cAAAA,MAAA,GAAIN,CAAC,CAAC5D,WAAW,cAAAiE,MAAA,cAAAA,MAAA,GAAI,EAAE,CAAC;IACnI,CAAC,CAAC;EACJ;EAEA,oBACE7G,OAAA;IAAKM,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BP,OAAA;MAAIM,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEoF,IAAI,CAACsB,SAAS,IAAItB,IAAI,CAACuB,QAAQ,IAAI;IAAe;MAAA1G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpFX,OAAA;MAAKM,SAAS,EAAC,SAAS;MAAAC,QAAA,GACrBqF,QAAQ,CAACvF,MAAM,EAAC,qBAAc,EAACF,MAAM,CAAC0E,MAAM,CAACL,eAAe,CAAC,CAAC2C,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,IAAKC,CAAC,IAAIA,CAAC,CAAChH,MAAM,IAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,wBAAiB,EAAC,GAAG,EACnIF,MAAM,CAAC0E,MAAM,CAACJ,eAAe,CAAC,CAAC0C,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,IAAKC,CAAC,IAAIA,CAAC,CAAChH,MAAM,IAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,iBAClF;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENX,OAAA;MAASM,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC/BqF,QAAQ,CAACvF,MAAM,KAAK,CAAC,gBAAGL,OAAA;QAAKM,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GAAGiF,QAAQ,CAAChF,GAAG,CAAC,CAAC0G,CAAC,EAAEC,GAAG,kBAAKvH,OAAA,CAACsE,YAAY;QAAWC,OAAO,EAAE+C,CAAE;QAAC9C,eAAe,EAAEA,eAAgB;QAACC,eAAe,EAAEA;MAAgB,GAApF8C,GAAG;QAAA/G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvM,CAAC,eAEVX,OAAA;MAASqB,KAAK,EAAE;QAAEgE,SAAS,EAAE;MAAG,CAAE;MAAA9E,QAAA,gBAChCP,OAAA;QAAAO,QAAA,EAAS;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACvCX,OAAA;QAAKqB,KAAK,EAAE;UAAEC,SAAS,EAAE,GAAG;UAAEkG,QAAQ,EAAE,MAAM;UAAEC,UAAU,EAAE,SAAS;UAAEC,KAAK,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAE,CAAE;QAAApH,QAAA,EAAEqH,IAAI,CAACC,SAAS,CAAClC,IAAI,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAnF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACmH,GAAA,GAxCQpC,WAAW;AA0CpB,MAAMqC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,OAAO,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAMC,QAAQ,GAAGtI,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACuI,KAAK,EAAEC,QAAQ,CAAC,GAAG3I,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4I,OAAO,EAAEC,UAAU,CAAC,GAAG7I,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8I,OAAO,EAAEC,UAAU,CAAC,GAAG/I,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAACgJ,QAAQ,EAAEC,WAAW,CAAC,GAAGjJ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkJ,QAAQ,EAAEC,WAAW,CAAC,GAAGnJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoJ,QAAQ,EAAEC,WAAW,CAAC,GAAGrJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsJ,OAAO,EAAEC,UAAU,CAAC,GAAGvJ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMwJ,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;EAC1E,MAAMC,GAAG,GAAG1J,KAAK,CAAC2J,MAAM,CAAC;IAAEC,OAAO,EAAEN;EAAS,CAAC,CAAC;EAE/CI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;IACvC,IAAI7B,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE8B,KAAK,EAAED,MAAM,CAACE,OAAO,CAACC,aAAa,GAAG,UAAUhC,IAAI,CAAC8B,KAAK,EAAE;IACtE,OAAOD,MAAM;EACf,CAAC,CAAC;EACFN,GAAG,CAACG,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;IAAA,IAAAC,eAAA;IACT,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,EAAAD,eAAA,GAACD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,CAAC,EAAE;MAC/CC,YAAY,CAACC,KAAK,CAAC,CAAC;MACpBtC,OAAO,CAAC,IAAI,CAAC;MACbuC,KAAK,CAAC,2DAA2D,CAAC;IACpE;IACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;EAC9B,CACF,CAAC;EAEDtK,SAAS,CAAC,MAAM;IACd,IAAIoI,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE8B,KAAK,IAAI,CAAC5B,OAAO,EAAE;MAC3BE,QAAQ,CAAC,GAAG,EAAE;QAAEuC,OAAO,EAAE;MAAK,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,CAAC3C,IAAI,EAAEE,OAAO,EAAEE,QAAQ,CAAC,CAAC;EAE7B,MAAMwC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,cAAc,EAAE;QAAEjC,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAClEG,UAAU,CAAC2B,GAAG,CAACE,IAAI,CAAC9B,OAAO,IAAI,oBAAoB,CAAC;MACpD,MAAM+B,QAAQ,GAAG,MAAMzB,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAE;QAAEjC,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACtE,MAAM;QAAEe,KAAK;QAAEjB,QAAQ,EAAEoC,EAAE;QAAEC;MAAK,CAAC,GAAGF,QAAQ,CAACD,IAAI;MACnD9C,OAAO,CAAC;QAAE6B,KAAK;QAAEjB,QAAQ,EAAEoC,EAAE;QAAEC;MAAK,CAAC,CAAC;MACtCZ,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEvD,IAAI,CAACC,SAAS,CAAC;QAAEiC,KAAK;QAAEjB,QAAQ,EAAEoC,EAAE;QAAEC;MAAK,CAAC,CAAC,CAAC;IAC7E,CAAC,CAAC,OAAOE,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZpC,UAAU,CAAC,iBAAiB,IAAI,EAAAmC,aAAA,GAAAD,GAAG,CAACnB,QAAQ,cAAAoB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcN,IAAI,cAAAO,kBAAA,uBAAlBA,kBAAA,CAAoBpB,KAAK,KAAIkB,GAAG,CAACnC,OAAO,CAAC,CAAC;IAC5E;EACF,CAAC;EAED,MAAMsC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMV,GAAG,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAE;QAAEjC,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACjE,IAAI8B,GAAG,CAACE,IAAI,CAACjB,KAAK,EAAE;QAClB,MAAM;UAAEA,KAAK;UAAEjB,QAAQ,EAAEoC,EAAE;UAAEC;QAAK,CAAC,GAAGL,GAAG,CAACE,IAAI;QAC9C9C,OAAO,CAAC;UAAE6B,KAAK;UAAEjB,QAAQ,EAAEoC,EAAE;UAAEC;QAAK,CAAC,CAAC;QACtCZ,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEvD,IAAI,CAACC,SAAS,CAAC;UAAEiC,KAAK;UAAEjB,QAAQ,EAAEoC,EAAE;UAAEC;QAAK,CAAC,CAAC,CAAC;QAC3EhC,UAAU,CAAC,mBAAmB,CAAC;MACjC,CAAC,MAAM;QACLA,UAAU,CAAC,qBAAqB,CAAC;MACnC;IACF,CAAC,CAAC,OAAOkC,GAAG,EAAE;MAAA,IAAAI,cAAA,EAAAC,mBAAA;MACZvC,UAAU,CAAC,gBAAgB,IAAI,EAAAsC,cAAA,GAAAJ,GAAG,CAACnB,QAAQ,cAAAuB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcT,IAAI,cAAAU,mBAAA,uBAAlBA,mBAAA,CAAoBvB,KAAK,KAAIkB,GAAG,CAACnC,OAAO,CAAC,CAAC;IAC3E;EACF,CAAC;EAED,MAAMyC,gBAAgB,GAAItG,CAAC,IAAK;IAC9B,MAAMuG,QAAQ,GAAGpJ,KAAK,CAACgD,IAAI,CAACH,CAAC,CAACnE,MAAM,CAACoH,KAAK,IAAI,EAAE,CAAC;IACjD,IAAIsD,QAAQ,CAACtL,MAAM,GAAG,EAAE,EAAE;MACxBmK,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACF;IACAlC,QAAQ,CAACqD,QAAQ,CAAC;IAClBnD,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMoD,qBAAqB,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IAC/C,IAAI,CAACD,OAAO,EAAE;MACZ,OAAO;QACL5E,SAAS,EAAE6E,IAAI,CAACC,IAAI;QACpBnG,QAAQ,EAAE,EAAE;QACZE,gBAAgB,EAAE,CAAC,CAAC;QACpBC,gBAAgB,EAAE,CAAC,CAAC;QACpBiG,QAAQ,EAAE,CAAC;MACb,CAAC;IACH;;IAEA;IACA,IAAIH,OAAO,CAACjG,QAAQ,IAAIiG,OAAO,CAAC/F,gBAAgB,IAAI+F,OAAO,CAAC9F,gBAAgB,EAAE;MAC5E,OAAO;QACLkB,SAAS,EAAE4E,OAAO,CAAC5E,SAAS,IAAI4E,OAAO,CAAC3E,QAAQ,IAAI4E,IAAI,CAACC,IAAI;QAC7DnG,QAAQ,EAAErD,KAAK,CAACC,OAAO,CAACqJ,OAAO,CAACjG,QAAQ,CAAC,GAAGiG,OAAO,CAACjG,QAAQ,GAAG,EAAE;QACjEE,gBAAgB,EAAE+F,OAAO,CAAC/F,gBAAgB,IAAI+F,OAAO,CAACrH,eAAe,IAAI,CAAC,CAAC;QAC3EuB,gBAAgB,EAAE8F,OAAO,CAAC9F,gBAAgB,IAAI8F,OAAO,CAACpH,eAAe,IAAI,CAAC,CAAC;QAC3EuH,QAAQ,EAAEH,OAAO,CAACG,QAAQ,IAAI,CAAC;MACjC,CAAC;IACH;;IAEA;IACA,IAAIH,OAAO,CAAC7F,qBAAqB,IAAI6F,OAAO,CAACtF,eAAe,EAAE;MAC5D,MAAM0F,UAAU,GAAG;QACjBC,UAAU,EAAE3J,KAAK,CAACC,OAAO,CAACqJ,OAAO,CAAC7F,qBAAqB,CAAC,GACpD6F,OAAO,CAAC7F,qBAAqB,CAACpF,GAAG,CAAEmB,CAAC;UAAA,IAAAoK,MAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,eAAA,EAAAC,MAAA,EAAAC,OAAA;UAAA,OAAMjK,KAAK,CAACC,OAAO,CAACT,CAAC,CAAC,GAAGA,CAAC,GAAG,EAAAoK,MAAA,IAAAC,QAAA,GAACrK,CAAC,CAACU,IAAI,cAAA2J,QAAA,cAAAA,QAAA,GAAIrK,CAAC,CAACW,IAAI,cAAAyJ,MAAA,cAAAA,MAAA,GAAI,EAAE,GAAAE,MAAA,IAAAC,eAAA,GAAEvK,CAAC,CAACY,WAAW,cAAA2J,eAAA,cAAAA,eAAA,GAAIvK,CAAC,CAACa,WAAW,cAAAyJ,MAAA,cAAAA,MAAA,GAAI,EAAE,GAAAE,MAAA,IAAAC,OAAA,GAAEzK,CAAC,CAACc,GAAG,cAAA2J,OAAA,cAAAA,OAAA,GAAIzK,CAAC,CAACe,GAAG,cAAAyJ,MAAA,cAAAA,MAAA,GAAI,EAAE,CAAC;QAAA,CAAC,CAAC,GACvJ;MACN,CAAC;MACD,MAAME,KAAK,GAAG;QACZzI,SAAS,EAAEzB,KAAK,CAACC,OAAO,CAACqJ,OAAO,CAACtF,eAAe,CAAC,GAC7CsF,OAAO,CAACtF,eAAe,CAAC3F,GAAG,CAAE4F,CAAC;UAAA,IAAAkG,MAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,aAAA;UAAA,OAAM1K,KAAK,CAACC,OAAO,CAACgE,CAAC,CAAC,GAAGA,CAAC,GAAG,EAAAkG,MAAA,IAAAC,QAAA,GAACnG,CAAC,CAAC1C,IAAI,cAAA6I,QAAA,cAAAA,QAAA,GAAInG,CAAC,CAAC3C,IAAI,cAAA6I,MAAA,cAAAA,MAAA,GAAI,QAAQ,GAAAE,MAAA,IAAAC,QAAA,GAAErG,CAAC,CAAC/D,IAAI,cAAAoK,QAAA,cAAAA,QAAA,GAAIrG,CAAC,CAAC9D,IAAI,cAAAkK,MAAA,cAAAA,MAAA,GAAI,EAAE,GAAAE,MAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAC,aAAA,GAAEzG,CAAC,CAACxC,SAAS,cAAAiJ,aAAA,cAAAA,aAAA,GAAIzG,CAAC,CAACvC,SAAS,cAAA+I,MAAA,cAAAA,MAAA,GAAIxG,CAAC,CAAC7D,WAAW,cAAAoK,MAAA,cAAAA,MAAA,GAAIvG,CAAC,CAAC5D,WAAW,cAAAkK,MAAA,cAAAA,MAAA,GAAI,EAAE,CAAC;QAAA,CAAC,CAAC,GACvL;MACN,CAAC;MACD,OAAO;QACL7F,SAAS,EAAE4E,OAAO,CAAC5E,SAAS,IAAI4E,OAAO,CAAC3E,QAAQ,IAAI4E,IAAI,CAACC,IAAI;QAC7DnG,QAAQ,EAAErD,KAAK,CAACC,OAAO,CAACqJ,OAAO,CAACjG,QAAQ,CAAC,GAAGiG,OAAO,CAACjG,QAAQ,GAAG,EAAE;QACjEE,gBAAgB,EAAEmG,UAAU;QAC5BlG,gBAAgB,EAAE0G,KAAK;QACvBT,QAAQ,EAAEH,OAAO,CAACG,QAAQ,IAAI,CAAC;MACjC,CAAC;IACH;;IAEA;IACA,MAAM9L,IAAI,GAAG2L,OAAO,CAACG,QAAQ,IAAIH,OAAO;IACxC,IAAI,CAAC3L,IAAI,CAAC,WAAW,CAAC,EAAEA,IAAI,CAAC,WAAW,CAAC,GAAG4L,IAAI,CAACC,IAAI;IACrD,OAAO;MACL9E,SAAS,EAAE/G,IAAI,CAAC,WAAW,CAAC;MAC5B0F,QAAQ,EAAE,EAAE;MACZE,gBAAgB,EAAE,CAAC,CAAC;MACpBC,gBAAgB,EAAE,CAAC,CAAC;MACpBiG,QAAQ,EAAE9L;IACZ,CAAC;EACH,CAAC;EAED,MAAMgN,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAC7E,KAAK,CAAChI,MAAM,EAAE;IACnBqI,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMyE,GAAG,GAAG,EAAE;MACd,KAAK,MAAMrB,IAAI,IAAIzD,KAAK,EAAE;QACxB,MAAM+E,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAExB,IAAI,CAAC;QAC7B,MAAMjB,GAAG,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,UAAU,EAAEsC,QAAQ,EAAE;UAC/CrD,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CAAC,CAAC;QACF,MAAMpE,IAAI,GAAGiG,qBAAqB,CAACf,GAAG,CAACE,IAAI,IAAI,CAAC,CAAC,EAAEe,IAAI,CAAC;QACxDqB,GAAG,CAACI,IAAI,CAAC5H,IAAI,CAAC;MAChB;MACA6C,UAAU,CAAC2E,GAAG,CAAC;IACjB,CAAC,CAAC,OAAO/B,GAAG,EAAE;MACZoC,OAAO,CAACtD,KAAK,CAAC,gBAAgB,EAAEkB,GAAG,CAAC;MACpCZ,KAAK,CAAC,qCAAqC,CAAC;IAC9C,CAAC,SAAS;MACR9B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAI,EAACV,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE8B,KAAK,KAAI,CAAC5B,OAAO,EAAE;IAC5B,oBACElI,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBP,OAAA;QAAAO,QAAA,EAAKoI,QAAQ,GAAG,QAAQ,GAAG;MAAO;QAAAnI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxCX,OAAA;QAAO6D,IAAI,EAAC,MAAM;QAAC4J,WAAW,EAAC,UAAU;QAACC,KAAK,EAAE7E,QAAS;QAAC8E,QAAQ,EAAGvI,CAAC,IAAK0D,WAAW,CAAC1D,CAAC,CAACnE,MAAM,CAACyM,KAAK,CAAE;QAACpN,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClIX,OAAA;QAAO6D,IAAI,EAAC,UAAU;QAAC4J,WAAW,EAAC,UAAU;QAACC,KAAK,EAAE3E,QAAS;QAAC4E,QAAQ,EAAGvI,CAAC,IAAK4D,WAAW,CAAC5D,CAAC,CAACnE,MAAM,CAACyM,KAAK,CAAE;QAACpN,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACrIgI,QAAQ,gBAAG3I,OAAA;QAAQM,SAAS,EAAC,UAAU;QAACsN,OAAO,EAAEhD,YAAa;QAAArK,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAAGX,OAAA;QAAQM,SAAS,EAAC,UAAU;QAACsN,OAAO,EAAErC,WAAY;QAAAhL,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnJX,OAAA;QAAQM,SAAS,EAAC,YAAY;QAACsN,OAAO,EAAEA,CAAA,KAAM;UAAEhF,WAAW,CAAC,CAACD,QAAQ,CAAC;UAAEO,UAAU,CAAC,EAAE,CAAC;QAAE,CAAE;QAAA3I,QAAA,EAAEoI,QAAQ,GAAG,gCAAgC,GAAG;MAAoB;QAAAnI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EACvKsI,OAAO,iBAAIjJ,OAAA;QAAGM,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAE0I;MAAO;QAAAzI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEV;EAEA,oBACEX,OAAA;IAAKM,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBP,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAIM,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAE2H,OAAO,GAAG,0BAA0B,GAAG;MAA6B;QAAA1H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC,eAETX,OAAA;MAASM,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBACjCP,OAAA;QAAO6N,OAAO,EAAC,aAAa;QAACvN,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpFX,OAAA;QAAO6D,IAAI,EAAC,MAAM;QAACiK,EAAE,EAAC,aAAa;QAACC,MAAM,EAAC,iCAAiC;QAACC,QAAQ;QAACL,QAAQ,EAAEjC;MAAiB;QAAAlL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpHX,OAAA;QAAKM,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzBP,OAAA;UAAQM,SAAS,EAAC,YAAY;UAACsN,OAAO,EAAEV,eAAgB;UAACe,QAAQ,EAAExF,OAAQ;UAAAlI,QAAA,EAAEkI,OAAO,GAAG,eAAe,GAAG;QAAY;UAAAjI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5H,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAET0H,KAAK,CAAChI,MAAM,GAAG,CAAC,iBACfL,OAAA;MAASM,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC/BP,OAAA;QAAIM,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDX,OAAA;QAAIM,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAE8H,KAAK,CAACzH,GAAG,CAAC,CAACkL,IAAI,EAAE9J,CAAC,kBAAKhC,OAAA;UAAAO,QAAA,GAAY,eAAG,EAACuL,IAAI,CAACC,IAAI;QAAA,GAAhB/J,CAAC;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CACV,EAEA8H,OAAO,iBAAIzI,OAAA;MAAGM,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEjE4H,OAAO,CAAClI,MAAM,GAAG,CAAC,iBACjBL,OAAA;MAASM,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAClCP,OAAA;QAAIM,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpD4H,OAAO,CAAC3H,GAAG,CAAC,CAAC+E,IAAI,EAAE4B,GAAG,kBAAKvH,OAAA,CAAC0F,WAAW;QAAWC,IAAI,EAAEA;MAAK,GAAhB4B,GAAG;QAAA/G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACwH,EAAA,CArMIJ,SAAS;EAAA,QACIjI,WAAW;AAAA;AAAAoO,GAAA,GADxBnG,SAAS;AAuMf,eAAeA,SAAS;AAAC,IAAAtG,EAAA,EAAAwB,GAAA,EAAAoB,GAAA,EAAAoB,GAAA,EAAAqC,GAAA,EAAAoG,GAAA;AAAAC,YAAA,CAAA1M,EAAA;AAAA0M,YAAA,CAAAlL,GAAA;AAAAkL,YAAA,CAAA9J,GAAA;AAAA8J,YAAA,CAAA1I,GAAA;AAAA0I,YAAA,CAAArG,GAAA;AAAAqG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}