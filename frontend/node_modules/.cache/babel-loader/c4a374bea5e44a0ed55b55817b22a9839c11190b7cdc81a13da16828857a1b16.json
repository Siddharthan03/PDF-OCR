{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\n// OCRUpload.jsx (strict parser version)\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport '../App.css';\n\n/* ---------------------------------- schema --------------------------------- */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FIXED_HEADERS = [\"Patient Name\", \"Pat Ocr\", \"Responsible Party Name\", \"Rep #\", \"Doc\", \"B-Type\", \"Seen\", \"Service\", \"Type\", \"Office\", \"Code\", \"Description\", \"Amount\", \"Balance\", \"Claim\", \"Loc\", \"Entered\", \"Who\"];\n\n/* ------------------------------ parse helpers ------------------------------ */\nconst joinParts = x => (Array.isArray(x) ? x.join(\" \") : String(x !== null && x !== void 0 ? x : \"\")).trim();\nconst looksLikeName = s => /[A-Za-z]+,[A-Za-z]+/.test(s || \"\");\nconst looksLikeRep = s => /\\b\\d{6,}-\\d\\b/.test(s || \"\");\n// CPT/HCPCS-ish: 00402, 19318-50, J0585, C9290, 13100-XU etc.\nconst looksLikeCPT = s => /\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/.test(s || \"\");\n\n// normalize \"7.800.00\" -> \"7,800.00\", \"32.407.00\" -> \"32,407.00\", \"20.000.00\" -> \"20,000.00\"\nfunction normalizeAmountToken(tok) {\n  tok = String(tok || \"\").replace(/,/g, \"\").trim();\n  if (/^\\d+\\.\\d{2}$/.test(tok)) {\n    return Number(tok).toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  }\n  const m = /^(\\d+)\\.(\\d{3})\\.?(\\d{2})$/.exec(tok);\n  if (m) {\n    const val = `${m[1]}${m[2]}.${m[3]}`;\n    return Number(val).toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  }\n  const m2 = /^(\\d{1,3}(?:\\.\\d{3})+)\\.0?(\\d{2})$/.exec(tok);\n  if (m2) {\n    const noDots = m2[1].replace(/\\./g, \"\");\n    const val = `${noDots}.${m2[2]}`;\n    return Number(val).toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  }\n  return tok;\n}\nfunction moneyTokens(line) {\n  const raw = (line || \"\").match(/\\d[\\d.,]*\\.\\d{2}/g) || [];\n  return raw.map(normalizeAmountToken);\n}\n\n// page chrome & headings to ignore\nconst BAD_LINE = /^(?:Date:|Time\\b|FFCBilling|BeginDate:|Page\\b|Page[A-Za-z]|===|=|AmountBalanceClaim|LocEnteredWho)\\b/i;\nfunction prefilterLines(rawTables) {\n  return (rawTables || []).map(joinParts).map(s => s.replace(/\\u00A0/g, \" \").trim()).filter(s => s && !BAD_LINE.test(s));\n}\n\n// OFFICE is the last 3–4 digit number BEFORE the first code in a line\nfunction extractOfficeFromLine(line) {\n  if (!line) return \"\";\n  const codeIdx = line.search(/\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/);\n  if (codeIdx < 0) return \"\";\n  const left = line.slice(0, codeIdx);\n  const nums = left.match(/\\b\\d{3,4}\\b/g);\n  return nums ? nums[nums.length - 1] : \"\";\n}\n\n// CLAIM/LOC/ENTERED/WHO tail: \"18827 50 01-08-25 DF\"\nfunction extractTailFields(line) {\n  if (!line) return {};\n  const m = /\\b(\\d{4,6})\\b\\s+(\\d{2})\\s+(\\d{2}[-/]\\d{2}[-/]\\d{2})\\s+([A-Z]{2})\\b/.exec(line);\n  if (!m) return {};\n  return {\n    Claim: m[1],\n    Loc: m[2],\n    Entered: m[3],\n    Who: m[4]\n  };\n}\n\n/** Strict auto-parse: replicate the report row logic precisely. */\nfunction autoParseRows(rawTables) {\n  const rows = [];\n  const lines = prefilterLines(rawTables);\n  if (!lines.length) return rows;\n\n  // rolling patient context (name/rep#)\n  let ctx = {\n    patient: \"\",\n    rep: \"\"\n  };\n  for (let i = 0; i < lines.length; i++) {\n    const L = lines[i];\n\n    // carry patient context\n    if (looksLikeName(L)) {\n      ctx.patient = L;\n      for (let k = 1; k <= 3 && i + k < lines.length; k++) {\n        const cand = lines[i + k];\n        if (looksLikeRep(cand)) {\n          ctx.rep = cand.match(/\\b\\d{6,}-\\d\\b/)[0];\n          break;\n        }\n      }\n      continue;\n    }\n    if (looksLikeRep(L)) {\n      ctx.rep = L.match(/\\b\\d{6,}-\\d\\b/)[0];\n      continue;\n    }\n\n    // a data row starts where we see a Code AND there is an Amount within next 1–2 lines\n    if (!looksLikeCPT(L)) continue;\n\n    // capture codes from this line (can be multiple)\n    const codes = L.match(/\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/g) || [];\n    if (!codes.length) continue;\n\n    // office number: last 3–4 digit number BEFORE first code token\n    const office = extractOfficeFromLine(L);\n\n    // description: next non-code, non-amount line\n    let desc = \"\";\n    let p = i + 1;\n    while (p < Math.min(i + 4, lines.length)) {\n      const cand = lines[p];\n      if (!looksLikeCPT(cand) && moneyTokens(cand).length === 0) {\n        desc = cand.replace(/\\*/g, \" \").replace(/\\s+/g, \" \").trim();\n        p++;\n        break;\n      }\n      p++;\n    }\n\n    // amounts: within next 1–2 lines after desc (or after code if no desc)\n    let amount = \"\",\n      balance = \"\";\n    let qStart = desc ? p : i + 1;\n    let foundAmt = false;\n    for (let q = qStart; q < Math.min(qStart + 3, lines.length); q++) {\n      const mt = moneyTokens(lines[q]);\n      if (mt.length) {\n        amount = mt[0];\n        if (mt.length > 1) balance = mt[1];\n        foundAmt = true;\n        // tail details could be on same line or the next line\n        // look on this line first, else check next one\n        let tail = extractTailFields(lines[q]);\n        if (!tail && q + 1 < lines.length) tail = extractTailFields(lines[q + 1]);\n        const row = Object.fromEntries(FIXED_HEADERS.map(h => [h, \"\"]));\n        row[\"Patient Name\"] = ctx.patient;\n        row[\"Rep #\"] = ctx.rep;\n        row[\"Office\"] = office;\n        row[\"Code\"] = codes.join(\" \");\n        row[\"Description\"] = desc;\n        row[\"Amount\"] = amount;\n        row[\"Balance\"] = balance;\n        if (tail) {\n          row[\"Claim\"] = tail.Claim || \"\";\n          row[\"Loc\"] = tail.Loc || \"\";\n          row[\"Entered\"] = tail.Entered || \"\";\n          row[\"Who\"] = tail.Who || \"\";\n        }\n        rows.push(row);\n        // advance i just past the amount/tail we consumed\n        i = Math.max(i, q);\n        break;\n      }\n    }\n\n    // if we never found an amount close by, skip (prevents false positives)\n    if (!foundAmt) {\n      continue;\n    }\n  }\n\n  // de-dupe identical patient+rep+code+amount\n  const seen = new Set();\n  return rows.filter(r => {\n    const key = [r[\"Patient Name\"], r[\"Rep #\"], r[\"Code\"], r[\"Amount\"]].join(\"|\");\n    if (seen.has(key)) return false;\n    seen.add(key);\n    return true;\n  });\n}\n\n/* ---------------------------------- component ------------------------------- */\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]); // [{ columns, rows, raw }]\n  const [summaries, setSummaries] = useState([]); // [{ Charges, Receipts, ... , NOTE }]\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  // auth form\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert('⚠️ Session expired or access denied. Please log in again.');\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) navigate('/', {\n      replace: true\n    });\n  }, [auth, isAdmin, navigate]);\n\n  /* ------------------------------ auth handlers ----------------------------- */\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', {\n        username,\n        password\n      });\n      const {\n        token,\n        username: un,\n        role\n      } = loginRes.data;\n      setAuth({\n        token,\n        username: un,\n        role\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token,\n        username: un,\n        role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage('Signup failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', {\n        username,\n        password\n      });\n      if (res.data.token) {\n        const {\n          token,\n          username: un,\n          role\n        } = res.data;\n        setAuth({\n          token,\n          username: un,\n          role\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token,\n          username: un,\n          role\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage('Login failed: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n\n  /* ------------------------------ file selection ---------------------------- */\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setSummaries([]);\n    setDownloadReady(false);\n  };\n\n  /* ------------------------------- upload parse ----------------------------- */\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const outTables = [];\n      const outSummaries = [];\n      for (const [idx, file] of files.entries()) {\n        var _res$data, _report$columns;\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('OCR response for', file.name, res.data);\n\n        // backend shape from your logs\n        const md = ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.metadata) || {};\n        const report = md.report || {};\n        const rawTables = Array.isArray(md.tables) ? md.tables : [];\n        const fieldArr = Array.isArray(md.fields) ? md.fields : [];\n\n        // rows: prefer backend; else strict auto-parse\n        let rows = Array.isArray(report.rows) ? report.rows : [];\n        if (!rows || rows.length === 0) {\n          rows = autoParseRows(rawTables);\n        }\n        const columns = (_report$columns = report.columns) !== null && _report$columns !== void 0 && _report$columns.length ? report.columns : FIXED_HEADERS;\n\n        // summary from fields; fallback parse from raw\n        const wanted = [\"Charges\", \"Receipts\", \"Commissions\", \"Total Due Doctor\", \"Credits\", \"Debits\", \"Bal Fwd\", \"Fin Chg\", \"Direct Paymnt\", \"Assess\", \"Acct. Rec.\", \"Total Entries\", \"NOTE\"];\n        const summaryObj = {};\n        fieldArr.forEach(({\n          Field,\n          Value\n        }) => {\n          const hit = wanted.find(w => w.toLowerCase() === String(Field || \"\").toLowerCase());\n          if (hit) summaryObj[hit] = Value !== null && Value !== void 0 ? Value : \"\";\n        });\n        if (rawTables.length) {\n          const joined = rawTables.map(joinParts).join(\" \");\n          const grab = label => {\n            const m = new RegExp(`${label.replace(/[.*+?^${}()|[\\\\]\\\\\\\\]/g, '\\\\$&')}\\\\s*:?\\\\s*([0-9,.-]+)`, \"i\").exec(joined);\n            return m ? m[1] : \"\";\n          };\n          wanted.forEach(k => {\n            if (!summaryObj[k] || summaryObj[k] === \"\") {\n              if (k === \"NOTE\") {\n                const m = /NOTE\\s*:?(.+?)(?:\\s{2,}|$)/i.exec(joined);\n                if (m) summaryObj[\"NOTE\"] = m[1].trim();\n              } else {\n                summaryObj[k] = grab(k) || \"\";\n              }\n            }\n          });\n        }\n        outTables[idx] = {\n          columns,\n          rows,\n          raw: rawTables\n        };\n        outSummaries[idx] = summaryObj;\n      }\n      setTables(outTables);\n      setSummaries(outSummaries);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /* ----------------------------- Excel download ----------------------------- */\n  const handleDownloadExcel = () => {\n    const wb = XLSX.utils.book_new();\n\n    // 1) Report rows per file\n    tables.forEach((t, i) => {\n      const data = (t.rows || []).map(r => {\n        const o = {};\n        (t.columns || FIXED_HEADERS).forEach(c => {\n          var _r$c;\n          o[c] = (_r$c = r === null || r === void 0 ? void 0 : r[c]) !== null && _r$c !== void 0 ? _r$c : \"\";\n        });\n        return o;\n      });\n      const ws = XLSX.utils.json_to_sheet(data.length ? data : [{\n        Note: \"No rows\"\n      }]);\n      XLSX.utils.book_append_sheet(wb, ws, `ReportRows_${i + 1}`);\n    });\n\n    // 2) Fields sheet (one row per file)\n    const fieldsRows = summaries.map((s, i) => {\n      var _files$i;\n      return {\n        File: ((_files$i = files[i]) === null || _files$i === void 0 ? void 0 : _files$i.name) || `File_${i + 1}`,\n        ...s\n      };\n    });\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(fieldsRows.length ? fieldsRows : [{\n      Note: \"No summaries\"\n    }]), \"Fields\");\n\n    // 3) Raw text per file\n    tables.forEach((t, i) => {\n      const raw = (t.raw || []).map((line, idx) => ({\n        Line: idx + 1,\n        Text: joinParts(line)\n      }));\n      const ws = XLSX.utils.json_to_sheet(raw.length ? raw : [{\n        Note: \"No raw text\"\n      }]);\n      XLSX.utils.book_append_sheet(wb, ws, `RawText_${i + 1}`);\n    });\n    const wbout = XLSX.write(wb, {\n      type: 'array',\n      bookType: 'xlsx'\n    });\n    saveAs(new Blob([wbout], {\n      type: 'application/octet-stream'\n    }), 'ocr_export.xlsx');\n  };\n\n  /* --------------------------------- UI bits -------------------------------- */\n  const ExcelGrid = ({\n    title,\n    columns,\n    rows,\n    summary\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-grid-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"file-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid compact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid-scroll\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"excel-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"excel-th\",\n                children: col\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [rows && rows.length > 0 ? rows.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(col => {\n                var _r$col;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"excel-td\",\n                  children: (_r$col = r === null || r === void 0 ? void 0 : r[col]) !== null && _r$col !== void 0 ? _r$col : ''\n                }, col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 23\n                }, this);\n              })\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: columns.length,\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"No rows (showing Summary and Raw OCR below)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), summary && Object.keys(summary).length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"summary-row\",\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: columns.length,\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: [\"Charges: \", summary[\"Charges\"] || 0, \" | Receipts: \", summary[\"Receipts\"] || 0, \" | Credits: \", summary[\"Credits\"] || 0, \" | Debits: \", summary[\"Debits\"] || 0, \" | Balance Fwd: \", summary[\"Bal Fwd\"] || 0, \" | Acct. Rec.: \", summary[\"Acct. Rec.\"] || 0, \" | Total Entries: \", summary[\"Total Entries\"] || 0, summary[\"NOTE\"] ? ` | Note: ${summary[\"NOTE\"]}` : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n  const SummaryCards = ({\n    summary\n  }) => {\n    const keys = [\"Charges\", \"Receipts\", \"Commissions\", \"Total Due Doctor\", \"Credits\", \"Debits\", \"Bal Fwd\", \"Fin Chg\", \"Direct Paymnt\", \"Assess\", \"Acct. Rec.\", \"Total Entries\", \"NOTE\"];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-3 gap-2 my-3\",\n      children: keys.map(k => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-white/15 rounded-lg p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs opacity-70\",\n          children: k\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: summary !== null && summary !== void 0 && summary[k] ? String(summary[k]) : \"—\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)]\n      }, k, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this);\n  };\n  const RawPanel = ({\n    lines\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-64 overflow-auto border border-white/15 rounded-xl p-3 text-xs leading-6 my-2\",\n    children: (lines !== null && lines !== void 0 && lines.length ? lines : [\"(no raw text)\"]).map((t, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"whitespace-pre-wrap\",\n      children: [i + 1, \". \", joinParts(t)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 444,\n    columnNumber: 5\n  }, this);\n\n  /* --------------------------------- gates/UI -------------------------------- */\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Signup' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage('');\n        },\n        children: isSignup ? 'Already have an account? Login' : 'No account? Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: handleDownloadExcel,\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting table...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 19\n    }, this), tables.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Procedure Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this), files.map((file, idx) => {\n        var _tables$idx, _tables$idx2, _tables$idx3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-10\",\n          children: [/*#__PURE__*/_jsxDEV(ExcelGrid, {\n            title: file.name,\n            columns: ((_tables$idx = tables[idx]) === null || _tables$idx === void 0 ? void 0 : _tables$idx.columns) || FIXED_HEADERS,\n            rows: ((_tables$idx2 = tables[idx]) === null || _tables$idx2 === void 0 ? void 0 : _tables$idx2.rows) || [],\n            summary: summaries[idx] || {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"section-heading\",\n            style: {\n              marginTop: '12px'\n            },\n            children: \"\\uD83D\\uDCCC Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SummaryCards, {\n            summary: summaries[idx] || {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"section-heading\",\n            style: {\n              marginTop: '12px'\n            },\n            children: \"\\uD83E\\uDDFE Raw OCR Lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RawPanel, {\n            lines: ((_tables$idx3 = tables[idx]) === null || _tables$idx3 === void 0 ? void 0 : _tables$idx3.raw) || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)]\n        }, `wrap-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"LzJOiSnKr3bq63SE5thwgkESO00=\", false, function () {\n  return [useNavigate];\n});\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","XLSX","saveAs","jsxDEV","_jsxDEV","FIXED_HEADERS","joinParts","x","Array","isArray","join","String","trim","looksLikeName","s","test","looksLikeRep","looksLikeCPT","normalizeAmountToken","tok","replace","Number","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","m","exec","val","m2","noDots","moneyTokens","line","raw","match","map","BAD_LINE","prefilterLines","rawTables","filter","extractOfficeFromLine","codeIdx","search","left","slice","nums","length","extractTailFields","Claim","Loc","Entered","Who","autoParseRows","rows","lines","ctx","patient","rep","i","L","k","cand","codes","office","desc","p","Math","min","amount","balance","qStart","foundAmt","q","mt","tail","row","Object","fromEntries","h","push","max","seen","Set","r","key","has","add","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","tables","setTables","summaries","setSummaries","loading","setLoading","downloadReady","setDownloadReady","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","handleSignup","res","post","data","loginRes","un","role","setItem","JSON","stringify","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","e","selected","from","target","handleUploadAll","outTables","outSummaries","idx","file","entries","_res$data","_report$columns","formData","FormData","append","console","log","name","md","metadata","report","fieldArr","fields","columns","wanted","summaryObj","forEach","Field","Value","hit","find","w","toLowerCase","joined","grab","label","RegExp","handleDownloadExcel","wb","utils","book_new","t","o","c","_r$c","ws","json_to_sheet","Note","book_append_sheet","fieldsRows","_files$i","File","Line","Text","wbout","write","type","bookType","Blob","ExcelGrid","title","summary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","col","_r$col","colSpan","style","textAlign","keys","fontWeight","SummaryCards","RawPanel","placeholder","value","onChange","onClick","htmlFor","id","accept","multiple","_tables$idx","_tables$idx2","_tables$idx3","marginTop","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["// OCRUpload.jsx (strict parser version)\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport '../App.css';\n\n/* ---------------------------------- schema --------------------------------- */\nconst FIXED_HEADERS = [\n  \"Patient Name\",\"Pat Ocr\",\"Responsible Party Name\",\"Rep #\",\"Doc\",\n  \"B-Type\",\"Seen\",\"Service\",\"Type\",\"Office\",\"Code\",\"Description\",\n  \"Amount\",\"Balance\",\"Claim\",\"Loc\",\"Entered\",\"Who\"\n];\n\n/* ------------------------------ parse helpers ------------------------------ */\nconst joinParts = (x) => (Array.isArray(x) ? x.join(\" \") : String(x ?? \"\")).trim();\n\nconst looksLikeName   = (s) => /[A-Za-z]+,[A-Za-z]+/.test(s || \"\");\nconst looksLikeRep    = (s) => /\\b\\d{6,}-\\d\\b/.test(s || \"\");\n// CPT/HCPCS-ish: 00402, 19318-50, J0585, C9290, 13100-XU etc.\nconst looksLikeCPT    = (s) => /\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/.test(s || \"\");\n\n// normalize \"7.800.00\" -> \"7,800.00\", \"32.407.00\" -> \"32,407.00\", \"20.000.00\" -> \"20,000.00\"\nfunction normalizeAmountToken(tok) {\n  tok = String(tok || \"\").replace(/,/g, \"\").trim();\n  if (/^\\d+\\.\\d{2}$/.test(tok)) {\n    return Number(tok).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  const m = /^(\\d+)\\.(\\d{3})\\.?(\\d{2})$/.exec(tok);\n  if (m) {\n    const val = `${m[1]}${m[2]}.${m[3]}`;\n    return Number(val).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  const m2 = /^(\\d{1,3}(?:\\.\\d{3})+)\\.0?(\\d{2})$/.exec(tok);\n  if (m2) {\n    const noDots = m2[1].replace(/\\./g, \"\");\n    const val = `${noDots}.${m2[2]}`;\n    return Number(val).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  return tok;\n}\n\nfunction moneyTokens(line) {\n  const raw = (line || \"\").match(/\\d[\\d.,]*\\.\\d{2}/g) || [];\n  return raw.map(normalizeAmountToken);\n}\n\n// page chrome & headings to ignore\nconst BAD_LINE = /^(?:Date:|Time\\b|FFCBilling|BeginDate:|Page\\b|Page[A-Za-z]|===|=|AmountBalanceClaim|LocEnteredWho)\\b/i;\n\nfunction prefilterLines(rawTables) {\n  return (rawTables || [])\n    .map(joinParts)\n    .map(s => s.replace(/\\u00A0/g, \" \").trim())\n    .filter(s => s && !BAD_LINE.test(s));\n}\n\n// OFFICE is the last 3–4 digit number BEFORE the first code in a line\nfunction extractOfficeFromLine(line) {\n  if (!line) return \"\";\n  const codeIdx = line.search(/\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/);\n  if (codeIdx < 0) return \"\";\n  const left = line.slice(0, codeIdx);\n  const nums = left.match(/\\b\\d{3,4}\\b/g);\n  return nums ? nums[nums.length - 1] : \"\";\n}\n\n// CLAIM/LOC/ENTERED/WHO tail: \"18827 50 01-08-25 DF\"\nfunction extractTailFields(line) {\n  if (!line) return {};\n  const m = /\\b(\\d{4,6})\\b\\s+(\\d{2})\\s+(\\d{2}[-/]\\d{2}[-/]\\d{2})\\s+([A-Z]{2})\\b/.exec(line);\n  if (!m) return {};\n  return { Claim: m[1], Loc: m[2], Entered: m[3], Who: m[4] };\n}\n\n/** Strict auto-parse: replicate the report row logic precisely. */\nfunction autoParseRows(rawTables) {\n  const rows = [];\n  const lines = prefilterLines(rawTables);\n  if (!lines.length) return rows;\n\n  // rolling patient context (name/rep#)\n  let ctx = { patient: \"\", rep: \"\" };\n\n  for (let i = 0; i < lines.length; i++) {\n    const L = lines[i];\n\n    // carry patient context\n    if (looksLikeName(L)) {\n      ctx.patient = L;\n      for (let k = 1; k <= 3 && i + k < lines.length; k++) {\n        const cand = lines[i + k];\n        if (looksLikeRep(cand)) {\n          ctx.rep = cand.match(/\\b\\d{6,}-\\d\\b/)[0];\n          break;\n        }\n      }\n      continue;\n    }\n    if (looksLikeRep(L)) {\n      ctx.rep = L.match(/\\b\\d{6,}-\\d\\b/)[0];\n      continue;\n    }\n\n    // a data row starts where we see a Code AND there is an Amount within next 1–2 lines\n    if (!looksLikeCPT(L)) continue;\n\n    // capture codes from this line (can be multiple)\n    const codes = (L.match(/\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/g) || []);\n    if (!codes.length) continue;\n\n    // office number: last 3–4 digit number BEFORE first code token\n    const office = extractOfficeFromLine(L);\n\n    // description: next non-code, non-amount line\n    let desc = \"\";\n    let p = i + 1;\n    while (p < Math.min(i + 4, lines.length)) {\n      const cand = lines[p];\n      if (!looksLikeCPT(cand) && moneyTokens(cand).length === 0) {\n        desc = cand.replace(/\\*/g, \" \").replace(/\\s+/g, \" \").trim();\n        p++;\n        break;\n      }\n      p++;\n    }\n\n    // amounts: within next 1–2 lines after desc (or after code if no desc)\n    let amount = \"\", balance = \"\";\n    let qStart = desc ? p : (i + 1);\n    let foundAmt = false;\n    for (let q = qStart; q < Math.min(qStart + 3, lines.length); q++) {\n      const mt = moneyTokens(lines[q]);\n      if (mt.length) {\n        amount = mt[0];\n        if (mt.length > 1) balance = mt[1];\n        foundAmt = true;\n        // tail details could be on same line or the next line\n        // look on this line first, else check next one\n        let tail = extractTailFields(lines[q]);\n        if (!tail && q + 1 < lines.length) tail = extractTailFields(lines[q + 1]);\n\n        const row = Object.fromEntries(FIXED_HEADERS.map(h => [h, \"\"]));\n        row[\"Patient Name\"] = ctx.patient;\n        row[\"Rep #\"]        = ctx.rep;\n        row[\"Office\"]       = office;\n        row[\"Code\"]         = codes.join(\" \");\n        row[\"Description\"]  = desc;\n        row[\"Amount\"]       = amount;\n        row[\"Balance\"]      = balance;\n        if (tail) {\n          row[\"Claim\"]   = tail.Claim || \"\";\n          row[\"Loc\"]     = tail.Loc || \"\";\n          row[\"Entered\"] = tail.Entered || \"\";\n          row[\"Who\"]     = tail.Who || \"\";\n        }\n\n        rows.push(row);\n        // advance i just past the amount/tail we consumed\n        i = Math.max(i, q);\n        break;\n      }\n    }\n\n    // if we never found an amount close by, skip (prevents false positives)\n    if (!foundAmt) {\n      continue;\n    }\n  }\n\n  // de-dupe identical patient+rep+code+amount\n  const seen = new Set();\n  return rows.filter(r => {\n    const key = [r[\"Patient Name\"], r[\"Rep #\"], r[\"Code\"], r[\"Amount\"]].join(\"|\");\n    if (seen.has(key)) return false;\n    seen.add(key);\n    return true;\n  });\n}\n\n/* ---------------------------------- component ------------------------------- */\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]);       // [{ columns, rows, raw }]\n  const [summaries, setSummaries] = useState([]); // [{ Charges, Receipts, ... , NOTE }]\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  // auth form\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage]   = useState('');\n\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert('⚠️ Session expired or access denied. Please log in again.');\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) navigate('/', { replace: true });\n  }, [auth, isAdmin, navigate]);\n\n  /* ------------------------------ auth handlers ----------------------------- */\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', { username, password });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', { username, password });\n      const { token, username: un, role } = loginRes.data;\n      setAuth({ token, username: un, role });\n      localStorage.setItem('auth', JSON.stringify({ token, username: un, role }));\n    } catch (err) {\n      setMessage('Signup failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', { username, password });\n      if (res.data.token) {\n        const { token, username: un, role } = res.data;\n        setAuth({ token, username: un, role });\n        localStorage.setItem('auth', JSON.stringify({ token, username: un, role }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      setMessage('Login failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  /* ------------------------------ file selection ---------------------------- */\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setSummaries([]);\n    setDownloadReady(false);\n  };\n\n  /* ------------------------------- upload parse ----------------------------- */\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n\n    try {\n      const outTables = [];\n      const outSummaries = [];\n\n      for (const [idx, file] of files.entries()) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const res = await api.post('/api/ocr', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n\n        console.log('OCR response for', file.name, res.data);\n\n        // backend shape from your logs\n        const md        = res.data?.metadata || {};\n        const report    = md.report || {};\n        const rawTables = Array.isArray(md.tables) ? md.tables : [];\n        const fieldArr  = Array.isArray(md.fields) ? md.fields : [];\n\n        // rows: prefer backend; else strict auto-parse\n        let rows = Array.isArray(report.rows) ? report.rows : [];\n        if (!rows || rows.length === 0) {\n          rows = autoParseRows(rawTables);\n        }\n        const columns = report.columns?.length ? report.columns : FIXED_HEADERS;\n\n        // summary from fields; fallback parse from raw\n        const wanted = [\n          \"Charges\",\"Receipts\",\"Commissions\",\"Total Due Doctor\",\"Credits\",\"Debits\",\n          \"Bal Fwd\",\"Fin Chg\",\"Direct Paymnt\",\"Assess\",\"Acct. Rec.\",\"Total Entries\",\"NOTE\"\n        ];\n        const summaryObj = {};\n        fieldArr.forEach(({ Field, Value }) => {\n          const hit = wanted.find(w => w.toLowerCase() === String(Field || \"\").toLowerCase());\n          if (hit) summaryObj[hit] = Value ?? \"\";\n        });\n        if (rawTables.length) {\n          const joined = rawTables.map(joinParts).join(\" \");\n          const grab = (label) => {\n            const m = new RegExp(`${label.replace(/[.*+?^${}()|[\\\\]\\\\\\\\]/g, '\\\\$&')}\\\\s*:?\\\\s*([0-9,.-]+)`, \"i\").exec(joined);\n            return m ? m[1] : \"\";\n          };\n          wanted.forEach(k => {\n            if (!summaryObj[k] || summaryObj[k] === \"\") {\n              if (k === \"NOTE\") {\n                const m = /NOTE\\s*:?(.+?)(?:\\s{2,}|$)/i.exec(joined);\n                if (m) summaryObj[\"NOTE\"] = m[1].trim();\n              } else {\n                summaryObj[k] = grab(k) || \"\";\n              }\n            }\n          });\n        }\n\n        outTables[idx] = { columns, rows, raw: rawTables };\n        outSummaries[idx] = summaryObj;\n      }\n\n      setTables(outTables);\n      setSummaries(outSummaries);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /* ----------------------------- Excel download ----------------------------- */\n  const handleDownloadExcel = () => {\n    const wb = XLSX.utils.book_new();\n\n    // 1) Report rows per file\n    tables.forEach((t, i) => {\n      const data = (t.rows || []).map(r => {\n        const o = {};\n        (t.columns || FIXED_HEADERS).forEach(c => { o[c] = r?.[c] ?? \"\"; });\n        return o;\n      });\n      const ws = XLSX.utils.json_to_sheet(data.length ? data : [{ Note: \"No rows\" }]);\n      XLSX.utils.book_append_sheet(wb, ws, `ReportRows_${i + 1}`);\n    });\n\n    // 2) Fields sheet (one row per file)\n    const fieldsRows = summaries.map((s, i) => ({ File: files[i]?.name || `File_${i + 1}`, ...s }));\n    XLSX.utils.book_append_sheet(\n      wb,\n      XLSX.utils.json_to_sheet(fieldsRows.length ? fieldsRows : [{ Note: \"No summaries\" }]),\n      \"Fields\"\n    );\n\n    // 3) Raw text per file\n    tables.forEach((t, i) => {\n      const raw = (t.raw || []).map((line, idx) => ({\n        Line: idx + 1,\n        Text: joinParts(line)\n      }));\n      const ws = XLSX.utils.json_to_sheet(raw.length ? raw : [{ Note: \"No raw text\" }]);\n      XLSX.utils.book_append_sheet(wb, ws, `RawText_${i + 1}`);\n    });\n\n    const wbout = XLSX.write(wb, { type: 'array', bookType: 'xlsx' });\n    saveAs(new Blob([wbout], { type: 'application/octet-stream' }), 'ocr_export.xlsx');\n  };\n\n  /* --------------------------------- UI bits -------------------------------- */\n  const ExcelGrid = ({ title, columns, rows, summary }) => (\n    <div className=\"excel-grid-wrapper\">\n      <div className=\"excel-grid-header\">\n        <h4 className=\"file-title\">{title}</h4>\n      </div>\n      <div className=\"excel-grid compact\">\n        <div className=\"excel-grid-scroll\">\n          <table className=\"excel-table\">\n            <thead>\n              <tr>\n                {columns.map((col) => (\n                  <th key={col} className=\"excel-th\">{col}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {rows && rows.length > 0 ? (\n                rows.map((r, i) => (\n                  <tr key={i}>\n                    {columns.map((col) => (\n                      <td key={col} className=\"excel-td\">{r?.[col] ?? ''}</td>\n                    ))}\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan={columns.length} style={{ textAlign: 'center' }}>\n                    No rows (showing Summary and Raw OCR below)\n                  </td>\n                </tr>\n              )}\n              {summary && Object.keys(summary).length > 0 && (\n                <tr className=\"summary-row\">\n                  <td colSpan={columns.length} style={{ fontWeight: 'bold' }}>\n                    Charges: {summary[\"Charges\"] || 0} | Receipts: {summary[\"Receipts\"] || 0} | \n                    Credits: {summary[\"Credits\"] || 0} | Debits: {summary[\"Debits\"] || 0} | \n                    Balance Fwd: {summary[\"Bal Fwd\"] || 0} | Acct. Rec.: {summary[\"Acct. Rec.\"] || 0} | \n                    Total Entries: {summary[\"Total Entries\"] || 0}\n                    {summary[\"NOTE\"] ? ` | Note: ${summary[\"NOTE\"]}` : \"\"}\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n\n  const SummaryCards = ({ summary }) => {\n    const keys = [\n      \"Charges\",\"Receipts\",\"Commissions\",\"Total Due Doctor\",\"Credits\",\"Debits\",\n      \"Bal Fwd\",\"Fin Chg\",\"Direct Paymnt\",\"Assess\",\"Acct. Rec.\",\"Total Entries\",\"NOTE\"\n    ];\n    return (\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 my-3\">\n        {keys.map(k => (\n          <div key={k} className=\"border border-white/15 rounded-lg p-2\">\n            <div className=\"text-xs opacity-70\">{k}</div>\n            <div className=\"font-semibold\">{summary?.[k] ? String(summary[k]) : \"—\"}</div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const RawPanel = ({ lines }) => (\n    <div className=\"h-64 overflow-auto border border-white/15 rounded-xl p-3 text-xs leading-6 my-2\">\n      {(lines?.length ? lines : [\"(no raw text)\"]).map((t, i) => (\n        <div key={i} className=\"whitespace-pre-wrap\">\n          {i + 1}. {joinParts(t)}\n        </div>\n      ))}\n    </div>\n  );\n\n  /* --------------------------------- gates/UI -------------------------------- */\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? 'Signup' : 'Login'}</h2>\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"auth-input\" />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"auth-input\" />\n        {isSignup ? (\n          <button className=\"auth-btn\" onClick={handleSignup}>Signup</button>\n        ) : (\n          <button className=\"auth-btn\" onClick={handleLogin}>Login</button>\n        )}\n        <button className=\"toggle-btn\" onClick={() => { setIsSignup(!isSignup); setMessage(''); }}>\n          {isSignup ? 'Already have an account? Login' : 'No account? Signup'}\n        </button>\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">\n          {isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'}\n        </h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>Upload All</button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={handleDownloadExcel}>\n              ⬇️ Download Excel\n            </button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, i) => (<li key={i}>📎 {file.name}</li>))}\n          </ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting table...</p>}\n\n      {tables.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Procedure Report</h3>\n\n          {files.map((file, idx) => (\n            <div key={`wrap-${idx}`} className=\"mb-10\">\n              <ExcelGrid\n                title={file.name}\n                columns={tables[idx]?.columns || FIXED_HEADERS}\n                rows={tables[idx]?.rows || []}\n                summary={summaries[idx] || {}}\n              />\n\n              <h4 className=\"section-heading\" style={{ marginTop: '12px' }}>📌 Summary</h4>\n              <SummaryCards summary={summaries[idx] || {}} />\n\n              <h4 className=\"section-heading\" style={{ marginTop: '12px' }}>🧾 Raw OCR Lines</h4>\n              <RawPanel lines={tables[idx]?.raw || []} />\n            </div>\n          ))}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}