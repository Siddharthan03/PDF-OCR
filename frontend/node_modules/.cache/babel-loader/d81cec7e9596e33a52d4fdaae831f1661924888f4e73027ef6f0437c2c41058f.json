{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/admin/AdminLogs.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst logsData = [{\n  id: 1,\n  time: \"12:01\",\n  text: \"User John uploaded a file.\"\n}, {\n  id: 2,\n  time: \"12:05\",\n  text: \"Jane logged in.\"\n}, {\n  id: 3,\n  time: \"12:10\",\n  text: \"Error: Failed upload attempt.\"\n}, {\n  id: 4,\n  time: \"12:15\",\n  text: \"System backup completed.\"\n}, {\n  id: 5,\n  time: \"12:20\",\n  text: \"Alice updated her profile.\"\n}, {\n  id: 6,\n  time: \"12:25\",\n  text: \"New user registered.\"\n}];\nexport default function Logs() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [logPage, setLogPage] = useState(1);\n  const logsPerPage = 3;\n  useEffect(() => {\n    const timer = setTimeout(() => setLoading(false), 800);\n    return () => clearTimeout(timer);\n  }, []);\n  const indexOfLastLog = logPage * logsPerPage;\n  const indexOfFirstLog = indexOfLastLog - logsPerPage;\n  const currentLogs = logsData.slice(indexOfFirstLog, indexOfLastLog);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"System Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"Loading logs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2\",\n        children: currentLogs.map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-2 bg-gray-100 rounded shadow-sm\",\n          children: [\"[\", log.time, \"] \", log.text]\n        }, log.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-4 space-x-2\",\n        children: Array.from({\n          length: Math.ceil(logsData.length / logsPerPage)\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLogPage(i + 1),\n          className: `px-3 py-1 rounded ${logPage === i + 1 ? \"bg-blue-500 text-white\" : \"bg-gray-200\"}`,\n          children: i + 1\n        }, i + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Logs, \"mvFHHNBtAXXK43aI0hHReDRVNyI=\");\n_c = Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","logsData","id","time","text","Logs","_s","loading","setLoading","logPage","setLogPage","logsPerPage","timer","setTimeout","clearTimeout","indexOfLastLog","indexOfFirstLog","currentLogs","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","log","Array","from","length","Math","ceil","_","i","onClick","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/admin/AdminLogs.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst logsData = [\n  { id: 1, time: \"12:01\", text: \"User John uploaded a file.\" },\n  { id: 2, time: \"12:05\", text: \"Jane logged in.\" },\n  { id: 3, time: \"12:10\", text: \"Error: Failed upload attempt.\" },\n  { id: 4, time: \"12:15\", text: \"System backup completed.\" },\n  { id: 5, time: \"12:20\", text: \"Alice updated her profile.\" },\n  { id: 6, time: \"12:25\", text: \"New user registered.\" },\n];\n\nexport default function Logs() {\n  const [loading, setLoading] = useState(true);\n  const [logPage, setLogPage] = useState(1);\n  const logsPerPage = 3;\n\n  useEffect(() => {\n    const timer = setTimeout(() => setLoading(false), 800);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const indexOfLastLog = logPage * logsPerPage;\n  const indexOfFirstLog = indexOfLastLog - logsPerPage;\n  const currentLogs = logsData.slice(indexOfFirstLog, indexOfLastLog);\n\n  return (\n    <div>\n      <h2 className=\"text-xl font-semibold mb-4\">System Logs</h2>\n      {loading ? (\n        <p className=\"text-gray-500\">Loading logs...</p>\n      ) : (\n        <>\n          <ul className=\"space-y-2\">\n            {currentLogs.map((log) => (\n              <li key={log.id} className=\"p-2 bg-gray-100 rounded shadow-sm\">\n                [{log.time}] {log.text}\n              </li>\n            ))}\n          </ul>\n\n          {/* Pagination */}\n          <div className=\"flex justify-center mt-4 space-x-2\">\n            {Array.from(\n              { length: Math.ceil(logsData.length / logsPerPage) },\n              (_, i) => (\n                <button\n                  key={i + 1}\n                  onClick={() => setLogPage(i + 1)}\n                  className={`px-3 py-1 rounded ${\n                    logPage === i + 1\n                      ? \"bg-blue-500 text-white\"\n                      : \"bg-gray-200\"\n                  }`}\n                >\n                  {i + 1}\n                </button>\n              )\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}