{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\n// OCRUpload.jsx (drop-in replacement)\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]); // [{ columns, rows, raw }]\n  const [summaries, setSummaries] = useState([]); // [{ Charges, Receipts, ... , NOTE }]\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert('⚠️ Session expired or access denied. Please log in again.');\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) navigate('/', {\n      replace: true\n    });\n  }, [auth, isAdmin, navigate]);\n\n  // ---------- Auth ----------\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', {\n        username,\n        password\n      });\n      const {\n        token,\n        username: un,\n        role\n      } = loginRes.data;\n      setAuth({\n        token,\n        username: un,\n        role\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token,\n        username: un,\n        role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage('Signup failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', {\n        username,\n        password\n      });\n      if (res.data.token) {\n        const {\n          token,\n          username: un,\n          role\n        } = res.data;\n        setAuth({\n          token,\n          username: un,\n          role\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token,\n          username: un,\n          role\n        }));\n        setMessage('Login successful!');\n      } else setMessage('Invalid credentials');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage('Login failed: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n\n  // ---------- File Selection ----------\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setSummaries([]);\n    setDownloadReady(false);\n  };\n\n  // ---------- Upload & Parse ----------\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const outTables = [];\n      const outSummaries = [];\n      for (const [idx, file] of files.entries()) {\n        var _res$data;\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('OCR response for', file.name, res.data);\n\n        // Your backend shape (based on your console.log)\n        const md = ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.metadata) || {};\n        const report = md.report || {};\n        const fieldArr = Array.isArray(md.fields) ? md.fields : [];\n        const rawTables = Array.isArray(md.tables) ? md.tables : [];\n        const fixedHeaders = report.columns || [\"Patient Name\", \"Pat Ocr\", \"Responsible Party Name\", \"Rep #\", \"Doc\", \"B-Type\", \"Seen\", \"Service\", \"Type\", \"Office\", \"Code\", \"Description\", \"Amount\", \"Balance\", \"Claim\", \"Loc\", \"Entered\", \"Who\"];\n\n        // We *don’t* fabricate rows from raw text; keep exactly what backend parsed.\n        const rows = Array.isArray(report.rows) ? report.rows : [];\n\n        // Summary: take from fields; if blank, rebuild from rawTables\n        const wanted = [\"Charges\", \"Receipts\", \"Commissions\", \"Total Due Doctor\", \"Credits\", \"Debits\", \"Bal Fwd\", \"Fin Chg\", \"Direct Paymnt\", \"Assess\", \"Acct. Rec.\", \"Total Entries\", \"NOTE\"];\n        const summaryObj = {};\n        // 1) direct (fields)\n        fieldArr.forEach(({\n          Field,\n          Value\n        }) => {\n          if (!Field) return;\n          const key = wanted.find(w => w.toLowerCase() === String(Field).toLowerCase());\n          if (key) summaryObj[key] = Value !== null && Value !== void 0 ? Value : \"\";\n        });\n\n        // 2) fallback (parse raw)\n        if (rawTables.length) {\n          const joined = rawTables.map(x => Array.isArray(x) ? x.join(\" \") : String(x !== null && x !== void 0 ? x : \"\")).join(\" \");\n          const grab = label => {\n            // matches \"Label: 12,345.67\" or \"Label:12,345.67\"\n            const m = new RegExp(`${label.replace(/[.*+?^${}()|[\\\\]\\\\\\\\]/g, '\\\\$&')}\\\\s*:?\\\\s*([0-9,.-]+)`, \"i\").exec(joined);\n            return m ? m[1] : \"\";\n          };\n          wanted.forEach(k => {\n            if (!summaryObj[k] || summaryObj[k] === \"\") {\n              if (k === \"NOTE\") {\n                const m = /NOTE\\s*:?(.+?)(?:\\s{2,}|$)/i.exec(joined);\n                if (m) summaryObj[\"NOTE\"] = m[1].trim();\n              } else {\n                summaryObj[k] = grab(k) || \"\";\n              }\n            }\n          });\n        }\n        outTables[idx] = {\n          columns: fixedHeaders,\n          rows,\n          raw: rawTables\n        };\n        outSummaries[idx] = summaryObj;\n      }\n      setTables(outTables);\n      setSummaries(outSummaries);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ---------- Excel Export ----------\n  const handleDownloadExcel = () => {\n    const wb = XLSX.utils.book_new();\n\n    // Sheet per file: ReportRows_<n>\n    tables.forEach((t, i) => {\n      const data = (t.rows || []).map(r => {\n        const o = {};\n        (t.columns || []).forEach(c => {\n          var _r$c;\n          o[c] = (_r$c = r === null || r === void 0 ? void 0 : r[c]) !== null && _r$c !== void 0 ? _r$c : \"\";\n        });\n        return o;\n      });\n      const ws = XLSX.utils.json_to_sheet(data.length ? data : [{\n        Note: \"No rows\"\n      }]);\n      XLSX.utils.book_append_sheet(wb, ws, `ReportRows_${i + 1}`);\n    });\n\n    // Fields sheet (one row per file)\n    const fieldsRows = summaries.map((s, i) => {\n      var _files$i;\n      return {\n        File: ((_files$i = files[i]) === null || _files$i === void 0 ? void 0 : _files$i.name) || `File_${i + 1}`,\n        ...s\n      };\n    });\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(fieldsRows.length ? fieldsRows : [{\n      Note: \"No summaries\"\n    }]), \"Fields\");\n\n    // RawText_<n> per file\n    tables.forEach((t, i) => {\n      const raw = (t.raw || []).map((line, idx) => ({\n        Line: idx + 1,\n        Text: Array.isArray(line) ? line.join(\" \") : String(line !== null && line !== void 0 ? line : \"\")\n      }));\n      const ws = XLSX.utils.json_to_sheet(raw.length ? raw : [{\n        Note: \"No raw text\"\n      }]);\n      XLSX.utils.book_append_sheet(wb, ws, `RawText_${i + 1}`);\n    });\n    const wbout = XLSX.write(wb, {\n      type: 'array',\n      bookType: 'xlsx'\n    });\n    saveAs(new Blob([wbout], {\n      type: 'application/octet-stream'\n    }), 'ocr_export.xlsx');\n  };\n\n  // ---------- Renderers ----------\n  const ExcelGrid = ({\n    title,\n    columns,\n    rows,\n    summary\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-grid-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"file-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid compact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid-scroll\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"excel-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"excel-th\",\n                children: col\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [rows && rows.length > 0 ? rows.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(col => {\n                var _r$col;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"excel-td\",\n                  children: (_r$col = r === null || r === void 0 ? void 0 : r[col]) !== null && _r$col !== void 0 ? _r$col : ''\n                }, col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this);\n              })\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: columns.length,\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"No rows (showing Summary and Raw OCR below)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), summary && Object.keys(summary).length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"summary-row\",\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: columns.length,\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: [\"Charges: \", summary[\"Charges\"] || 0, \" | Receipts: \", summary[\"Receipts\"] || 0, \" | Credits: \", summary[\"Credits\"] || 0, \" | Debits: \", summary[\"Debits\"] || 0, \" | Balance Fwd: \", summary[\"Bal Fwd\"] || 0, \" | Acct. Rec.: \", summary[\"Acct. Rec.\"] || 0, \" | Total Entries: \", summary[\"Total Entries\"] || 0, summary[\"NOTE\"] ? ` | Note: ${summary[\"NOTE\"]}` : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n  const SummaryCards = ({\n    summary\n  }) => {\n    const keys = [\"Charges\", \"Receipts\", \"Commissions\", \"Total Due Doctor\", \"Credits\", \"Debits\", \"Bal Fwd\", \"Fin Chg\", \"Direct Paymnt\", \"Assess\", \"Acct. Rec.\", \"Total Entries\", \"NOTE\"];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-3 gap-2 my-3\",\n      children: keys.map(k => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-white/15 rounded-lg p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs opacity-70\",\n          children: k\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: summary !== null && summary !== void 0 && summary[k] ? String(summary[k]) : \"—\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)]\n      }, k, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this);\n  };\n  const RawPanel = ({\n    lines\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-64 overflow-auto border border-white/15 rounded-xl p-3 text-xs leading-6 my-2\",\n    children: (lines !== null && lines !== void 0 && lines.length ? lines : [\"(no raw text)\"]).map((t, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"whitespace-pre-wrap\",\n      children: [i + 1, \". \", Array.isArray(t) ? t.join(\" \") : String(t !== null && t !== void 0 ? t : \"\")]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n\n  // ---------- Auth Gate ----------\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Signup' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage('');\n        },\n        children: isSignup ? 'Already have an account? Login' : 'No account? Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ---------- UI ----------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: handleDownloadExcel,\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting table...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }, this), tables.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Procedure Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), files.map((file, idx) => {\n        var _tables$idx, _tables$idx2, _tables$idx3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-10\",\n          children: [/*#__PURE__*/_jsxDEV(ExcelGrid, {\n            title: file.name,\n            columns: ((_tables$idx = tables[idx]) === null || _tables$idx === void 0 ? void 0 : _tables$idx.columns) || [],\n            rows: ((_tables$idx2 = tables[idx]) === null || _tables$idx2 === void 0 ? void 0 : _tables$idx2.rows) || [],\n            summary: summaries[idx] || {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"section-heading\",\n            style: {\n              marginTop: '12px'\n            },\n            children: \"\\uD83D\\uDCCC Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SummaryCards, {\n            summary: summaries[idx] || {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"section-heading\",\n            style: {\n              marginTop: '12px'\n            },\n            children: \"\\uD83E\\uDDFE Raw OCR Lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RawPanel, {\n            lines: ((_tables$idx3 = tables[idx]) === null || _tables$idx3 === void 0 ? void 0 : _tables$idx3.raw) || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, `wrap-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"LzJOiSnKr3bq63SE5thwgkESO00=\", false, function () {\n  return [useNavigate];\n});\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","XLSX","saveAs","jsxDEV","_jsxDEV","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","tables","setTables","summaries","setSummaries","loading","setLoading","downloadReady","setDownloadReady","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","replace","handleSignup","res","post","data","loginRes","un","role","setItem","JSON","stringify","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","e","selected","Array","from","target","length","handleUploadAll","outTables","outSummaries","idx","file","entries","_res$data","formData","FormData","append","console","log","name","md","metadata","report","fieldArr","isArray","fields","rawTables","fixedHeaders","columns","rows","wanted","summaryObj","forEach","Field","Value","key","find","w","toLowerCase","String","joined","map","x","join","grab","label","m","RegExp","exec","k","trim","raw","handleDownloadExcel","wb","utils","book_new","t","i","r","o","c","_r$c","ws","json_to_sheet","Note","book_append_sheet","fieldsRows","s","_files$i","File","line","Line","Text","wbout","write","type","bookType","Blob","ExcelGrid","title","summary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","col","_r$col","colSpan","style","textAlign","Object","keys","fontWeight","SummaryCards","RawPanel","lines","placeholder","value","onChange","onClick","htmlFor","id","accept","multiple","_tables$idx","_tables$idx2","_tables$idx3","marginTop","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["// OCRUpload.jsx (drop-in replacement)\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport '../App.css';\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]);       // [{ columns, rows, raw }]\n  const [summaries, setSummaries] = useState([]); // [{ Charges, Receipts, ... , NOTE }]\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert('⚠️ Session expired or access denied. Please log in again.');\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) navigate('/', { replace: true });\n  }, [auth, isAdmin, navigate]);\n\n  // ---------- Auth ----------\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', { username, password });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', { username, password });\n      const { token, username: un, role } = loginRes.data;\n      setAuth({ token, username: un, role });\n      localStorage.setItem('auth', JSON.stringify({ token, username: un, role }));\n    } catch (err) {\n      setMessage('Signup failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', { username, password });\n      if (res.data.token) {\n        const { token, username: un, role } = res.data;\n        setAuth({ token, username: un, role });\n        localStorage.setItem('auth', JSON.stringify({ token, username: un, role }));\n        setMessage('Login successful!');\n      } else setMessage('Invalid credentials');\n    } catch (err) {\n      setMessage('Login failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  // ---------- File Selection ----------\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setSummaries([]);\n    setDownloadReady(false);\n  };\n\n  // ---------- Upload & Parse ----------\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n\n    try {\n      const outTables = [];\n      const outSummaries = [];\n\n      for (const [idx, file] of files.entries()) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const res = await api.post('/api/ocr', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n\n        console.log('OCR response for', file.name, res.data);\n\n        // Your backend shape (based on your console.log)\n        const md = res.data?.metadata || {};\n        const report = md.report || {};\n        const fieldArr = Array.isArray(md.fields) ? md.fields : [];\n        const rawTables = Array.isArray(md.tables) ? md.tables : [];\n\n        const fixedHeaders = report.columns || [\n          \"Patient Name\",\"Pat Ocr\",\"Responsible Party Name\",\"Rep #\",\"Doc\",\n          \"B-Type\",\"Seen\",\"Service\",\"Type\",\"Office\",\"Code\",\"Description\",\n          \"Amount\",\"Balance\",\"Claim\",\"Loc\",\"Entered\",\"Who\"\n        ];\n\n        // We *don’t* fabricate rows from raw text; keep exactly what backend parsed.\n        const rows = Array.isArray(report.rows) ? report.rows : [];\n\n        // Summary: take from fields; if blank, rebuild from rawTables\n        const wanted = [\n          \"Charges\",\"Receipts\",\"Commissions\",\"Total Due Doctor\",\"Credits\",\"Debits\",\n          \"Bal Fwd\",\"Fin Chg\",\"Direct Paymnt\",\"Assess\",\"Acct. Rec.\",\"Total Entries\",\"NOTE\"\n        ];\n\n        const summaryObj = {};\n        // 1) direct (fields)\n        fieldArr.forEach(({ Field, Value }) => {\n          if (!Field) return;\n          const key = wanted.find(w => w.toLowerCase() === String(Field).toLowerCase());\n          if (key) summaryObj[key] = Value ?? \"\";\n        });\n\n        // 2) fallback (parse raw)\n        if (rawTables.length) {\n          const joined = rawTables\n            .map(x => (Array.isArray(x) ? x.join(\" \") : String(x ?? \"\")))\n            .join(\" \");\n          const grab = (label) => {\n            // matches \"Label: 12,345.67\" or \"Label:12,345.67\"\n            const m = new RegExp(`${label.replace(/[.*+?^${}()|[\\\\]\\\\\\\\]/g, '\\\\$&')}\\\\s*:?\\\\s*([0-9,.-]+)`, \"i\").exec(joined);\n            return m ? m[1] : \"\";\n          };\n          wanted.forEach(k => {\n            if (!summaryObj[k] || summaryObj[k] === \"\") {\n              if (k === \"NOTE\") {\n                const m = /NOTE\\s*:?(.+?)(?:\\s{2,}|$)/i.exec(joined);\n                if (m) summaryObj[\"NOTE\"] = m[1].trim();\n              } else {\n                summaryObj[k] = grab(k) || \"\";\n              }\n            }\n          });\n        }\n\n        outTables[idx] = { columns: fixedHeaders, rows, raw: rawTables };\n        outSummaries[idx] = summaryObj;\n      }\n\n      setTables(outTables);\n      setSummaries(outSummaries);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ---------- Excel Export ----------\n  const handleDownloadExcel = () => {\n    const wb = XLSX.utils.book_new();\n\n    // Sheet per file: ReportRows_<n>\n    tables.forEach((t, i) => {\n      const data = (t.rows || []).map(r => {\n        const o = {};\n        (t.columns || []).forEach(c => { o[c] = r?.[c] ?? \"\"; });\n        return o;\n      });\n      const ws = XLSX.utils.json_to_sheet(data.length ? data : [{ Note: \"No rows\" }]);\n      XLSX.utils.book_append_sheet(wb, ws, `ReportRows_${i + 1}`);\n    });\n\n    // Fields sheet (one row per file)\n    const fieldsRows = summaries.map((s, i) => ({ File: files[i]?.name || `File_${i + 1}`, ...s }));\n    XLSX.utils.book_append_sheet(\n      wb,\n      XLSX.utils.json_to_sheet(fieldsRows.length ? fieldsRows : [{ Note: \"No summaries\" }]),\n      \"Fields\"\n    );\n\n    // RawText_<n> per file\n    tables.forEach((t, i) => {\n      const raw = (t.raw || []).map((line, idx) => ({\n        Line: idx + 1,\n        Text: Array.isArray(line) ? line.join(\" \") : String(line ?? \"\")\n      }));\n      const ws = XLSX.utils.json_to_sheet(raw.length ? raw : [{ Note: \"No raw text\" }]);\n      XLSX.utils.book_append_sheet(wb, ws, `RawText_${i + 1}`);\n    });\n\n    const wbout = XLSX.write(wb, { type: 'array', bookType: 'xlsx' });\n    saveAs(new Blob([wbout], { type: 'application/octet-stream' }), 'ocr_export.xlsx');\n  };\n\n  // ---------- Renderers ----------\n  const ExcelGrid = ({ title, columns, rows, summary }) => (\n    <div className=\"excel-grid-wrapper\">\n      <div className=\"excel-grid-header\">\n        <h4 className=\"file-title\">{title}</h4>\n      </div>\n      <div className=\"excel-grid compact\">\n        <div className=\"excel-grid-scroll\">\n          <table className=\"excel-table\">\n            <thead>\n              <tr>\n                {columns.map((col) => (\n                  <th key={col} className=\"excel-th\">{col}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {rows && rows.length > 0 ? (\n                rows.map((r, i) => (\n                  <tr key={i}>\n                    {columns.map((col) => (\n                      <td key={col} className=\"excel-td\">{r?.[col] ?? ''}</td>\n                    ))}\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan={columns.length} style={{ textAlign: 'center' }}>\n                    No rows (showing Summary and Raw OCR below)\n                  </td>\n                </tr>\n              )}\n              {summary && Object.keys(summary).length > 0 && (\n                <tr className=\"summary-row\">\n                  <td colSpan={columns.length} style={{ fontWeight: 'bold' }}>\n                    Charges: {summary[\"Charges\"] || 0} | Receipts: {summary[\"Receipts\"] || 0} | \n                    Credits: {summary[\"Credits\"] || 0} | Debits: {summary[\"Debits\"] || 0} | \n                    Balance Fwd: {summary[\"Bal Fwd\"] || 0} | Acct. Rec.: {summary[\"Acct. Rec.\"] || 0} | \n                    Total Entries: {summary[\"Total Entries\"] || 0}\n                    {summary[\"NOTE\"] ? ` | Note: ${summary[\"NOTE\"]}` : \"\"}\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n\n  const SummaryCards = ({ summary }) => {\n    const keys = [\n      \"Charges\",\"Receipts\",\"Commissions\",\"Total Due Doctor\",\"Credits\",\"Debits\",\n      \"Bal Fwd\",\"Fin Chg\",\"Direct Paymnt\",\"Assess\",\"Acct. Rec.\",\"Total Entries\",\"NOTE\"\n    ];\n    return (\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 my-3\">\n        {keys.map(k => (\n          <div key={k} className=\"border border-white/15 rounded-lg p-2\">\n            <div className=\"text-xs opacity-70\">{k}</div>\n            <div className=\"font-semibold\">{summary?.[k] ? String(summary[k]) : \"—\"}</div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const RawPanel = ({ lines }) => (\n    <div className=\"h-64 overflow-auto border border-white/15 rounded-xl p-3 text-xs leading-6 my-2\">\n      {(lines?.length ? lines : [\"(no raw text)\"]).map((t, i) => (\n        <div key={i} className=\"whitespace-pre-wrap\">\n          {i + 1}. {Array.isArray(t) ? t.join(\" \") : String(t ?? \"\")}\n        </div>\n      ))}\n    </div>\n  );\n\n  // ---------- Auth Gate ----------\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? 'Signup' : 'Login'}</h2>\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"auth-input\" />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"auth-input\" />\n        {isSignup ? (\n          <button className=\"auth-btn\" onClick={handleSignup}>Signup</button>\n        ) : (\n          <button className=\"auth-btn\" onClick={handleLogin}>Login</button>\n        )}\n        <button className=\"toggle-btn\" onClick={() => { setIsSignup(!isSignup); setMessage(''); }}>\n          {isSignup ? 'Already have an account? Login' : 'No account? Signup'}\n        </button>\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  // ---------- UI ----------\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">\n          {isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'}\n        </h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>Upload All</button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={handleDownloadExcel}>\n              ⬇️ Download Excel\n            </button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, i) => (<li key={i}>📎 {file.name}</li>))}\n          </ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting table...</p>}\n\n      {tables.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Procedure Report</h3>\n\n          {files.map((file, idx) => (\n            <div key={`wrap-${idx}`} className=\"mb-10\">\n              <ExcelGrid\n                title={file.name}\n                columns={tables[idx]?.columns || []}\n                rows={tables[idx]?.rows || []}\n                summary={summaries[idx] || {}}\n              />\n\n              <h4 className=\"section-heading\" style={{ marginTop: '12px' }}>📌 Summary</h4>\n              <SummaryCards summary={summaries[idx] || {}} />\n\n              <h4 className=\"section-heading\" style={{ marginTop: '12px' }}>🧾 Raw OCR Lines</h4>\n              <RawPanel lines={tables[idx]?.raw || []} />\n            </div>\n          ))}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}