{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/admin/AdminLogs.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./AdminLogs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst logsData = [{\n  id: 1,\n  time: \"2025-08-21 12:01\",\n  text: \"User John uploaded a file.\"\n}, {\n  id: 2,\n  time: \"2025-08-21 12:05\",\n  text: \"Jane logged in.\"\n}, {\n  id: 3,\n  time: \"2025-08-21 12:10\",\n  text: \"Error: Failed upload attempt.\"\n}, {\n  id: 4,\n  time: \"2025-08-21 12:15\",\n  text: \"System backup completed.\"\n}, {\n  id: 5,\n  time: \"2025-08-21 12:20\",\n  text: \"Alice updated her profile.\"\n}, {\n  id: 6,\n  time: \"2025-08-21 12:25\",\n  text: \"New user registered.\"\n}];\nexport default function Logs() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [logPage, setLogPage] = useState(1);\n  const [search, setSearch] = useState(\"\");\n  const logsPerPage = 3;\n  useEffect(() => {\n    const timer = setTimeout(() => setLoading(false), 500);\n    return () => clearTimeout(timer);\n  }, []);\n  const filteredLogs = logsData.filter(log => log.text.toLowerCase().includes(search.toLowerCase()));\n  const indexOfLastLog = logPage * logsPerPage;\n  const indexOfFirstLog = indexOfLastLog - logsPerPage;\n  const currentLogs = filteredLogs.slice(indexOfFirstLog, indexOfLastLog);\n  const getLogType = text => text.toLowerCase().includes(\"error\") ? \"error\" : \"info\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logs-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"logs-title\",\n      children: \"System Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search logs...\",\n        className: \"logs-search\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"Loading logs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : currentLogs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"No logs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"logs-list\",\n        children: currentLogs.map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `log-item ${getLogType(log.text)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"log-time\",\n            children: [\"[\", log.time, \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"log-text\",\n            children: log.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `log-badge ${getLogType(log.text)}`,\n            children: getLogType(log.text).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, log.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: Math.ceil(filteredLogs.length / logsPerPage)\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLogPage(i + 1),\n          className: `page-btn ${logPage === i + 1 ? \"active-page\" : \"\"}`,\n          children: i + 1\n        }, i + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Logs, \"94Xd2TB52rn/oGF84jwnhPIM/BE=\");\n_c = Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","logsData","id","time","text","Logs","_s","loading","setLoading","logPage","setLogPage","search","setSearch","logsPerPage","timer","setTimeout","clearTimeout","filteredLogs","filter","log","toLowerCase","includes","indexOfLastLog","indexOfFirstLog","currentLogs","slice","getLogType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","toUpperCase","Array","from","Math","ceil","_","i","onClick","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/admin/AdminLogs.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./AdminLogs.css\";\n\nconst logsData = [\n  { id: 1, time: \"2025-08-21 12:01\", text: \"User John uploaded a file.\" },\n  { id: 2, time: \"2025-08-21 12:05\", text: \"Jane logged in.\" },\n  { id: 3, time: \"2025-08-21 12:10\", text: \"Error: Failed upload attempt.\" },\n  { id: 4, time: \"2025-08-21 12:15\", text: \"System backup completed.\" },\n  { id: 5, time: \"2025-08-21 12:20\", text: \"Alice updated her profile.\" },\n  { id: 6, time: \"2025-08-21 12:25\", text: \"New user registered.\" },\n];\n\nexport default function Logs() {\n  const [loading, setLoading] = useState(true);\n  const [logPage, setLogPage] = useState(1);\n  const [search, setSearch] = useState(\"\");\n  const logsPerPage = 3;\n\n  useEffect(() => {\n    const timer = setTimeout(() => setLoading(false), 500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const filteredLogs = logsData.filter((log) =>\n    log.text.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const indexOfLastLog = logPage * logsPerPage;\n  const indexOfFirstLog = indexOfLastLog - logsPerPage;\n  const currentLogs = filteredLogs.slice(indexOfFirstLog, indexOfLastLog);\n\n  const getLogType = (text) => (text.toLowerCase().includes(\"error\") ? \"error\" : \"info\");\n\n  return (\n    <div className=\"logs-page\">\n      <h2 className=\"logs-title\">System Logs</h2>\n\n      {/* Search */}\n      <div className=\"logs-controls\">\n        <input\n          type=\"text\"\n          placeholder=\"Search logs...\"\n          className=\"logs-search\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n      </div>\n\n      {loading ? (\n        <p className=\"loading-text\">Loading logs...</p>\n      ) : currentLogs.length === 0 ? (\n        <p className=\"loading-text\">No logs found.</p>\n      ) : (\n        <div className=\"logs-container\">\n          <ul className=\"logs-list\">\n            {currentLogs.map((log) => (\n              <li\n                key={log.id}\n                className={`log-item ${getLogType(log.text)}`}\n              >\n                <span className=\"log-time\">[{log.time}]</span>\n                <span className=\"log-text\">{log.text}</span>\n                <span className={`log-badge ${getLogType(log.text)}`}>\n                  {getLogType(log.text).toUpperCase()}\n                </span>\n              </li>\n            ))}\n          </ul>\n\n          {/* Pagination */}\n          <div className=\"pagination\">\n            {Array.from(\n              { length: Math.ceil(filteredLogs.length / logsPerPage) },\n              (_, i) => (\n                <button\n                  key={i + 1}\n                  onClick={() => setLogPage(i + 1)}\n                  className={`page-btn ${logPage === i + 1 ? \"active-page\" : \"\"}`}\n                >\n                  {i + 1}\n                </button>\n              )\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}