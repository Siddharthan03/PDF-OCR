{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\n// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small UI helpers\n   --------------------- */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderMetaValue({\n  value\n}) {\n  if (typeof value === \"string\" && value.startsWith(\"/signatures/\")) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: value,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: value,\n        alt: \"signature\",\n        className: \"signature-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n  if (Array.isArray(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value.join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  if (typeof value === \"object\" && value !== null) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        whiteSpace: \"pre-wrap\",\n        margin: 0\n      },\n      children: JSON.stringify(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: String(value !== null && value !== void 0 ? value : \"\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n\n/* Show metadata vertically; if combinedCounts provided, show combined totals for the table keys */\n_c = RenderMetaValue;\nfunction MetadataVertical({\n  meta,\n  combinedCounts = {}\n}) {\n  if (!meta || Object.keys(meta).length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty\",\n    children: \"No metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 55\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"metadata-vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Object.keys(meta).map(k => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"meta-key\",\n          children: k\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"meta-val\",\n          children: (k === \"Procedure / Billing (All Tables)\" || k === \"Procedure / Billing\") && combinedCounts.procsTotal !== undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [combinedCounts.procsTotal, \" row(s) \\u2014 shown in tables below\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this) : (k === \"Diagnosis (All Tables)\" || k === \"Diagnosis\") && combinedCounts.diagsTotal !== undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [combinedCounts.diagsTotal, \" row(s) \\u2014 shown in tables below\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(RenderMetaValue, {\n            value: meta[k]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, k, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n/* clean/normalize fee strings (best-effort) */\n_c2 = MetadataVertical;\nfunction _cleanFeeString(s) {\n  if (s === undefined || s === null) return \"\";\n  let raw = String(s).trim();\n  if (!raw) return \"\";\n  raw = raw.replace(/\\s+/g, \" \");\n  raw = raw.replace(/^[\\|\\[\\(]+/, \"\");\n  // combine patterns like \"2 00.00\" -> \"200.00\"\n  raw = raw.replace(/(\\d)\\s+(\\d{2}\\.\\d{2})$/, \"$1$2\");\n  // if it's digits only and longer than 2, assume last two digits are decimals\n  if (/^\\d+$/.test(raw) && raw.length > 2) {\n    raw = raw.slice(0, raw.length - 2) + \".\" + raw.slice(-2);\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(raw) && !/\\.\\d{2}$/.test(raw)) {\n    const parts = raw.split(\".\");\n    if (parts.length === 1) raw = raw + \".00\";else if (parts[1].length === 1) raw = raw + \"0\";\n  }\n  return raw;\n}\nfunction normalizeProcRow(r) {\n  var _ref, _ref2, _r$Code, _ref3, _ref4, _r$Description, _ref5, _ref6, _ref7, _ref8, _r$Fee;\n  if (!r) return [\"\", \"\", \"\"];\n  if (Array.isArray(r)) {\n    var _r$, _r$2, _r$3;\n    const code = (_r$ = r[0]) !== null && _r$ !== void 0 ? _r$ : \"\";\n    const desc = (_r$2 = r[1]) !== null && _r$2 !== void 0 ? _r$2 : \"\";\n    const fee = (_r$3 = r[2]) !== null && _r$3 !== void 0 ? _r$3 : \"\";\n    return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n  }\n  // dict shape\n  const code = (_ref = (_ref2 = (_r$Code = r.Code) !== null && _r$Code !== void 0 ? _r$Code : r.code) !== null && _ref2 !== void 0 ? _ref2 : r.code_value) !== null && _ref !== void 0 ? _ref : \"\";\n  const desc = (_ref3 = (_ref4 = (_r$Description = r.Description) !== null && _r$Description !== void 0 ? _r$Description : r.description) !== null && _ref4 !== void 0 ? _ref4 : r.Desc) !== null && _ref3 !== void 0 ? _ref3 : \"\";\n  const fee = (_ref5 = (_ref6 = (_ref7 = (_ref8 = (_r$Fee = r.Fee) !== null && _r$Fee !== void 0 ? _r$Fee : r.fee) !== null && _ref8 !== void 0 ? _ref8 : r.Amount) !== null && _ref7 !== void 0 ? _ref7 : r.amount) !== null && _ref6 !== void 0 ? _ref6 : r.Price) !== null && _ref5 !== void 0 ? _ref5 : \"\";\n  return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n}\n\n/* ---------------------\n   Table components\n   --------------------- */\n\nfunction ProcedureTables({\n  tables\n}) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No procedure / billing tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"procedures-root\",\n    children: Object.entries(tables).map(([section, rowsRaw]) => {\n      // defensive: ensure rows is an array\n      const rows = Array.isArray(rowsRaw) ? rowsRaw : rowsRaw && typeof rowsRaw === \"object\" ? Object.values(rowsRaw) : [];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"table-section-title\",\n          children: section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"excel-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Fee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: rows && rows.length > 0 ? rows.map((r, i) => {\n              const [code, desc, fee] = normalizeProcRow(r);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: desc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: fee\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 23\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 3,\n                style: {\n                  textAlign: \"center\"\n                },\n                children: \"No rows\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, section, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ProcedureTables;\nfunction DiagnosisTables({\n  tables,\n  highlightCodes = new Set()\n}) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: \"No diagnosis tables found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagnosis-root\",\n    children: Object.entries(tables).map(([section, rowsRaw]) => {\n      const rows = Array.isArray(rowsRaw) ? rowsRaw : rowsRaw && typeof rowsRaw === \"object\" ? Object.values(rowsRaw) : [];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"table-section-title\",\n          children: section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"excel-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Diagnosis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: rows && rows.length > 0 ? rows.map((r, i) => {\n              var _ref9, _r$Type, _ref0, _r$Code2, _ref1, _ref10, _ref11, _r$Diagnosis;\n              const type = Array.isArray(r) ? r[0] : (_ref9 = (_r$Type = r.Type) !== null && _r$Type !== void 0 ? _r$Type : r.type) !== null && _ref9 !== void 0 ? _ref9 : \"ICD-10\";\n              const code = Array.isArray(r) ? r[1] : (_ref0 = (_r$Code2 = r.Code) !== null && _r$Code2 !== void 0 ? _r$Code2 : r.code) !== null && _ref0 !== void 0 ? _ref0 : \"\";\n              const desc = Array.isArray(r) ? r[2] : (_ref1 = (_ref10 = (_ref11 = (_r$Diagnosis = r.Diagnosis) !== null && _r$Diagnosis !== void 0 ? _r$Diagnosis : r.diagnosis) !== null && _ref11 !== void 0 ? _ref11 : r.Description) !== null && _ref10 !== void 0 ? _ref10 : r.description) !== null && _ref1 !== void 0 ? _ref1 : \"\";\n              const isMatch = highlightCodes.has(String(code).trim());\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: isMatch ? \"highlight-row\" : \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: desc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 23\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 3,\n                style: {\n                  textAlign: \"center\"\n                },\n                children: \"No rows\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, section, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   Patient block\n   --------------------- */\n_c4 = DiagnosisTables;\nfunction PatientBlock({\n  patient,\n  procedureTables = {},\n  diagnosisTables = {}\n}) {\n  var _ref12, _patient$PatientName;\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach(v => {\n    try {\n      const str = String(v || \"\");\n      const m = str.match(icdRegex);\n      if (m) m.forEach(code => highlightCodes.add(code.trim()));\n    } catch (e) {}\n  });\n  const patientProcs = Array.isArray(patient[\"Procedure / Billing (All Tables)\"]) ? patient[\"Procedure / Billing (All Tables)\"] : Array.isArray(patient[\"Procedure / Billing\"]) ? patient[\"Procedure / Billing\"] : [];\n  const patientDiags = Array.isArray(patient[\"Diagnosis (All Tables)\"]) ? patient[\"Diagnosis (All Tables)\"] : Array.isArray(patient[\"Diagnosis\"]) ? patient[\"Diagnosis\"] : [];\n  const totalProcsFromPatient = patientProcs.length;\n  const totalDiagsFromPatient = patientDiags.length;\n  const totalProcsFromGlobal = Object.values(procedureTables || {}).reduce((s, a) => s + (a && a.length || 0), 0);\n  const totalDiagsFromGlobal = Object.values(diagnosisTables || {}).reduce((s, a) => s + (a && a.length || 0), 0);\n  const procsTotal = totalProcsFromPatient + totalProcsFromGlobal;\n  const diagsTotal = totalDiagsFromPatient + totalDiagsFromGlobal;\n\n  // Combined tables for display\n  const combinedProcedureTables = {};\n  if (patientProcs && patientProcs.length) combinedProcedureTables[\"Patient Procedures\"] = patientProcs;\n  Object.entries(procedureTables || {}).forEach(([sec, rows]) => {\n    combinedProcedureTables[sec] = (combinedProcedureTables[sec] || []).concat(rows || []);\n  });\n  const combinedDiagnosisTables = {};\n  if (patientDiags && patientDiags.length) combinedDiagnosisTables[\"Patient Diagnosis\"] = patientDiags;\n  Object.entries(diagnosisTables || {}).forEach(([sec, rows]) => {\n    combinedDiagnosisTables[sec] = (combinedDiagnosisTables[sec] || []).concat(rows || []);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Patient: \", (_ref12 = (_patient$PatientName = patient[\"Patient Name\"]) !== null && _patient$PatientName !== void 0 ? _patient$PatientName : patient[\"Patient\"]) !== null && _ref12 !== void 0 ? _ref12 : \"Unknown\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient-sub\",\n        children: \"Preview of patient fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-meta-grid\",\n      children: /*#__PURE__*/_jsxDEV(MetadataVertical, {\n        meta: patient,\n        combinedCounts: {\n          procsTotal,\n          diagsTotal\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-tables\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        children: \"Procedure / Billing (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProcedureTables, {\n        tables: combinedProcedureTables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"section-title\",\n        style: {\n          marginTop: 12\n        },\n        children: \"Diagnosis (All Tables)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiagnosisTables, {\n        tables: combinedDiagnosisTables,\n        highlightCodes: highlightCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), highlightCodes.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matched-note\",\n        children: [\"Highlighted diagnosis codes found in patient fields: \", Array.from(highlightCodes).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------------------\n   ResultBlock + main component\n   --------------------- */\n_c5 = PatientBlock;\nfunction ResultBlock({\n  item\n}) {\n  const patients = item.patients || item.patients_list || [];\n  const procedureTables = item.procedure_tables || item.procedureTables || item.procedureTables || item.procedure_tables || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosisTables || item.diagnosis_tables || {};\n  const procTablesMutable = {\n    ...procedureTables\n  };\n  const diagTablesMutable = {\n    ...diagnosisTables\n  };\n  if (Object.keys(procTablesMutable).length === 0 && Array.isArray(item.medical_billing_codes) && item.medical_billing_codes.length) {\n    procTablesMutable[\"Procedures\"] = item.medical_billing_codes.map(r => {\n      var _ref13, _r$Code3, _ref14, _r$Description2, _ref15, _r$Fee2;\n      return Array.isArray(r) ? r : [(_ref13 = (_r$Code3 = r.Code) !== null && _r$Code3 !== void 0 ? _r$Code3 : r.code) !== null && _ref13 !== void 0 ? _ref13 : \"\", (_ref14 = (_r$Description2 = r.Description) !== null && _r$Description2 !== void 0 ? _r$Description2 : r.description) !== null && _ref14 !== void 0 ? _ref14 : \"\", (_ref15 = (_r$Fee2 = r.Fee) !== null && _r$Fee2 !== void 0 ? _r$Fee2 : r.fee) !== null && _ref15 !== void 0 ? _ref15 : \"\"];\n    });\n  }\n  if (Object.keys(diagTablesMutable).length === 0 && Array.isArray(item.diagnosis_codes) && item.diagnosis_codes.length) {\n    diagTablesMutable[\"Diagnosis\"] = item.diagnosis_codes.map(d => {\n      var _ref16, _d$Type, _ref17, _d$Code, _ref18, _ref19, _ref20, _d$Diagnosis;\n      return Array.isArray(d) ? d : [(_ref16 = (_d$Type = d.Type) !== null && _d$Type !== void 0 ? _d$Type : d.type) !== null && _ref16 !== void 0 ? _ref16 : \"ICD-10\", (_ref17 = (_d$Code = d.Code) !== null && _d$Code !== void 0 ? _d$Code : d.code) !== null && _ref17 !== void 0 ? _ref17 : \"\", (_ref18 = (_ref19 = (_ref20 = (_d$Diagnosis = d.Diagnosis) !== null && _d$Diagnosis !== void 0 ? _d$Diagnosis : d.diagnosis) !== null && _ref20 !== void 0 ? _ref20 : d.Description) !== null && _ref19 !== void 0 ? _ref19 : d.description) !== null && _ref18 !== void 0 ? _ref18 : \"\"];\n    });\n  }\n  const totalProcRows = Object.values(procTablesMutable).reduce((s, a) => s + (a && a.length || 0), 0);\n  const totalDiagRows = Object.values(diagTablesMutable).reduce((s, a) => s + (a && a.length || 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"file-title\",\n      children: item.file_name || item.filename || \"Uploaded file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [patients.length, \" patient(s) \\u2022 \", totalProcRows, \" procedure rows \\u2022 \", totalDiagRows, \" diagnosis rows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"patients-list\",\n      children: patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: \"No patients found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this) : patients.map((p, idx) => /*#__PURE__*/_jsxDEV(PatientBlock, {\n        patient: p,\n        procedureTables: procTablesMutable,\n        diagnosisTables: diagTablesMutable\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Raw response (debug)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          maxHeight: 260,\n          overflow: \"auto\",\n          background: \"#0b1220\",\n          color: \"#cbd5e1\",\n          padding: 8\n        },\n        children: JSON.stringify(item, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}\n_c6 = ResultBlock;\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert(\"⚠️ Session expired or access denied. Please log in again.\");\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) {\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n    // eslint-disable-next-line\n  }, [auth, isAdmin, navigate]);\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", {\n        username,\n        password\n      });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      const {\n        token,\n        username: un,\n        role\n      } = loginRes.data;\n      setAuth({\n        token,\n        username: un,\n        role\n      });\n      localStorage.setItem(\"auth\", JSON.stringify({\n        token,\n        username: un,\n        role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(\"Signup failed: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", {\n        username,\n        password\n      });\n      if (res.data.token) {\n        const {\n          token,\n          username: un,\n          role\n        } = res.data;\n        setAuth({\n          token,\n          username: un,\n          role\n        });\n        localStorage.setItem(\"auth\", JSON.stringify({\n          token,\n          username: un,\n          role\n        }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage(\"Login failed: \" + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {}\n      };\n    }\n\n    // canonical shape: patients, procedure_tables, diagnosis_tables\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {}\n      };\n    }\n\n    // older shapes\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes) ? resData.medical_billing_codes.map(r => {\n          var _ref21, _r$Code4, _ref22, _r$Description3, _ref23, _r$Fee3;\n          return Array.isArray(r) ? r : [(_ref21 = (_r$Code4 = r.Code) !== null && _r$Code4 !== void 0 ? _r$Code4 : r.code) !== null && _ref21 !== void 0 ? _ref21 : \"\", (_ref22 = (_r$Description3 = r.Description) !== null && _r$Description3 !== void 0 ? _r$Description3 : r.description) !== null && _ref22 !== void 0 ? _ref22 : \"\", (_ref23 = (_r$Fee3 = r.Fee) !== null && _r$Fee3 !== void 0 ? _r$Fee3 : r.fee) !== null && _ref23 !== void 0 ? _ref23 : \"\"];\n        }) : []\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes) ? resData.diagnosis_codes.map(d => {\n          var _ref24, _d$Type2, _ref25, _d$Code2, _ref26, _ref27, _ref28, _d$Diagnosis2;\n          return Array.isArray(d) ? d : [(_ref24 = (_d$Type2 = d.Type) !== null && _d$Type2 !== void 0 ? _d$Type2 : d.type) !== null && _ref24 !== void 0 ? _ref24 : \"ICD-10\", (_ref25 = (_d$Code2 = d.Code) !== null && _d$Code2 !== void 0 ? _d$Code2 : d.code) !== null && _ref25 !== void 0 ? _ref25 : \"\", (_ref26 = (_ref27 = (_ref28 = (_d$Diagnosis2 = d.Diagnosis) !== null && _d$Diagnosis2 !== void 0 ? _d$Diagnosis2 : d.diagnosis) !== null && _ref28 !== void 0 ? _ref28 : d.Description) !== null && _ref27 !== void 0 ? _ref27 : d.description) !== null && _ref26 !== void 0 ? _ref26 : \"\"];\n        }) : []\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {}\n      };\n    }\n\n    // fallback: if metadata present\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta\n    };\n  };\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isSignup ? \"Signup\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"glass-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"glass-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          onClick: handleSignup,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glass-btn\",\n          style: {\n            marginTop: 8\n          },\n          onClick: () => {\n            setIsSignup(!isSignup);\n            setMessage(\"\");\n          },\n          children: isSignup ? \"Already have an account? Login\" : \"No account? Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        style: {\n          marginTop: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 61\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting tables...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 19\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Parsed Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this), results.map((item, idx) => /*#__PURE__*/_jsxDEV(ResultBlock, {\n        item: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 499,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"rHWvzCgLol+q0ups8j2Fj9RAf2Q=\", false, function () {\n  return [useNavigate];\n});\n_c7 = OCRUpload;\nexport default OCRUpload;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"RenderMetaValue\");\n$RefreshReg$(_c2, \"MetadataVertical\");\n$RefreshReg$(_c3, \"ProcedureTables\");\n$RefreshReg$(_c4, \"DiagnosisTables\");\n$RefreshReg$(_c5, \"PatientBlock\");\n$RefreshReg$(_c6, \"ResultBlock\");\n$RefreshReg$(_c7, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","RenderMetaValue","value","startsWith","href","target","rel","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","join","style","whiteSpace","margin","JSON","stringify","String","_c","MetadataVertical","meta","combinedCounts","Object","keys","length","map","k","procsTotal","undefined","diagsTotal","_c2","_cleanFeeString","s","raw","trim","replace","test","slice","parts","split","normalizeProcRow","r","_ref","_ref2","_r$Code","_ref3","_ref4","_r$Description","_ref5","_ref6","_ref7","_ref8","_r$Fee","_r$","_r$2","_r$3","code","desc","fee","Code","code_value","Description","description","Desc","Fee","Amount","amount","Price","ProcedureTables","tables","entries","section","rowsRaw","rows","values","i","colSpan","textAlign","_c3","DiagnosisTables","highlightCodes","Set","_ref9","_r$Type","_ref0","_r$Code2","_ref1","_ref10","_ref11","_r$Diagnosis","type","Type","Diagnosis","diagnosis","isMatch","has","_c4","PatientBlock","patient","procedureTables","diagnosisTables","_ref12","_patient$PatientName","icdRegex","forEach","v","str","m","match","add","e","patientProcs","patientDiags","totalProcsFromPatient","totalDiagsFromPatient","totalProcsFromGlobal","reduce","a","totalDiagsFromGlobal","combinedProcedureTables","sec","concat","combinedDiagnosisTables","marginTop","size","from","_c5","ResultBlock","item","patients","patients_list","procedure_tables","diagnosis_tables","procTablesMutable","diagTablesMutable","medical_billing_codes","_ref13","_r$Code3","_ref14","_r$Description2","_ref15","_r$Fee2","diagnosis_codes","d","_ref16","_d$Type","_ref17","_d$Code","_ref18","_ref19","_ref20","_d$Diagnosis","totalProcRows","totalDiagRows","file_name","filename","p","idx","maxHeight","overflow","background","color","padding","_c6","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","results","setResults","loading","setLoading","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","_error$response","includes","status","localStorage","clear","alert","Promise","reject","handleSignup","res","post","data","loginRes","un","role","setItem","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","selected","buildItemFromResponse","resData","file","name","metadata","procedures","Procedures","_ref21","_r$Code4","_ref22","_r$Description3","_ref23","_r$Fee3","diags","_ref24","_d$Type2","_ref25","_d$Code2","_ref26","_ref27","_ref28","_d$Diagnosis2","handleUploadAll","out","formData","FormData","append","push","console","placeholder","onChange","onClick","htmlFor","id","accept","multiple","disabled","_c7","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["// src/components/OCRUpload.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\n/* ---------------------\n   Small UI helpers\n   --------------------- */\n\nfunction RenderMetaValue({ value }) {\n  if (typeof value === \"string\" && value.startsWith(\"/signatures/\")) {\n    return (\n      <a href={value} target=\"_blank\" rel=\"noreferrer\">\n        <img src={value} alt=\"signature\" className=\"signature-img\" />\n      </a>\n    );\n  }\n  if (Array.isArray(value)) {\n    return <div>{value.join(\", \")}</div>;\n  }\n  if (typeof value === \"object\" && value !== null) {\n    return <pre style={{ whiteSpace: \"pre-wrap\", margin: 0 }}>{JSON.stringify(value)}</pre>;\n  }\n  return <span>{String(value ?? \"\")}</span>;\n}\n\n/* Show metadata vertically; if combinedCounts provided, show combined totals for the table keys */\nfunction MetadataVertical({ meta, combinedCounts = {} }) {\n  if (!meta || Object.keys(meta).length === 0) return <div className=\"empty\">No metadata</div>;\n  return (\n    <table className=\"metadata-vertical\">\n      <tbody>\n        {Object.keys(meta).map((k) => (\n          <tr key={k}>\n            <th className=\"meta-key\">{k}</th>\n            <td className=\"meta-val\">\n              {(k === \"Procedure / Billing (All Tables)\" || k === \"Procedure / Billing\") && combinedCounts.procsTotal !== undefined ? (\n                <span>{combinedCounts.procsTotal} row(s) — shown in tables below</span>\n              ) : (k === \"Diagnosis (All Tables)\" || k === \"Diagnosis\") && combinedCounts.diagsTotal !== undefined ? (\n                <span>{combinedCounts.diagsTotal} row(s) — shown in tables below</span>\n              ) : (\n                <RenderMetaValue value={meta[k]} />\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\n/* clean/normalize fee strings (best-effort) */\nfunction _cleanFeeString(s) {\n  if (s === undefined || s === null) return \"\";\n  let raw = String(s).trim();\n  if (!raw) return \"\";\n  raw = raw.replace(/\\s+/g, \" \");\n  raw = raw.replace(/^[\\|\\[\\(]+/, \"\");\n  // combine patterns like \"2 00.00\" -> \"200.00\"\n  raw = raw.replace(/(\\d)\\s+(\\d{2}\\.\\d{2})$/, \"$1$2\");\n  // if it's digits only and longer than 2, assume last two digits are decimals\n  if (/^\\d+$/.test(raw) && raw.length > 2) {\n    raw = raw.slice(0, raw.length - 2) + \".\" + raw.slice(-2);\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(raw) && !/\\.\\d{2}$/.test(raw)) {\n    const parts = raw.split(\".\");\n    if (parts.length === 1) raw = raw + \".00\";\n    else if (parts[1].length === 1) raw = raw + \"0\";\n  }\n  return raw;\n}\n\nfunction normalizeProcRow(r) {\n  if (!r) return [\"\", \"\", \"\"];\n  if (Array.isArray(r)) {\n    const code = r[0] ?? \"\";\n    const desc = r[1] ?? \"\";\n    const fee = r[2] ?? \"\";\n    return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n  }\n  // dict shape\n  const code = r.Code ?? r.code ?? r.code_value ?? \"\";\n  const desc = r.Description ?? r.description ?? r.Desc ?? \"\";\n  const fee = r.Fee ?? r.fee ?? r.Amount ?? r.amount ?? r.Price ?? \"\";\n  return [String(code).trim(), String(desc).trim(), _cleanFeeString(fee)];\n}\n\n/* ---------------------\n   Table components\n   --------------------- */\n\nfunction ProcedureTables({ tables }) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return <div className=\"empty\">No procedure / billing tables found.</div>;\n  }\n  return (\n    <div className=\"procedures-root\">\n      {Object.entries(tables).map(([section, rowsRaw]) => {\n        // defensive: ensure rows is an array\n        const rows = Array.isArray(rowsRaw)\n          ? rowsRaw\n          : rowsRaw && typeof rowsRaw === \"object\"\n          ? Object.values(rowsRaw)\n          : [];\n        return (\n          <div className=\"table-block\" key={section}>\n            <h4 className=\"table-section-title\">{section}</h4>\n            <table className=\"excel-table\">\n              <thead>\n                <tr>\n                  <th>Code</th>\n                  <th>Description</th>\n                  <th>Fee</th>\n                </tr>\n              </thead>\n              <tbody>\n                {rows && rows.length > 0 ? (\n                  rows.map((r, i) => {\n                    const [code, desc, fee] = normalizeProcRow(r);\n                    return (\n                      <tr key={i}>\n                        <td>{code}</td>\n                        <td>{desc}</td>\n                        <td>{fee}</td>\n                      </tr>\n                    );\n                  })\n                ) : (\n                  <tr>\n                    <td colSpan={3} style={{ textAlign: \"center\" }}>\n                      No rows\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction DiagnosisTables({ tables, highlightCodes = new Set() }) {\n  if (!tables || Object.keys(tables).length === 0) {\n    return <div className=\"empty\">No diagnosis tables found.</div>;\n  }\n  return (\n    <div className=\"diagnosis-root\">\n      {Object.entries(tables).map(([section, rowsRaw]) => {\n        const rows = Array.isArray(rowsRaw)\n          ? rowsRaw\n          : rowsRaw && typeof rowsRaw === \"object\"\n          ? Object.values(rowsRaw)\n          : [];\n        return (\n          <div className=\"table-block\" key={section}>\n            <h4 className=\"table-section-title\">{section}</h4>\n            <table className=\"excel-table\">\n              <thead>\n                <tr>\n                  <th>Type</th>\n                  <th>Code</th>\n                  <th>Diagnosis</th>\n                </tr>\n              </thead>\n              <tbody>\n                {rows && rows.length > 0 ? (\n                  rows.map((r, i) => {\n                    const type = Array.isArray(r) ? r[0] : r.Type ?? r.type ?? \"ICD-10\";\n                    const code = Array.isArray(r) ? r[1] : r.Code ?? r.code ?? \"\";\n                    const desc =\n                      Array.isArray(r) ? r[2] : r.Diagnosis ?? r.diagnosis ?? r.Description ?? r.description ?? \"\";\n                    const isMatch = highlightCodes.has(String(code).trim());\n                    return (\n                      <tr key={i} className={isMatch ? \"highlight-row\" : \"\"}>\n                        <td>{type}</td>\n                        <td>{code}</td>\n                        <td>{desc}</td>\n                      </tr>\n                    );\n                  })\n                ) : (\n                  <tr>\n                    <td colSpan={3} style={{ textAlign: \"center\" }}>\n                      No rows\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n/* ---------------------\n   Patient block\n   --------------------- */\n\nfunction PatientBlock({ patient, procedureTables = {}, diagnosisTables = {} }) {\n  const icdRegex = /\\b[A-Z][0-9]{2,3}(?:\\.[0-9A-Z]+)?\\b/g;\n  const highlightCodes = new Set();\n  Object.values(patient || {}).forEach((v) => {\n    try {\n      const str = String(v || \"\");\n      const m = str.match(icdRegex);\n      if (m) m.forEach((code) => highlightCodes.add(code.trim()));\n    } catch (e) {}\n  });\n\n  const patientProcs = Array.isArray(patient[\"Procedure / Billing (All Tables)\"])\n    ? patient[\"Procedure / Billing (All Tables)\"]\n    : Array.isArray(patient[\"Procedure / Billing\"])\n    ? patient[\"Procedure / Billing\"]\n    : [];\n\n  const patientDiags = Array.isArray(patient[\"Diagnosis (All Tables)\"])\n    ? patient[\"Diagnosis (All Tables)\"]\n    : Array.isArray(patient[\"Diagnosis\"])\n    ? patient[\"Diagnosis\"]\n    : [];\n\n  const totalProcsFromPatient = patientProcs.length;\n  const totalDiagsFromPatient = patientDiags.length;\n\n  const totalProcsFromGlobal = Object.values(procedureTables || {}).reduce((s, a) => s + ((a && a.length) || 0), 0);\n  const totalDiagsFromGlobal = Object.values(diagnosisTables || {}).reduce((s, a) => s + ((a && a.length) || 0), 0);\n\n  const procsTotal = totalProcsFromPatient + totalProcsFromGlobal;\n  const diagsTotal = totalDiagsFromPatient + totalDiagsFromGlobal;\n\n  // Combined tables for display\n  const combinedProcedureTables = {};\n  if (patientProcs && patientProcs.length) combinedProcedureTables[\"Patient Procedures\"] = patientProcs;\n  Object.entries(procedureTables || {}).forEach(([sec, rows]) => {\n    combinedProcedureTables[sec] = (combinedProcedureTables[sec] || []).concat(rows || []);\n  });\n\n  const combinedDiagnosisTables = {};\n  if (patientDiags && patientDiags.length) combinedDiagnosisTables[\"Patient Diagnosis\"] = patientDiags;\n  Object.entries(diagnosisTables || {}).forEach(([sec, rows]) => {\n    combinedDiagnosisTables[sec] = (combinedDiagnosisTables[sec] || []).concat(rows || []);\n  });\n\n  return (\n    <div className=\"patient-block\">\n      <div className=\"patient-header\">\n        <h4>Patient: {patient[\"Patient Name\"] ?? patient[\"Patient\"] ?? \"Unknown\"}</h4>\n        <div className=\"patient-sub\">Preview of patient fields</div>\n      </div>\n\n      <div className=\"patient-meta-grid\">\n        <MetadataVertical meta={patient} combinedCounts={{ procsTotal, diagsTotal }} />\n      </div>\n\n      <div className=\"patient-tables\">\n        <h5 className=\"section-title\">Procedure / Billing (All Tables)</h5>\n        <ProcedureTables tables={combinedProcedureTables} />\n\n        <h5 className=\"section-title\" style={{ marginTop: 12 }}>\n          Diagnosis (All Tables)\n        </h5>\n        <DiagnosisTables tables={combinedDiagnosisTables} highlightCodes={highlightCodes} />\n\n        {highlightCodes.size > 0 && (\n          <div className=\"matched-note\">Highlighted diagnosis codes found in patient fields: {Array.from(highlightCodes).join(\", \")}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/* ---------------------\n   ResultBlock + main component\n   --------------------- */\n\nfunction ResultBlock({ item }) {\n  const patients = item.patients || item.patients_list || [];\n  const procedureTables =\n    item.procedure_tables || item.procedureTables || item.procedureTables || item.procedure_tables || {};\n  const diagnosisTables = item.diagnosis_tables || item.diagnosisTables || item.diagnosisTables || item.diagnosis_tables || {};\n\n  const procTablesMutable = { ...procedureTables };\n  const diagTablesMutable = { ...diagnosisTables };\n\n  if (Object.keys(procTablesMutable).length === 0 && Array.isArray(item.medical_billing_codes) && item.medical_billing_codes.length) {\n    procTablesMutable[\"Procedures\"] = item.medical_billing_codes.map((r) => (Array.isArray(r) ? r : [r.Code ?? r.code ?? \"\", r.Description ?? r.description ?? \"\", r.Fee ?? r.fee ?? \"\"]));\n  }\n  if (Object.keys(diagTablesMutable).length === 0 && Array.isArray(item.diagnosis_codes) && item.diagnosis_codes.length) {\n    diagTablesMutable[\"Diagnosis\"] = item.diagnosis_codes.map((d) => (Array.isArray(d) ? d : [d.Type ?? d.type ?? \"ICD-10\", d.Code ?? d.code ?? \"\", d.Diagnosis ?? d.diagnosis ?? d.Description ?? d.description ?? \"\"]));\n  }\n\n  const totalProcRows = Object.values(procTablesMutable).reduce((s, a) => s + ((a && a.length) || 0), 0);\n  const totalDiagRows = Object.values(diagTablesMutable).reduce((s, a) => s + ((a && a.length) || 0), 0);\n\n  return (\n    <div className=\"result-block\">\n      <h2 className=\"file-title\">{item.file_name || item.filename || \"Uploaded file\"}</h2>\n      <div className=\"summary\">\n        {patients.length} patient(s) • {totalProcRows} procedure rows • {totalDiagRows} diagnosis rows\n      </div>\n\n      <section className=\"patients-list\">\n        {patients.length === 0 ? (\n          <div className=\"empty\">No patients found</div>\n        ) : (\n          patients.map((p, idx) => <PatientBlock key={idx} patient={p} procedureTables={procTablesMutable} diagnosisTables={diagTablesMutable} />)\n        )}\n      </section>\n\n      <details style={{ marginTop: 12 }}>\n        <summary>Raw response (debug)</summary>\n        <pre style={{ maxHeight: 260, overflow: \"auto\", background: \"#0b1220\", color: \"#cbd5e1\", padding: 8 }}>{JSON.stringify(item, null, 2)}</pre>\n      </details>\n    </div>\n  );\n}\n\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:5000\";\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert(\"⚠️ Session expired or access denied. Please log in again.\");\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) {\n      navigate(\"/\", { replace: true });\n    }\n    // eslint-disable-next-line\n  }, [auth, isAdmin, navigate]);\n\n  const handleSignup = async () => {\n    try {\n      const res = await api.post(\"/auth/signup\", { username, password });\n      setMessage(res.data.message || \"Signup successful!\");\n      const loginRes = await api.post(\"/auth/login\", { username, password });\n      const { token, username: un, role } = loginRes.data;\n      setAuth({ token, username: un, role });\n      localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n    } catch (err) {\n      setMessage(\"Signup failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const res = await api.post(\"/auth/login\", { username, password });\n      if (res.data.token) {\n        const { token, username: un, role } = res.data;\n        setAuth({ token, username: un, role });\n        localStorage.setItem(\"auth\", JSON.stringify({ token, username: un, role }));\n        setMessage(\"Login successful!\");\n      } else {\n        setMessage(\"Invalid credentials\");\n      }\n    } catch (err) {\n      setMessage(\"Login failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert(\"⚠️ You can upload up to 10 files only.\");\n      return;\n    }\n    setFiles(selected);\n    setResults([]);\n  };\n\n  const buildItemFromResponse = (resData, file) => {\n    if (!resData) {\n      return {\n        file_name: file.name,\n        patients: [],\n        procedure_tables: {},\n        diagnosis_tables: {},\n        metadata: {},\n      };\n    }\n\n    // canonical shape: patients, procedure_tables, diagnosis_tables\n    if (resData.patients || resData.procedure_tables || resData.diagnosis_tables) {\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: resData.procedure_tables || resData.procedureTables || {},\n        diagnosis_tables: resData.diagnosis_tables || resData.diagnosisTables || {},\n        metadata: resData.metadata || {},\n      };\n    }\n\n    // older shapes\n    if (resData.medical_billing_codes || resData.diagnosis_codes) {\n      const procedures = {\n        Procedures: Array.isArray(resData.medical_billing_codes)\n          ? resData.medical_billing_codes.map((r) => (Array.isArray(r) ? r : [r.Code ?? r.code ?? \"\", r.Description ?? r.description ?? \"\", r.Fee ?? r.fee ?? \"\"]))\n          : [],\n      };\n      const diags = {\n        Diagnosis: Array.isArray(resData.diagnosis_codes)\n          ? resData.diagnosis_codes.map((d) => (Array.isArray(d) ? d : [d.Type ?? d.type ?? \"ICD-10\", d.Code ?? d.code ?? \"\", d.Diagnosis ?? d.diagnosis ?? d.Description ?? d.description ?? \"\"]))\n          : [],\n      };\n      return {\n        file_name: resData.file_name || resData.filename || file.name,\n        patients: Array.isArray(resData.patients) ? resData.patients : [],\n        procedure_tables: procedures,\n        diagnosis_tables: diags,\n        metadata: resData.metadata || {},\n      };\n    }\n\n    // fallback: if metadata present\n    const meta = resData.metadata || resData;\n    if (!meta[\"File Name\"]) meta[\"File Name\"] = file.name;\n    return {\n      file_name: meta[\"File Name\"],\n      patients: [],\n      procedure_tables: {},\n      diagnosis_tables: {},\n      metadata: meta,\n    };\n  };\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const out = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const res = await api.post(\"/api/ocr\", formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        const item = buildItemFromResponse(res.data || {}, file);\n        out.push(item);\n      }\n      setResults(out);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"⚠️ Upload failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container login-container\">\n        <div className=\"glass-card login-form\">\n          <h2>{isSignup ? \"Signup\" : \"Login\"}</h2>\n          <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"glass-input\" />\n          <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"glass-input\" />\n          {isSignup ? (\n            <button className=\"glass-btn\" onClick={handleSignup}>Signup</button>\n          ) : (\n            <button className=\"glass-btn\" onClick={handleLogin}>Login</button>\n          )}\n          <button className=\"glass-btn\" style={{ marginTop: 8 }} onClick={() => { setIsSignup(!isSignup); setMessage(\"\"); }}>\n            {isSignup ? \"Already have an account? Login\" : \"No account? Signup\"}\n          </button>\n          {message && <p className=\"message\">{message}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">{isAdmin ? \"📂 Admin OCR Upload Tool\" : \"📄 File OCR Extraction Tool\"}</h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\" style={{ marginTop: 8 }}>\n          <button className=\"upload-btn\" onClick={handleUploadAll} disabled={loading}>{loading ? \"Processing...\" : \"Upload All\"}</button>\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">{files.map((file, i) => <li key={i}>📎 {file.name}</li>)}</ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting tables...</p>}\n\n      {results.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Parsed Tables</h3>\n          {results.map((item, idx) => <ResultBlock key={idx} item={item} />)}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}