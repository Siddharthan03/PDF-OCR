{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\n// OCRUpload.jsx (tables-aware grid)\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport '../App.css';\n\n/* ---------------------------------- schema --------------------------------- */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FIXED_HEADERS = [\"Patient Name\", \"Pat Ocr\", \"Responsible Party Name\", \"Rep #\", \"Doc\", \"B-Type\", \"Seen\", \"Service\", \"Type\", \"Office\", \"Code\", \"Description\", \"Amount\", \"Balance\", \"Claim\", \"Loc\", \"Entered\", \"Who\"];\n\n/* ------------------------------ parse helpers ------------------------------ */\nconst joinParts = x => (Array.isArray(x) ? x.join(\" \") : String(x !== null && x !== void 0 ? x : \"\")).trim();\nconst looksLikeName = s => /[A-Za-z]+,[A-Za-z]+/.test(s || \"\");\nconst looksLikeRep = s => /\\b\\d{6,}-\\d\\b/.test(s || \"\");\nconst looksLikeCPT = s => /\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/.test(s || \"\");\n\n// normalize \"7.800.00\" -> \"7,800.00\", etc.\nfunction normalizeAmountToken(tok) {\n  tok = String(tok || \"\").replace(/,/g, \"\").trim();\n  if (/^\\d+\\.\\d{2}$/.test(tok)) {\n    return Number(tok).toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  }\n  const m = /^(\\d+)\\.(\\d{3})\\.?(\\d{2})$/.exec(tok);\n  if (m) {\n    const val = `${m[1]}${m[2]}.${m[3]}`;\n    return Number(val).toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  }\n  const m2 = /^(\\d{1,3}(?:\\.\\d{3})+)\\.0?(\\d{2})$/.exec(tok);\n  if (m2) {\n    const noDots = m2[1].replace(/\\./g, \"\");\n    const val = `${noDots}.${m2[2]}`;\n    return Number(val).toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  }\n  return tok;\n}\nfunction moneyTokens(line) {\n  const raw = (line || \"\").match(/\\d[\\d.,]*\\.\\d{2}/g) || [];\n  return raw.map(normalizeAmountToken);\n}\nconst BAD_LINE = /^(?:Date:|Time\\b|FFCBilling|BeginDate:|Page\\b|Page[A-Za-z]|===|=|AmountBalanceClaim|LocEnteredWho)\\b/i;\nfunction prefilterLines(rawTables) {\n  return (rawTables || []).map(joinParts).map(s => s.replace(/\\u00A0/g, \" \").trim()).filter(s => s && !BAD_LINE.test(s));\n}\n\n// OFFICE is the last 3–4 digit number BEFORE the first code in a line\nfunction extractOfficeFromLine(line) {\n  if (!line) return \"\";\n  const codeIdx = line.search(/\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/);\n  if (codeIdx < 0) return \"\";\n  const left = line.slice(0, codeIdx);\n  const nums = left.match(/\\b\\d{3,4}\\b/g);\n  return nums ? nums[nums.length - 1] : \"\";\n}\n\n// CLAIM/LOC/ENTERED/WHO tail: \"18827 50 01-08-25 DF\"\nfunction extractTailFields(line) {\n  if (!line) return {};\n  const m = /\\b(\\d{4,6})\\b\\s+(\\d{2})\\s+(\\d{2}[-/]\\d{2}[-/]\\d{2})\\s+([A-Z]{2})\\b/.exec(line);\n  if (!m) return {};\n  return {\n    Claim: m[1],\n    Loc: m[2],\n    Entered: m[3],\n    Who: m[4]\n  };\n}\n\n/** Strict auto-parse: replicate the report row logic precisely. */\nfunction autoParseRows(rawTables) {\n  const rows = [];\n  const lines = prefilterLines(rawTables);\n  if (!lines.length) return rows;\n  let ctx = {\n    patient: \"\",\n    rep: \"\"\n  };\n  for (let i = 0; i < lines.length; i++) {\n    const L = lines[i];\n    if (looksLikeName(L)) {\n      ctx.patient = L;\n      for (let k = 1; k <= 3 && i + k < lines.length; k++) {\n        const cand = lines[i + k];\n        if (looksLikeRep(cand)) {\n          ctx.rep = cand.match(/\\b\\d{6,}-\\d\\b/)[0];\n          break;\n        }\n      }\n      continue;\n    }\n    if (looksLikeRep(L)) {\n      ctx.rep = L.match(/\\b\\d{6,}-\\d\\b/)[0];\n      continue;\n    }\n    if (!looksLikeCPT(L)) continue;\n    const codes = L.match(/\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/g) || [];\n    if (!codes.length) continue;\n    const office = extractOfficeFromLine(L);\n    let desc = \"\";\n    let p = i + 1;\n    while (p < Math.min(i + 4, lines.length)) {\n      const cand = lines[p];\n      if (!looksLikeCPT(cand) && moneyTokens(cand).length === 0) {\n        desc = cand.replace(/\\*/g, \" \").replace(/\\s+/g, \" \").trim();\n        p++;\n        break;\n      }\n      p++;\n    }\n    let amount = \"\",\n      balance = \"\";\n    let qStart = desc ? p : i + 1;\n    let foundAmt = false;\n    for (let q = qStart; q < Math.min(qStart + 3, lines.length); q++) {\n      const mt = moneyTokens(lines[q]);\n      if (mt.length) {\n        amount = mt[0];\n        if (mt.length > 1) balance = mt[1];\n        foundAmt = true;\n        let tail = extractTailFields(lines[q]);\n        if (!tail && q + 1 < lines.length) tail = extractTailFields(lines[q + 1]);\n        const headers = [...FIXED_HEADERS];\n        const row = Object.fromEntries(headers.map(h => [h, \"\"]));\n        row[\"Patient Name\"] = ctx.patient;\n        row[\"Rep #\"] = ctx.rep;\n        row[\"Office\"] = office;\n        row[\"Code\"] = codes.join(\" \");\n        row[\"Description\"] = desc;\n        row[\"Amount\"] = amount;\n        row[\"Balance\"] = balance;\n        if (tail) {\n          row[\"Claim\"] = tail.Claim || \"\";\n          row[\"Loc\"] = tail.Loc || \"\";\n          row[\"Entered\"] = tail.Entered || \"\";\n          row[\"Who\"] = tail.Who || \"\";\n        }\n        rows.push(row);\n        i = Math.max(i, q);\n        break;\n      }\n    }\n    if (!foundAmt) continue;\n  }\n  const seen = new Set();\n  return rows.filter(r => {\n    const key = [r[\"Patient Name\"], r[\"Rep #\"], r[\"Code\"], r[\"Amount\"]].join(\"|\");\n    if (seen.has(key)) return false;\n    seen.add(key);\n    return true;\n  });\n}\n\n/* ---------------- tables -> single-grid mapping (new) ---------------- */\nconst NURSING_COLUMNS = [\"MRN\", \"Visit\", \"Patient\", \"Age/DOB\", \"Location\", \"Authored (date/time)\", \"Note summary\"];\nconst OFFICE_COLUMNS = [\"Section\", \"Code\", \"Description\", \"Fee\"];\nconst ICD10_COLUMNS = [\"Type\", \"Code\", \"Diagnosis\"];\nfunction mapBackendToGrid(fileName, apiPayload) {\n  // new backend returns tables directly (preferred)\n  if (apiPayload !== null && apiPayload !== void 0 && apiPayload.office_charges || apiPayload !== null && apiPayload !== void 0 && apiPayload.nursing_notes || apiPayload !== null && apiPayload !== void 0 && apiPayload.icd10 || apiPayload !== null && apiPayload !== void 0 && apiPayload.default) {\n    const nameLower = (fileName || \"\").toLowerCase();\n    const def = apiPayload.default || (nameLower.includes(\"hospital\") || nameLower.includes(\"charges (1).pdf\") ? \"nursing_notes\" : \"office_charges\");\n    if (def === \"nursing_notes\" || nameLower.includes(\"hospital\")) {\n      var _apiPayload$nursing_n;\n      const rows = Array.isArray(apiPayload.nursing_notes) ? apiPayload.nursing_notes : ((_apiPayload$nursing_n = apiPayload.nursing_notes) === null || _apiPayload$nursing_n === void 0 ? void 0 : _apiPayload$nursing_n.rows) || [];\n      return {\n        columns: NURSING_COLUMNS,\n        rows,\n        raw: []\n      };\n    }\n    if (Array.isArray(apiPayload.office_charges) && apiPayload.office_charges.length) {\n      return {\n        columns: OFFICE_COLUMNS,\n        rows: apiPayload.office_charges,\n        raw: []\n      };\n    }\n    if (Array.isArray(apiPayload.icd10) && apiPayload.icd10.length) {\n      return {\n        columns: ICD10_COLUMNS,\n        rows: apiPayload.icd10,\n        raw: []\n      };\n    }\n    return {\n      columns: FIXED_HEADERS,\n      rows: [],\n      raw: []\n    };\n  }\n\n  // legacy backend path: return null so strict parser takes over\n  return null;\n}\n\n/* ---------------------------------- component ------------------------------- */\nconst OCRUpload = ({\n  auth,\n  setAuth,\n  isAdmin = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]); // [{ columns, rows, raw }]\n  const [summaries, setSummaries] = useState([]); // [{ ...fields }]\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({\n    baseURL: API_BASE\n  });\n  api.interceptors.request.use(config => {\n    if (auth !== null && auth !== void 0 && auth.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if ([401, 403].includes((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status)) {\n      localStorage.clear();\n      setAuth(null);\n      alert('⚠️ Session expired or access denied. Please log in again.');\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    if (auth !== null && auth !== void 0 && auth.token && !isAdmin) navigate('/', {\n      replace: true\n    });\n  }, [auth, isAdmin, navigate]);\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', {\n        username,\n        password\n      });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', {\n        username,\n        password\n      });\n      const {\n        token,\n        username: un,\n        role\n      } = loginRes.data;\n      setAuth({\n        token,\n        username: un,\n        role\n      });\n      localStorage.setItem('auth', JSON.stringify({\n        token,\n        username: un,\n        role\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage('Signup failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', {\n        username,\n        password\n      });\n      if (res.data.token) {\n        const {\n          token,\n          username: un,\n          role\n        } = res.data;\n        setAuth({\n          token,\n          username: un,\n          role\n        });\n        localStorage.setItem('auth', JSON.stringify({\n          token,\n          username: un,\n          role\n        }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage('Login failed: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setSummaries([]);\n    setDownloadReady(false);\n  };\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const outTables = [];\n      const outSummaries = [];\n      for (const [idx, file] of files.entries()) {\n        var _res$data, _report$columns;\n        const formData = new FormData();\n        formData.append('file', file);\n\n        // Use updated backend: returns tables directly for PDF\n        const res = await api.post('/api/ocr', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        // Try mapping new tables shape (preferred)\n        let tableForGrid = mapBackendToGrid(file.name, res.data);\n\n        // Legacy shape\n        const md = ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.metadata) || {};\n        const report = md.report || {};\n        const rawTables = Array.isArray(md.tables) ? md.tables : [];\n        const fieldArr = Array.isArray(md.fields) ? md.fields : [];\n        let rows = Array.isArray(report.rows) ? report.rows : [];\n        let columns = (_report$columns = report.columns) !== null && _report$columns !== void 0 && _report$columns.length ? report.columns : FIXED_HEADERS;\n        if (!tableForGrid && (!rows || rows.length === 0)) {\n          rows = autoParseRows(rawTables);\n        }\n        if (tableForGrid) {\n          outTables[idx] = {\n            columns: tableForGrid.columns,\n            rows: tableForGrid.rows,\n            raw: tableForGrid.raw\n          };\n        } else {\n          outTables[idx] = {\n            columns,\n            rows,\n            raw: rawTables\n          };\n        }\n\n        // Summary (optional; legacy only)\n        const wanted = [\"Charges\", \"Receipts\", \"Commissions\", \"Total Due Doctor\", \"Credits\", \"Debits\", \"Bal Fwd\", \"Fin Chg\", \"Direct Paymnt\", \"Assess\", \"Acct. Rec.\", \"Total Entries\", \"NOTE\"];\n        const summaryObj = {};\n        fieldArr.forEach(({\n          Field,\n          Value\n        }) => {\n          const hit = wanted.find(w => w.toLowerCase() === String(Field || \"\").toLowerCase());\n          if (hit) summaryObj[hit] = Value !== null && Value !== void 0 ? Value : \"\";\n        });\n        if (rawTables.length) {\n          const joined = rawTables.map(joinParts).join(\" \");\n          const grab = label => {\n            const m = new RegExp(`${label.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}\\\\s*:?\\\\s*([0-9,.-]+)`, \"i\").exec(joined);\n            return m ? m[1] : \"\";\n          };\n          wanted.forEach(k => {\n            if (!summaryObj[k] || summaryObj[k] === \"\") {\n              if (k === \"NOTE\") {\n                const m = /NOTE\\s*:?(.+?)(?:\\s{2,}|$)/i.exec(joined);\n                if (m) summaryObj[\"NOTE\"] = m[1].trim();\n              } else {\n                summaryObj[k] = grab(k) || \"\";\n              }\n            }\n          });\n        }\n        outSummaries[idx] = summaryObj;\n      }\n      setTables(outTables);\n      setSummaries(outSummaries);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadExcel = () => {\n    const wb = XLSX.utils.book_new();\n\n    // Report rows per file\n    tables.forEach((t, i) => {\n      const data = (t.rows || []).map(r => {\n        const o = {};\n        (t.columns || FIXED_HEADERS).forEach(c => {\n          var _r$c;\n          o[c] = (_r$c = r === null || r === void 0 ? void 0 : r[c]) !== null && _r$c !== void 0 ? _r$c : \"\";\n        });\n        return o;\n      });\n      const ws = XLSX.utils.json_to_sheet(data.length ? data : [{\n        Note: \"No rows\"\n      }]);\n      XLSX.utils.book_append_sheet(wb, ws, `ReportRows_${i + 1}`);\n    });\n\n    // Fields sheet (legacy summaries)\n    const fieldsRows = summaries.map((s, i) => {\n      var _files$i;\n      return {\n        File: ((_files$i = files[i]) === null || _files$i === void 0 ? void 0 : _files$i.name) || `File_${i + 1}`,\n        ...s\n      };\n    });\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(fieldsRows.length ? fieldsRows : [{\n      Note: \"No summaries\"\n    }]), \"Fields\");\n\n    // Raw text per file (legacy)\n    tables.forEach((t, i) => {\n      const raw = (t.raw || []).map((line, idx) => ({\n        Line: idx + 1,\n        Text: joinParts(line)\n      }));\n      const ws = XLSX.utils.json_to_sheet(raw.length ? raw : [{\n        Note: \"No raw text\"\n      }]);\n      XLSX.utils.book_append_sheet(wb, ws, `RawText_${i + 1}`);\n    });\n    const wbout = XLSX.write(wb, {\n      type: 'array',\n      bookType: 'xlsx'\n    });\n    saveAs(new Blob([wbout], {\n      type: 'application/octet-stream'\n    }), 'ocr_export.xlsx');\n  };\n  if (!(auth !== null && auth !== void 0 && auth.token) && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Signup' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), isSignup ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-btn\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        onClick: () => {\n          setIsSignup(!isSignup);\n          setMessage('');\n        },\n        children: isSignup ? 'Already have an account? Login' : 'No account? Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this);\n  }\n  const ExcelGrid = ({\n    title,\n    columns,\n    rows,\n    summary\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-grid-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"file-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid compact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-grid-scroll\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"excel-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"excel-th\",\n                children: col\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [rows && rows.length > 0 ? rows.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(col => {\n                var _r$col;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"excel-td\",\n                  children: (_r$col = r === null || r === void 0 ? void 0 : r[col]) !== null && _r$col !== void 0 ? _r$col : ''\n                }, col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 23\n                }, this);\n              })\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: columns.length,\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"No rows (showing Summary and Raw OCR below)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), summary && Object.keys(summary).length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"summary-row\",\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: columns.length,\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: [\"Charges: \", summary[\"Charges\"] || 0, \" | Receipts: \", summary[\"Receipts\"] || 0, \" | Credits: \", summary[\"Credits\"] || 0, \" | Debits: \", summary[\"Debits\"] || 0, \" | Balance Fwd: \", summary[\"Bal Fwd\"] || 0, \" | Acct. Rec.: \", summary[\"Acct. Rec.\"] || 0, \" | Total Entries: \", summary[\"Total Entries\"] || 0, summary[\"NOTE\"] ? ` | Note: ${summary[\"NOTE\"]}` : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n  const SummaryCards = ({\n    summary\n  }) => {\n    const keys = [\"Charges\", \"Receipts\", \"Commissions\", \"Total Due Doctor\", \"Credits\", \"Debits\", \"Bal Fwd\", \"Fin Chg\", \"Direct Paymnt\", \"Assess\", \"Acct. Rec.\", \"Total Entries\", \"NOTE\"];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-3 gap-2 my-3\",\n      children: keys.map(k => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-white/15 rounded-lg p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs opacity-70\",\n          children: k\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: summary !== null && summary !== void 0 && summary[k] ? String(summary[k]) : \"—\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this)]\n      }, k, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this);\n  };\n  const RawPanel = ({\n    lines\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-64 overflow-auto border border-white/15 rounded-xl p-3 text-xs leading-6 my-2\",\n    children: (lines !== null && lines !== void 0 && lines.length ? lines : [\"(no raw text)\"]).map((t, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"whitespace-pre-wrap\",\n      children: [i + 1, \". \", joinParts(t)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: handleDownloadExcel,\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting table...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 19\n    }, this), tables.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCA Procedure Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this), files.map((file, idx) => {\n        var _tables$idx, _tables$idx2, _tables$idx3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-10\",\n          children: [/*#__PURE__*/_jsxDEV(ExcelGrid, {\n            title: file.name,\n            columns: ((_tables$idx = tables[idx]) === null || _tables$idx === void 0 ? void 0 : _tables$idx.columns) || FIXED_HEADERS,\n            rows: ((_tables$idx2 = tables[idx]) === null || _tables$idx2 === void 0 ? void 0 : _tables$idx2.rows) || [],\n            summary: summaries[idx] || {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"section-heading\",\n            style: {\n              marginTop: '12px'\n            },\n            children: \"\\uD83D\\uDCCC Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SummaryCards, {\n            summary: summaries[idx] || {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"section-heading\",\n            style: {\n              marginTop: '12px'\n            },\n            children: \"\\uD83E\\uDDFE Raw OCR Lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RawPanel, {\n            lines: ((_tables$idx3 = tables[idx]) === null || _tables$idx3 === void 0 ? void 0 : _tables$idx3.raw) || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this)]\n        }, `wrap-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 483,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"LzJOiSnKr3bq63SE5thwgkESO00=\", false, function () {\n  return [useNavigate];\n});\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","XLSX","saveAs","jsxDEV","_jsxDEV","FIXED_HEADERS","joinParts","x","Array","isArray","join","String","trim","looksLikeName","s","test","looksLikeRep","looksLikeCPT","normalizeAmountToken","tok","replace","Number","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","m","exec","val","m2","noDots","moneyTokens","line","raw","match","map","BAD_LINE","prefilterLines","rawTables","filter","extractOfficeFromLine","codeIdx","search","left","slice","nums","length","extractTailFields","Claim","Loc","Entered","Who","autoParseRows","rows","lines","ctx","patient","rep","i","L","k","cand","codes","office","desc","p","Math","min","amount","balance","qStart","foundAmt","q","mt","tail","headers","row","Object","fromEntries","h","push","max","seen","Set","r","key","has","add","NURSING_COLUMNS","OFFICE_COLUMNS","ICD10_COLUMNS","mapBackendToGrid","fileName","apiPayload","office_charges","nursing_notes","icd10","default","nameLower","toLowerCase","def","includes","_apiPayload$nursing_n","columns","OCRUpload","auth","setAuth","isAdmin","_s","navigate","files","setFiles","tables","setTables","summaries","setSummaries","loading","setLoading","downloadReady","setDownloadReady","isSignup","setIsSignup","username","setUsername","password","setPassword","message","setMessage","API_BASE","process","env","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","Authorization","response","error","_error$response","status","localStorage","clear","alert","Promise","reject","handleSignup","res","post","data","loginRes","un","role","setItem","JSON","stringify","err","_err$response","_err$response$data","handleLogin","_err$response2","_err$response2$data","handleFileChange","e","selected","from","target","handleUploadAll","outTables","outSummaries","idx","file","entries","_res$data","_report$columns","formData","FormData","append","tableForGrid","name","md","metadata","report","fieldArr","fields","wanted","summaryObj","forEach","Field","Value","hit","find","w","joined","grab","label","RegExp","console","handleDownloadExcel","wb","utils","book_new","t","o","c","_r$c","ws","json_to_sheet","Note","book_append_sheet","fieldsRows","_files$i","File","Line","Text","wbout","write","type","bookType","Blob","className","children","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","onClick","ExcelGrid","title","summary","col","_r$col","colSpan","style","textAlign","keys","fontWeight","SummaryCards","RawPanel","htmlFor","id","accept","multiple","_tables$idx","_tables$idx2","_tables$idx3","marginTop","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["// OCRUpload.jsx (tables-aware grid)\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport '../App.css';\n\n/* ---------------------------------- schema --------------------------------- */\nconst FIXED_HEADERS = [\n  \"Patient Name\",\"Pat Ocr\",\"Responsible Party Name\",\"Rep #\",\"Doc\",\n  \"B-Type\",\"Seen\",\"Service\",\"Type\",\"Office\",\"Code\",\"Description\",\n  \"Amount\",\"Balance\",\"Claim\",\"Loc\",\"Entered\",\"Who\"\n];\n\n/* ------------------------------ parse helpers ------------------------------ */\nconst joinParts = (x) => (Array.isArray(x) ? x.join(\" \") : String(x ?? \"\")).trim();\n\nconst looksLikeName   = (s) => /[A-Za-z]+,[A-Za-z]+/.test(s || \"\");\nconst looksLikeRep    = (s) => /\\b\\d{6,}-\\d\\b/.test(s || \"\");\nconst looksLikeCPT    = (s) => /\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/.test(s || \"\");\n\n// normalize \"7.800.00\" -> \"7,800.00\", etc.\nfunction normalizeAmountToken(tok) {\n  tok = String(tok || \"\").replace(/,/g, \"\").trim();\n  if (/^\\d+\\.\\d{2}$/.test(tok)) {\n    return Number(tok).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  const m = /^(\\d+)\\.(\\d{3})\\.?(\\d{2})$/.exec(tok);\n  if (m) {\n    const val = `${m[1]}${m[2]}.${m[3]}`;\n    return Number(val).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  const m2 = /^(\\d{1,3}(?:\\.\\d{3})+)\\.0?(\\d{2})$/.exec(tok);\n  if (m2) {\n    const noDots = m2[1].replace(/\\./g, \"\");\n    const val = `${noDots}.${m2[2]}`;\n    return Number(val).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n  }\n  return tok;\n}\nfunction moneyTokens(line) {\n  const raw = (line || \"\").match(/\\d[\\d.,]*\\.\\d{2}/g) || [];\n  return raw.map(normalizeAmountToken);\n}\nconst BAD_LINE = /^(?:Date:|Time\\b|FFCBilling|BeginDate:|Page\\b|Page[A-Za-z]|===|=|AmountBalanceClaim|LocEnteredWho)\\b/i;\n\nfunction prefilterLines(rawTables) {\n  return (rawTables || [])\n    .map(joinParts)\n    .map(s => s.replace(/\\u00A0/g, \" \").trim())\n    .filter(s => s && !BAD_LINE.test(s));\n}\n\n// OFFICE is the last 3–4 digit number BEFORE the first code in a line\nfunction extractOfficeFromLine(line) {\n  if (!line) return \"\";\n  const codeIdx = line.search(/\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/);\n  if (codeIdx < 0) return \"\";\n  const left = line.slice(0, codeIdx);\n  const nums = left.match(/\\b\\d{3,4}\\b/g);\n  return nums ? nums[nums.length - 1] : \"\";\n}\n\n// CLAIM/LOC/ENTERED/WHO tail: \"18827 50 01-08-25 DF\"\nfunction extractTailFields(line) {\n  if (!line) return {};\n  const m = /\\b(\\d{4,6})\\b\\s+(\\d{2})\\s+(\\d{2}[-/]\\d{2}[-/]\\d{2})\\s+([A-Z]{2})\\b/.exec(line);\n  if (!m) return {};\n  return { Claim: m[1], Loc: m[2], Entered: m[3], Who: m[4] };\n}\n\n/** Strict auto-parse: replicate the report row logic precisely. */\nfunction autoParseRows(rawTables) {\n  const rows = [];\n  const lines = prefilterLines(rawTables);\n  if (!lines.length) return rows;\n\n  let ctx = { patient: \"\", rep: \"\" };\n\n  for (let i = 0; i < lines.length; i++) {\n    const L = lines[i];\n\n    if (looksLikeName(L)) {\n      ctx.patient = L;\n      for (let k = 1; k <= 3 && i + k < lines.length; k++) {\n        const cand = lines[i + k];\n        if (looksLikeRep(cand)) {\n          ctx.rep = cand.match(/\\b\\d{6,}-\\d\\b/)[0];\n          break;\n        }\n      }\n      continue;\n    }\n    if (looksLikeRep(L)) {\n      ctx.rep = L.match(/\\b\\d{6,}-\\d\\b/)[0];\n      continue;\n    }\n\n    if (!looksLikeCPT(L)) continue;\n\n    const codes = (L.match(/\\b(?:\\d{4,5}(?:-[A-Z0-9]{2})?|[A-Z]\\d{4})\\b/g) || []);\n    if (!codes.length) continue;\n\n    const office = extractOfficeFromLine(L);\n\n    let desc = \"\";\n    let p = i + 1;\n    while (p < Math.min(i + 4, lines.length)) {\n      const cand = lines[p];\n      if (!looksLikeCPT(cand) && moneyTokens(cand).length === 0) {\n        desc = cand.replace(/\\*/g, \" \").replace(/\\s+/g, \" \").trim();\n        p++;\n        break;\n      }\n      p++;\n    }\n\n    let amount = \"\", balance = \"\";\n    let qStart = desc ? p : (i + 1);\n    let foundAmt = false;\n    for (let q = qStart; q < Math.min(qStart + 3, lines.length); q++) {\n      const mt = moneyTokens(lines[q]);\n      if (mt.length) {\n        amount = mt[0];\n        if (mt.length > 1) balance = mt[1];\n        foundAmt = true;\n\n        let tail = extractTailFields(lines[q]);\n        if (!tail && q + 1 < lines.length) tail = extractTailFields(lines[q + 1]);\n\n        const headers = [...FIXED_HEADERS];\n        const row = Object.fromEntries(headers.map(h => [h, \"\"]));\n        row[\"Patient Name\"] = ctx.patient;\n        row[\"Rep #\"]        = ctx.rep;\n        row[\"Office\"]       = office;\n        row[\"Code\"]         = codes.join(\" \");\n        row[\"Description\"]  = desc;\n        row[\"Amount\"]       = amount;\n        row[\"Balance\"]      = balance;\n        if (tail) {\n          row[\"Claim\"]   = tail.Claim || \"\";\n          row[\"Loc\"]     = tail.Loc || \"\";\n          row[\"Entered\"] = tail.Entered || \"\";\n          row[\"Who\"]     = tail.Who || \"\";\n        }\n        rows.push(row);\n        i = Math.max(i, q);\n        break;\n      }\n    }\n    if (!foundAmt) continue;\n  }\n\n  const seen = new Set();\n  return rows.filter(r => {\n    const key = [r[\"Patient Name\"], r[\"Rep #\"], r[\"Code\"], r[\"Amount\"]].join(\"|\");\n    if (seen.has(key)) return false;\n    seen.add(key);\n    return true;\n  });\n}\n\n/* ---------------- tables -> single-grid mapping (new) ---------------- */\nconst NURSING_COLUMNS = [\"MRN\",\"Visit\",\"Patient\",\"Age/DOB\",\"Location\",\"Authored (date/time)\",\"Note summary\"];\nconst OFFICE_COLUMNS = [\"Section\",\"Code\",\"Description\",\"Fee\"];\nconst ICD10_COLUMNS = [\"Type\",\"Code\",\"Diagnosis\"];\n\nfunction mapBackendToGrid(fileName, apiPayload) {\n  // new backend returns tables directly (preferred)\n  if (apiPayload?.office_charges || apiPayload?.nursing_notes || apiPayload?.icd10 || apiPayload?.default) {\n    const nameLower = (fileName || \"\").toLowerCase();\n    const def = apiPayload.default || (\n      (nameLower.includes(\"hospital\") || nameLower.includes(\"charges (1).pdf\")) ? \"nursing_notes\" : \"office_charges\"\n    );\n\n    if (def === \"nursing_notes\" || nameLower.includes(\"hospital\")) {\n      const rows = Array.isArray(apiPayload.nursing_notes) ? apiPayload.nursing_notes :\n                   (apiPayload.nursing_notes?.rows || []);\n      return { columns: NURSING_COLUMNS, rows, raw: [] };\n    }\n    if (Array.isArray(apiPayload.office_charges) && apiPayload.office_charges.length) {\n      return { columns: OFFICE_COLUMNS, rows: apiPayload.office_charges, raw: [] };\n    }\n    if (Array.isArray(apiPayload.icd10) && apiPayload.icd10.length) {\n      return { columns: ICD10_COLUMNS, rows: apiPayload.icd10, raw: [] };\n    }\n    return { columns: FIXED_HEADERS, rows: [], raw: [] };\n  }\n\n  // legacy backend path: return null so strict parser takes over\n  return null;\n}\n\n/* ---------------------------------- component ------------------------------- */\nconst OCRUpload = ({ auth, setAuth, isAdmin = false }) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [tables, setTables] = useState([]);       // [{ columns, rows, raw }]\n  const [summaries, setSummaries] = useState([]); // [{ ...fields }]\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage]   = useState('');\n\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n  const api = axios.create({ baseURL: API_BASE });\n\n  api.interceptors.request.use((config) => {\n    if (auth?.token) config.headers.Authorization = `Bearer ${auth.token}`;\n    return config;\n  });\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if ([401, 403].includes(error.response?.status)) {\n        localStorage.clear();\n        setAuth(null);\n        alert('⚠️ Session expired or access denied. Please log in again.');\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    if (auth?.token && !isAdmin) navigate('/', { replace: true });\n  }, [auth, isAdmin, navigate]);\n\n  const handleSignup = async () => {\n    try {\n      const res = await api.post('/auth/signup', { username, password });\n      setMessage(res.data.message || 'Signup successful!');\n      const loginRes = await api.post('/auth/login', { username, password });\n      const { token, username: un, role } = loginRes.data;\n      setAuth({ token, username: un, role });\n      localStorage.setItem('auth', JSON.stringify({ token, username: un, role }));\n    } catch (err) {\n      setMessage('Signup failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const res = await api.post('/auth/login', { username, password });\n      if (res.data.token) {\n        const { token, username: un, role } = res.data;\n        setAuth({ token, username: un, role });\n        localStorage.setItem('auth', JSON.stringify({ token, username: un, role }));\n        setMessage('Login successful!');\n      } else {\n        setMessage('Invalid credentials');\n      }\n    } catch (err) {\n      setMessage('Login failed: ' + (err.response?.data?.error || err.message));\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files || []);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setTables([]);\n    setSummaries([]);\n    setDownloadReady(false);\n  };\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      const outTables = [];\n      const outSummaries = [];\n\n      for (const [idx, file] of files.entries()) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        // Use updated backend: returns tables directly for PDF\n        const res = await api.post('/api/ocr', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n\n        // Try mapping new tables shape (preferred)\n        let tableForGrid = mapBackendToGrid(file.name, res.data);\n\n        // Legacy shape\n        const md        = res.data?.metadata || {};\n        const report    = md.report || {};\n        const rawTables = Array.isArray(md.tables) ? md.tables : [];\n        const fieldArr  = Array.isArray(md.fields) ? md.fields : [];\n\n        let rows = Array.isArray(report.rows) ? report.rows : [];\n        let columns = report.columns?.length ? report.columns : FIXED_HEADERS;\n\n        if (!tableForGrid && (!rows || rows.length === 0)) {\n          rows = autoParseRows(rawTables);\n        }\n\n        if (tableForGrid) {\n          outTables[idx] = { columns: tableForGrid.columns, rows: tableForGrid.rows, raw: tableForGrid.raw };\n        } else {\n          outTables[idx] = { columns, rows, raw: rawTables };\n        }\n\n        // Summary (optional; legacy only)\n        const wanted = [\n          \"Charges\",\"Receipts\",\"Commissions\",\"Total Due Doctor\",\"Credits\",\"Debits\",\n          \"Bal Fwd\",\"Fin Chg\",\"Direct Paymnt\",\"Assess\",\"Acct. Rec.\",\"Total Entries\",\"NOTE\"\n        ];\n        const summaryObj = {};\n        fieldArr.forEach(({ Field, Value }) => {\n          const hit = wanted.find(w => w.toLowerCase() === String(Field || \"\").toLowerCase());\n          if (hit) summaryObj[hit] = Value ?? \"\";\n        });\n        if (rawTables.length) {\n          const joined = rawTables.map(joinParts).join(\" \");\n          const grab = (label) => {\n            const m = new RegExp(`${label.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}\\\\s*:?\\\\s*([0-9,.-]+)`, \"i\").exec(joined);\n            return m ? m[1] : \"\";\n          };\n          wanted.forEach(k => {\n            if (!summaryObj[k] || summaryObj[k] === \"\") {\n              if (k === \"NOTE\") {\n                const m = /NOTE\\s*:?(.+?)(?:\\s{2,}|$)/i.exec(joined);\n                if (m) summaryObj[\"NOTE\"] = m[1].trim();\n              } else {\n                summaryObj[k] = grab(k) || \"\";\n              }\n            }\n          });\n        }\n        outSummaries[idx] = summaryObj;\n      }\n\n      setTables(outTables);\n      setSummaries(outSummaries);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('⚠️ Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownloadExcel = () => {\n    const wb = XLSX.utils.book_new();\n\n    // Report rows per file\n    tables.forEach((t, i) => {\n      const data = (t.rows || []).map(r => {\n        const o = {};\n        (t.columns || FIXED_HEADERS).forEach(c => { o[c] = r?.[c] ?? \"\"; });\n        return o;\n      });\n      const ws = XLSX.utils.json_to_sheet(data.length ? data : [{ Note: \"No rows\" }]);\n      XLSX.utils.book_append_sheet(wb, ws, `ReportRows_${i + 1}`);\n    });\n\n    // Fields sheet (legacy summaries)\n    const fieldsRows = summaries.map((s, i) => ({ File: files[i]?.name || `File_${i + 1}`, ...s }));\n    XLSX.utils.book_append_sheet(\n      wb,\n      XLSX.utils.json_to_sheet(fieldsRows.length ? fieldsRows : [{ Note: \"No summaries\" }]),\n      \"Fields\"\n    );\n\n    // Raw text per file (legacy)\n    tables.forEach((t, i) => {\n      const raw = (t.raw || []).map((line, idx) => ({\n        Line: idx + 1,\n        Text: joinParts(line)\n      }));\n      const ws = XLSX.utils.json_to_sheet(raw.length ? raw : [{ Note: \"No raw text\" }]);\n      XLSX.utils.book_append_sheet(wb, ws, `RawText_${i + 1}`);\n    });\n\n    const wbout = XLSX.write(wb, { type: 'array', bookType: 'xlsx' });\n    saveAs(new Blob([wbout], { type: 'application/octet-stream' }), 'ocr_export.xlsx');\n  };\n\n  if (!auth?.token && !isAdmin) {\n    return (\n      <div className=\"container\">\n        <h2>{isSignup ? 'Signup' : 'Login'}</h2>\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"auth-input\" />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"auth-input\" />\n        {isSignup ? (\n          <button className=\"auth-btn\" onClick={handleSignup}>Signup</button>\n        ) : (\n          <button className=\"auth-btn\" onClick={handleLogin}>Login</button>\n        )}\n        <button className=\"toggle-btn\" onClick={() => { setIsSignup(!isSignup); setMessage(''); }}>\n          {isSignup ? 'Already have an account? Login' : 'No account? Signup'}\n        </button>\n        {message && <p className=\"auth-message\">{message}</p>}\n      </div>\n    );\n  }\n\n  const ExcelGrid = ({ title, columns, rows, summary }) => (\n    <div className=\"excel-grid-wrapper\">\n      <div className=\"excel-grid-header\">\n        <h4 className=\"file-title\">{title}</h4>\n      </div>\n      <div className=\"excel-grid compact\">\n        <div className=\"excel-grid-scroll\">\n          <table className=\"excel-table\">\n            <thead>\n              <tr>\n                {columns.map((col) => (\n                  <th key={col} className=\"excel-th\">{col}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {rows && rows.length > 0 ? (\n                rows.map((r, i) => (\n                  <tr key={i}>\n                    {columns.map((col) => (\n                      <td key={col} className=\"excel-td\">{r?.[col] ?? ''}</td>\n                    ))}\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan={columns.length} style={{ textAlign: 'center' }}>\n                    No rows (showing Summary and Raw OCR below)\n                  </td>\n                </tr>\n              )}\n              {summary && Object.keys(summary).length > 0 && (\n                <tr className=\"summary-row\">\n                  <td colSpan={columns.length} style={{ fontWeight: 'bold' }}>\n                    Charges: {summary[\"Charges\"] || 0} | Receipts: {summary[\"Receipts\"] || 0} | \n                    Credits: {summary[\"Credits\"] || 0} | Debits: {summary[\"Debits\"] || 0} | \n                    Balance Fwd: {summary[\"Bal Fwd\"] || 0} | Acct. Rec.: {summary[\"Acct. Rec.\"] || 0} | \n                    Total Entries: {summary[\"Total Entries\"] || 0}\n                    {summary[\"NOTE\"] ? ` | Note: ${summary[\"NOTE\"]}` : \"\"}\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n\n  const SummaryCards = ({ summary }) => {\n    const keys = [\n      \"Charges\",\"Receipts\",\"Commissions\",\"Total Due Doctor\",\"Credits\",\"Debits\",\n      \"Bal Fwd\",\"Fin Chg\",\"Direct Paymnt\",\"Assess\",\"Acct. Rec.\",\"Total Entries\",\"NOTE\"\n    ];\n    return (\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 my-3\">\n        {keys.map(k => (\n          <div key={k} className=\"border border-white/15 rounded-lg p-2\">\n            <div className=\"text-xs opacity-70\">{k}</div>\n            <div className=\"font-semibold\">{summary?.[k] ? String(summary[k]) : \"—\"}</div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const RawPanel = ({ lines }) => (\n    <div className=\"h-64 overflow-auto border border-white/15 rounded-xl p-3 text-xs leading-6 my-2\">\n      {(lines?.length ? lines : [\"(no raw text)\"]).map((t, i) => (\n        <div key={i} className=\"whitespace-pre-wrap\">\n          {i + 1}. {joinParts(t)}\n        </div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">\n          {isAdmin ? '📂 Admin OCR Upload Tool' : '📄 File OCR Extraction Tool'}\n        </h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">Upload up to 10 files:</label>\n        <input type=\"file\" id=\"file-upload\" accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\" multiple onChange={handleFileChange} />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>Upload All</button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={handleDownloadExcel}>\n              ⬇️ Download Excel\n            </button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, i) => (<li key={i}>📎 {file.name}</li>))}\n          </ul>\n        </section>\n      )}\n\n      {loading && <p className=\"loading-text\">⏳ Extracting table...</p>}\n\n      {tables.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📊 Procedure Report</h3>\n\n          {files.map((file, idx) => (\n            <div key={`wrap-${idx}`} className=\"mb-10\">\n              <ExcelGrid\n                title={file.name}\n                columns={tables[idx]?.columns || FIXED_HEADERS}\n                rows={tables[idx]?.rows || []}\n                summary={summaries[idx] || {}}\n              />\n              <h4 className=\"section-heading\" style={{ marginTop: '12px' }}>📌 Summary</h4>\n              <SummaryCards summary={summaries[idx] || {}} />\n              <h4 className=\"section-heading\" style={{ marginTop: '12px' }}>🧾 Raw OCR Lines</h4>\n              <RawPanel lines={tables[idx]?.raw || []} />\n            </div>\n          ))}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}