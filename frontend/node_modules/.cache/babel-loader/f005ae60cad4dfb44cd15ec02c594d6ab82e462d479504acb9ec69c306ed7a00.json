{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRUpload = ({\n  auth,\n  setAuth\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [allMetadata, setAllMetadata] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n  useEffect(() => {\n    if (!(auth !== null && auth !== void 0 && auth.token)) {\n      window.location.href = \"/login\"; // redirect if not logged in\n    }\n  }, [auth]);\n  const handleFileChange = e => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setAllMetadata([]);\n    setDownloadReady(false);\n  };\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n    setLoading(true);\n    try {\n      await axios.get('http://localhost:5000/api/reset', {\n        headers: {\n          Authorization: `Bearer ${auth.token}`\n        }\n      });\n      setAllMetadata([]);\n      const all = [];\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await axios.post('http://localhost:5000/api/ocr', formData, {\n          headers: {\n            Authorization: `Bearer ${auth.token}`\n          }\n        });\n        const meta = res.data.metadata || {};\n        meta['File Name'] = file.name;\n        meta['Patient Signature'] = res.data.patient_signature;\n        meta['Physician Signature'] = res.data.physician_signature;\n        all.push(meta);\n        await axios.post('http://localhost:5000/api/export-excel', {\n          metadata: meta\n        }, {\n          headers: {\n            Authorization: `Bearer ${auth.token}`\n          }\n        });\n      }\n      setAllMetadata(all);\n      setDownloadReady(true);\n    } catch (err) {\n      var _err$response;\n      console.error('Upload failed:', err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        alert(\"Session expired. Please log in again.\");\n        localStorage.clear();\n        setAuth(null);\n      } else {\n        alert('Upload failed. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadExcel = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/export-excel', {\n        headers: {\n          Authorization: `Bearer ${auth.token}`\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'metadata_output.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (err) {\n      console.error('Excel download failed:', err);\n      alert('Download failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-heading\",\n        children: \"\\uD83D\\uDCC4 File OCR Extraction Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-label\",\n        children: \"Upload up to 10 files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        accept: \".pdf,.jpg,.jpeg,.png,.doc,.docx\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUploadAll,\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: handleDownloadExcel,\n          children: \"\\u2B07\\uFE0F Download Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCC1 Selected Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"file-list\",\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD83D\\uDCCE \", file.name]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"\\u23F3 Extracting metadata...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), allMetadata.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-heading\",\n        children: \"\\uD83D\\uDCCB Extracted Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), allMetadata.map((meta, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"file-title\",\n          children: meta['File Name']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"metadata-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(meta).map(([key, value], i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"field-cell\",\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"value-cell\",\n                children: (key === 'Patient Signature' || key === 'Physician Signature') && value !== null && value !== void 0 && value.includes('/signatures/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost:5000${value}`,\n                  alt: key,\n                  className: \"signature-img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 27\n                }, this) : value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, fileIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRUpload, \"7nbRpZZGs9gkpNkS6v8EHDu5v+4=\");\n_c = OCRUpload;\nexport default OCRUpload;\nvar _c;\n$RefreshReg$(_c, \"OCRUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OCRUpload","auth","setAuth","_s","files","setFiles","allMetadata","setAllMetadata","loading","setLoading","downloadReady","setDownloadReady","token","window","location","href","handleFileChange","e","selected","Array","from","target","length","alert","handleUploadAll","get","headers","Authorization","all","file","formData","FormData","append","res","post","meta","data","metadata","name","patient_signature","physician_signature","push","err","_err$response","console","error","response","status","localStorage","clear","handleDownloadExcel","responseType","url","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","accept","multiple","onChange","onClick","map","index","fileIndex","Object","entries","key","value","i","includes","src","alt","_c","$RefreshReg$"],"sources":["/Users/siddharthan/Desktop/GetMax/PDF-OCR/frontend/src/components/OCRUpload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\n\nconst OCRUpload = ({ auth, setAuth }) => {\n  const [files, setFiles] = useState([]);\n  const [allMetadata, setAllMetadata] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadReady, setDownloadReady] = useState(false);\n\n  useEffect(() => {\n    if (!auth?.token) {\n      window.location.href = \"/login\"; // redirect if not logged in\n    }\n  }, [auth]);\n\n  const handleFileChange = (e) => {\n    const selected = Array.from(e.target.files);\n    if (selected.length > 10) {\n      alert('⚠️ You can upload up to 10 files only.');\n      return;\n    }\n    setFiles(selected);\n    setAllMetadata([]);\n    setDownloadReady(false);\n  };\n\n  const handleUploadAll = async () => {\n    if (!files.length) return;\n\n    setLoading(true);\n    try {\n      await axios.get('http://localhost:5000/api/reset', {\n        headers: { Authorization: `Bearer ${auth.token}` }\n      });\n      setAllMetadata([]);\n      const all = [];\n\n      for (const file of files) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const res = await axios.post('http://localhost:5000/api/ocr', formData, {\n          headers: { Authorization: `Bearer ${auth.token}` }\n        });\n        const meta = res.data.metadata || {};\n        meta['File Name'] = file.name;\n        meta['Patient Signature'] = res.data.patient_signature;\n        meta['Physician Signature'] = res.data.physician_signature;\n\n        all.push(meta);\n        await axios.post('http://localhost:5000/api/export-excel', { metadata: meta }, {\n          headers: { Authorization: `Bearer ${auth.token}` }\n        });\n      }\n\n      setAllMetadata(all);\n      setDownloadReady(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      if (err.response?.status === 401) {\n        alert(\"Session expired. Please log in again.\");\n        localStorage.clear();\n        setAuth(null);\n      } else {\n        alert('Upload failed. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownloadExcel = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/export-excel', {\n        headers: { Authorization: `Bearer ${auth.token}` },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'metadata_output.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (err) {\n      console.error('Excel download failed:', err);\n      alert('Download failed. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h2 className=\"main-heading\">📄 File OCR Extraction Tool</h2>\n      </header>\n\n      <section className=\"upload-section\">\n        <label htmlFor=\"file-upload\" className=\"upload-label\">\n          Upload up to 10 files:\n        </label>\n        <input\n          type=\"file\"\n          id=\"file-upload\"\n          accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n          multiple\n          onChange={handleFileChange}\n        />\n        <div className=\"button-row\">\n          <button className=\"upload-btn\" onClick={handleUploadAll}>Upload All</button>\n          {downloadReady && (\n            <button className=\"download-btn\" onClick={handleDownloadExcel}>\n              ⬇️ Download Excel\n            </button>\n          )}\n        </div>\n      </section>\n\n      {files.length > 0 && (\n        <section className=\"file-preview\">\n          <h3 className=\"section-heading\">📁 Selected Files</h3>\n          <ul className=\"file-list\">\n            {files.map((file, index) => (\n              <li key={index}>📎 {file.name}</li>\n            ))}\n          </ul>\n        </section>\n      )}\n\n      {loading && (\n        <p className=\"loading-text\">⏳ Extracting metadata...</p>\n      )}\n\n      {allMetadata.length > 0 && (\n        <section className=\"results-section\">\n          <h3 className=\"section-heading\">📋 Extracted Metadata</h3>\n\n          {allMetadata.map((meta, fileIndex) => (\n            <div key={fileIndex} className=\"table-container\">\n              <h4 className=\"file-title\">{meta['File Name']}</h4>\n              <table className=\"metadata-table\">\n                <thead>\n                  <tr>\n                    <th>Field</th>\n                    <th>Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(meta).map(([key, value], i) => (\n                    <tr key={i}>\n                      <td className=\"field-cell\">{key}</td>\n                      <td className=\"value-cell\">\n                        {(key === 'Patient Signature' || key === 'Physician Signature') && value?.includes('/signatures/') ? (\n                          <img\n                            src={`http://localhost:5000${value}`}\n                            alt={key}\n                            className=\"signature-img\"\n                          />\n                        ) : (\n                          value\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ))}\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default OCRUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}